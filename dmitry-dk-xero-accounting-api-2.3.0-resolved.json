{
  "openapi": "3.0.0",
  "info": {
    "title": "Accounting API",
    "termsOfService": "https://developer.xero.com/xero-developer-platform-terms-conditions/",
    "contact": {
      "name": "Xero Platform Team",
      "url": "https://developer.xero.com",
      "email": "api@xero.com"
    },
    "version": "2.3.0"
  },
  "servers": [
    {
      "url": "https://api.xero.com/api.xro/2.0",
      "description": "Xero Accounting API server"
    }
  ],
  "paths": {
    "/Accounts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve the full chart of accounts",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Account.StatusEnum.ACTIVE + '\" AND Type==\"' + Account.BankAccountTypeEnum.BANK + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Account::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Name ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Accounts array with 0 to n Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                },
                "example": "{ \"Accounts\": [{ \"AccountID\": \"ebd06280-af70-4bed-97c6-7451a454ad85\", \"Code\": \"091\", \"Name\": \"Business Savings Account\", \"Type\": \"BANK\", \"TaxType\": \"NONE\", \"EnablePaymentsToAccount\": false, \"BankAccountNumber\": \"0209087654321050\", \"BankAccountType\": \"BANK\", \"CurrencyCode\": \"NZD\" },{ \"AccountID\": \"7d05a53d-613d-4eb2-a2fc-dcb6adb80b80\", \"Code\": \"200\", \"Name\": \"Sales\", \"Type\": \"REVENUE\", \"TaxType\": \"OUTPUT2\", \"Description\": \"Income from any normal business activity\", \"EnablePaymentsToAccount\": false }] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a new chart of accounts",
        "operationId": "createAccount",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "Account object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              },
              "example": "{ code: \"123456\", name: \"Foobar\", type: AccountType.EXPENSE, description: \"Hello World\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - created new Account and return response of type Accounts array with new Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                },
                "example": "{ \"Id\": \"11814c9d-3b5e-492e-93b0-fad16bf3244f\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550793549392)\\/\", \"Accounts\": [ { \"AccountID\": \"66b262e2-561e-423e-8937-47d558f13442\", \"Code\": \"123456\", \"Name\": \"Foobar\", \"Status\": \"ACTIVE\", \"Type\": \"EXPENSE\", \"TaxType\": \"INPUT\", \"Description\": \"Hello World\", \"Class\": \"EXPENSE\", \"EnablePaymentsToAccount\": false, \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\", \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\": \"\\/Date(1550793549320+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"AccountID\": \"00000000-0000-0000-0000-000000000000\", \"Code\": \"123456\", \"Name\": \"Foobar\", \"Type\": \"EXPENSE\", \"Description\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"Please enter a unique Name.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "account = { code: \"123456\", name: \"Foobar\", type: XeroRuby::Accounting::AccountType::EXPENSE, description: \"Hello World\" }",
        "x-php": [
          "$account = new XeroAPI\\XeroPHP\\Models\\Accounting\\Account;",
          "$account->setCode(\"987654321\");",
          "$account->setName(\"FooBar\");",
          "$account->setType(\"EXPENSE\");",
          "$account->setDescription(\"Hello World\");",
          "$result = $apiInstance->createAccount($xeroTenantId,$account);"
        ]
      }
    },
    "/Accounts/{AccountID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a single chart of accounts",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for retrieving single object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Accounts array with one Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                },
                "example": "{ \"Id\": \"323455cc-9511-4451-a873-248d2983f38e\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550797359081)\\/\", \"Accounts\": [ { \"AccountID\": \"99ce6032-0678-4aa0-8148-240c75fee33a\", \"Code\": \"123456\", \"Name\": \"FooBar\", \"Status\": \"ACTIVE\", \"Type\": \"EXPENSE\", \"TaxType\": \"INPUT\", \"Description\": \"Hello World\", \"Class\": \"EXPENSE\", \"EnablePaymentsToAccount\": false, \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\", \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\": \"\\/Date(1550797359120+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a chart of accounts",
        "operationId": "updateAccount",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for retrieving single object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "description": "Request of type Accounts array with one Account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              },
              "example": "{ accounts: [{ code: \"123456\", name: \"BarFoo\", accountID: \"00000000-0000-0000-000-000000000000\", type: AccountType.EXPENSE, description: \"GoodBye World\", taxType: TaxType.INPUT }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - update existing Account and return response of type Accounts array with updated Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                },
                "example": "{ \"Id\": \"9012e75c-ec08-40a9-ae15-153fc1f35c4d\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550795389340)\\/\", \"Accounts\": [ { \"AccountID\": \"99ce6032-0678-4aa0-8148-240c75fee33a\", \"Code\": \"654321\", \"Name\": \"BarFoo\", \"Status\": \"ACTIVE\", \"Type\": \"EXPENSE\", \"TaxType\": \"INPUT\", \"Description\": \"Good Bye World\", \"Class\": \"EXPENSE\", \"EnablePaymentsToAccount\": false, \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\", \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\": \"\\/Date(1550795389333+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"AccountID\": \"00000000-0000-0000-0000-000000000000\", \"Code\": \"123456\", \"Name\": \"Foobar\", \"Type\": \"EXPENSE\", \"Description\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"Please enter a unique Name.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete a chart of accounts",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for retrieving single object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - delete existing Account and return response of type Accounts array with deleted Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                },
                "example": "{ \"Id\": \"76bb0543-8efe-4acc-b7f6-67dfcdec37b4\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550798217216)\\/\", \"Accounts\": [ { \"AccountID\": \"7f3c0bec-f3e7-4073-b4d6-cc56dd027ef1\", \"Code\": \"123456\", \"Name\": \"FooBar\", \"Status\": \"DELETED\", \"Type\": \"EXPENSE\", \"TaxType\": \"INPUT\", \"Description\": \"Hello World\", \"Class\": \"EXPENSE\", \"EnablePaymentsToAccount\": false, \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\", \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\": \"\\/Date(1550798217210+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"AccountID\": \"00000000-0000-0000-0000-000000000000\", \"Code\": \"123456\", \"Name\": \"Foobar\", \"Type\": \"EXPENSE\", \"Description\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"Please enter a unique Name.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Account"
    },
    "/Accounts/{AccountID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments for accounts",
        "operationId": "getAccountAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for Account object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"439c1573-3cd8-4697-a9f6-81fa651ee8f3\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550852630329)\\/\", \"Attachments\": [ { \"AttachmentID\": \"52a643be-cd5c-489f-9778-53a9fd337756\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Account"
    },
    "/Accounts/{AccountID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve specific Attachment on Account",
        "operationId": "getAccountAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for Account object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for Attachment object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Account as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Account"
    },
    "/Accounts/{AccountID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachment on Account by Filename",
        "operationId": "getAccountAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for Account object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Account as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create Attachment on Account",
        "operationId": "createAccountAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for Account object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"724cdff5-bcd1-4c5c-977e-e864c24258e0\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550856817769)\\/\", \"Attachments\": [ { \"AttachmentID\": \"ab95b276-9dce-4925-9077-439818ba270f\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update Attachment on Account by Filename",
        "operationId": "updateAccountAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "AccountID",
            "in": "path",
            "description": "Unique identifier for Account object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"c8d6413a-1da2-4faa-9848-21f60443e906\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550859714477)\\/\", \"Attachments\": [ { \"AttachmentID\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Account"
    },
    "/BatchPayments": {
      "description": "Batch payments allow you to bundle multiple bills or invoices into one payment transaction. This means a single payment in Xero can be reconciled with a single transaction on the bank statement making for a much simpler bank reconciliation experience.",
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Retrieve either one or many BatchPayments for invoices",
        "operationId": "getBatchPayments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + BatchPayment.StatusEnum.AUTHORISED + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::BatchPayment::AUTHORISED}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Date ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BatchPayments array of BatchPayment objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPayments"
                },
                "example": "{ \"Id\": \"6ab84949-4fe5-4788-a135-4d8f690d24d7\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550866184006)\\/\", \"BatchPayments\": [ { \"Account\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\" }, \"Reference\": \"Hello World\", \"BatchPaymentID\": \"d0e9bbbf-5b8a-48b6-906a-035591fcb061\", \"DateString\": \"2017-11-28T00:00:00\", \"Date\": \"\\/Date(1511827200000+0000)\\/\", \"Payments\": [ { \"Invoice\": { \"InvoiceID\": \"0975dec2-0cf6-498d-9c9f-c6775b45c61d\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"97ec2ef8-f4d6-4de5-9f2a-385d41cdc2fc\", \"Amount\": 200.00 }, { \"Invoice\": { \"InvoiceID\": \"600982d9-6605-4e11-afa1-d8dec2be7b52\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"e232795f-b919-4865-a754-12f6ae8402c0\", \"Amount\": 200.00 }, { \"Invoice\": { \"InvoiceID\": \"99a2bd54-4ab1-413c-90bb-57f6464fe5d6\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"c2d571a5-38ff-4d37-9d43-dfadb4ad53ff\", \"Amount\": 200.00 }, { \"Invoice\": { \"InvoiceID\": \"c81942c8-bfc5-4c88-a21a-b892a4a8c1c5\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"0f3c18dc-49bd-47a4-a875-03c84a29978f\", \"Amount\": 200.00 }, { \"Invoice\": { \"InvoiceID\": \"6c9a1d89-8319-42f6-87d6-7690e748af85\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"43541eed-f3ac-44ac-88cb-9fe1cb7ed8b8\", \"Amount\": 200.00 } ], \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\", \"TotalAmount\": 1000.00, \"UpdatedDateUTC\": \"\\/Date(1511893792820+0000)\\/\", \"IsReconciled\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Create one or many BatchPayments for invoices",
        "operationId": "createBatchPayment",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "BatchPayments with an array of Payments in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchPayments"
              },
              "example": "{ batchPayments: [ { account: { accountID: \"00000000-0000-0000-000-000000000000\" }, reference: \"ref\", date: \"2018-08-01\", payments: [ { account: { code: \"001\" }, date: \"2019-12-31\", amount: 500, invoice: { invoiceID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, type: Invoice.TypeEnum.ACCPAY } } ] } ] }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type BatchPayments array of BatchPayment objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPayments"
                },
                "example": "{ \"Id\": \"424745ed-6356-46ad-87d4-3585f9062fb4\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550865988111)\\/\", \"BatchPayments\": [ { \"Account\": { \"AccountID\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\" }, \"Reference\": \"Foobar123\", \"BatchPaymentID\": \"d318c343-208e-49fe-b04a-45642349bcf1\", \"DateString\": \"2019-02-22T00:00:00\", \"Date\": \"\\/Date(1550793600000+0000)\\/\", \"Payments\": [ { \"Invoice\": { \"InvoiceID\": \"3323652c-155e-433b-8a73-4dde7cfbf410\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"c05098fa-ae3c-4f00-80ec-0a9df07dedff\", \"Amount\": 1.00 }, { \"Invoice\": { \"InvoiceID\": \"e4abafb4-1f5b-4d9f-80b3-9a7b815bc302\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"96409489-2f7d-4804-9a6d-6b939b0e038a\", \"Amount\": 1.00 }, { \"Invoice\": { \"InvoiceID\": \"e6039672-b161-40cd-b07b-a0178e7186ad\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] }, \"PaymentID\": \"d2796067-bf71-4f06-b386-81f1454fa866\", \"Amount\": 1.00 } ], \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\", \"TotalAmount\": 3.00, \"UpdatedDateUTC\": \"\\/Date(1550865987783+0000)\\/\", \"IsReconciled\": false } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "batch_payments = { batch_payments: [{ account: { account_id: \"00000000-0000-0000-000-000000000000\" }, reference: \"ref\", date: \"2018-08-01\", payments: [{  account: { code: \"001\" }, date: \"2019-12-31\", amount: 500, invoice: { invoice_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, type: XeroRuby::Accounting::Invoice::ACCPAY }}]}]}"
      },
      "x-related-model": "BatchPayments"
    },
    "/BatchPayments/{BatchPaymentID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history from a Batch Payment",
        "operationId": "getBatchPaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BatchPaymentID",
            "in": "path",
            "description": "Unique identifier for BatchPayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"c58e2f9c-baad-42a4-8bb7-f32b6f88fa04\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550898452503)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Approved\", \"DateUTCString\": \"2017-11-28T18:29:52\", \"DateUTC\": \"\\/Date(1511893792813+0000)\\/\", \"User\": \"Sidney Maestre\", \"Details\": \"\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a history record for a Batch Payment",
        "operationId": "createBatchPaymentHistoryRecord",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BatchPaymentID",
            "in": "path",
            "description": "Unique identifier for BatchPayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "BatchPayment"
    },
    "/BankTransactions": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any spend or receive money transactions",
        "operationId": "getBankTransactions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + BankTransaction.StatusEnum.AUTHORISED + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::BankTransaction::AUTHORISED}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Type ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Up to 100 bank transactions will be returned in a single API call with line items details",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with 0 to n BankTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactions"
                },
                "example": "{ \"Id\":\"18e7e80c-5dca-4a57-974e-8b572cc5efe8\", \"Status\":\"OK\", \"ProviderName\":\"Xero API Partner\", \"DateTimeUTC\":\"\\/Date(1551212901659)\\/\", \"BankTransactions\":[ { \"BankTransactionID\":\"db54aab0-ad40-4ced-bcff-0940ba20db2c\", \"BankAccount\":{ \"AccountID\":\"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\":\"088\", \"Name\":\"Business Wells Fargo\" }, \"BatchPayment\": { \"Account\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\" }, \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"Date\": \"\\/Date(1476316800000+0000)\\/\", \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\", \"TotalAmount\": \"12.00\", \"UpdatedDateUTC\": \"\\/Date(1476392487037+0000)\\/\", \"IsReconciled\": \"false\" }, \"Type\":\"RECEIVE\", \"IsReconciled\":false, \"PrepaymentID\":\"cb62750f-b49c-464b-a45b-e2e2c514c8a9\", \"HasAttachments\":true, \"Contact\":{ \"ContactID\":\"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"Name\":\"sam\", \"Addresses\":[\n], \"Phones\":[\n], \"ContactGroups\":[\n], \"ContactPersons\":[\n], \"HasValidationErrors\":false }, \"DateString\":\"2016-10-13T00:00:00\", \"Date\":\"\\/Date(1476316800000+0000)\\/\", \"Status\":\"AUTHORISED\", \"LineAmountTypes\":\"Exclusive\", \"LineItems\":[\n], \"SubTotal\":10.00, \"TotalTax\":0.00, \"Total\":10.00, \"UpdatedDateUTC\":\"\\/Date(1476389616437+0000)\\/\", \"CurrencyCode\":\"USD\" }, { \"BankTransactionID\":\"29a69c45-64ca-4805-a1cc-34990de837b3\", \"BankAccount\":{ \"AccountID\":\"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\":\"088\", \"Name\":\"Business Wells Fargo\" }, \"Type\":\"SPEND-OVERPAYMENT\", \"IsReconciled\":false, \"OverpaymentID\":\"7d457db3-3b0a-47e9-8b79-81252a7bcdcb\", \"HasAttachments\":false, \"Contact\":{ \"ContactID\":\"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"Name\":\"sam\", \"Addresses\":[\n], \"Phones\":[\n], \"ContactGroups\":[\n], \"ContactPersons\":[\n], \"HasValidationErrors\":false }, \"DateString\":\"2016-10-13T00:00:00\", \"Date\":\"\\/Date(1476316800000+0000)\\/\", \"Status\":\"AUTHORISED\", \"LineAmountTypes\":\"NoTax\", \"LineItems\":[\n], \"SubTotal\":9.00, \"TotalTax\":0.00, \"Total\":9.00, \"UpdatedDateUTC\":\"\\/Date(1476389930500+0000)\\/\", \"CurrencyCode\":\"USD\" }, { \"BankTransactionID\":\"0b89bf5c-d40b-4514-96be-36a739fb0188\", \"BankAccount\":{ \"AccountID\":\"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\":\"088\", \"Name\":\"Business Wells Fargo\" }, \"Type\":\"SPEND-OVERPAYMENT\", \"IsReconciled\":false, \"OverpaymentID\":\"bf9b5f33-c0d6-4182-84a2-40848023e5a1\", \"HasAttachments\":false, \"Contact\":{ \"ContactID\":\"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"Name\":\"sam\", \"Addresses\":[\n], \"Phones\":[\n], \"ContactGroups\":[\n], \"ContactPersons\":[\n], \"HasValidationErrors\":false }, \"DateString\":\"2016-10-13T00:00:00\", \"Date\":\"\\/Date(1476316800000+0000)\\/\", \"Status\":\"AUTHORISED\", \"LineAmountTypes\":\"NoTax\", \"LineItems\":[\n], \"SubTotal\":8.00, \"TotalTax\":0.00, \"Total\":8.00, \"UpdatedDateUTC\":\"\\/Date(1476392487037+0000)\\/\", \"CurrencyCode\":\"USD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more spend or receive money transaction",
        "operationId": "createBankTransactions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "BankTransactions with an array of BankTransaction objects in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactions"
              },
              "example": "{ bankTransactions: [{ type: BankTransaction.TypeEnum.SPEND, contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"000\" } ], bankAccount: { code: \"000\" }}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with new BankTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactions"
                },
                "example": "{ \"Id\": \"5bc1d776-3c7f-4fe8-9b2d-09e747077a88\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551213568047)\\/\", \"BankTransactions\": [ { \"BankTransactionID\": \"1289c190-e46d-434b-9628-463ffdb52f00\", \"BankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\": \"Business Wells Fargo\" }, \"Type\": \"SPEND\", \"Reference\": \"\", \"IsReconciled\": false, \"CurrencyRate\": 1.000000, \"Contact\": { \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\", \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\": \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\", \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\", \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-02-26T00:00:00\", \"Date\": \"\\/Date(1551139200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Inclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"TAX001\", \"TaxAmount\": 1.74, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"d2a06879-da49-4d6c-83b5-72a93a523ec6\", \"ValidationErrors\": [] } ], \"SubTotal\": 18.26, \"TotalTax\": 1.74, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1551213567813+0000)\\/\", \"CurrencyCode\": \"USD\", \"StatusAttributeString\": \"ERROR\", \"ValidationErrors\": [ { \"Message\": \"The Contact must contain at least 1 of the following elements to identify the contact: Name, ContactID, ContactNumber\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "bank_transactions = { bank_transactions: [{ type: XeroRuby::Accounting::BankTransaction::SPEND, contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"000\" } ], bank_account: { code: \"000\" }}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update or create one or more spend or receive money transaction",
        "operationId": "updateOrCreateBankTransactions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactions"
              },
              "example": "{ bankTransactions: [{ type: BankTransaction.TypeEnum.SPEND, contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"000\" } ], bankAccount: { code: \"000\" }}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with new BankTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactions"
                },
                "example": "{ \"Id\": \"5bc1d776-3c7f-4fe8-9b2d-09e747077a88\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551213568047)\\/\", \"BankTransactions\": [ { \"BankTransactionID\": \"1289c190-e46d-434b-9628-463ffdb52f00\", \"BankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\": \"Business Wells Fargo\" }, \"Type\": \"SPEND\", \"Reference\": \"\", \"IsReconciled\": false, \"CurrencyRate\": 1.000000, \"Contact\": { \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\", \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\": \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\", \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\", \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-02-26T00:00:00\", \"Date\": \"\\/Date(1551139200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Inclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"TAX001\", \"TaxAmount\": 1.74, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"d2a06879-da49-4d6c-83b5-72a93a523ec6\", \"ValidationErrors\": [] } ], \"SubTotal\": 18.26, \"TotalTax\": 1.74, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1551213567813+0000)\\/\", \"CurrencyCode\": \"USD\", \"StatusAttributeString\": \"ERROR\", \"ValidationErrors\": [ { \"Message\": \"The Contact must contain at least 1 of the following elements to identify the contact: Name, ContactID, ContactNumber\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "bank_transactions = { bank_transactions: [{ type: XeroRuby::Accounting::BankTransaction::SPEND, contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"000\" }], bank_account: { code: \"000\" }}]}"
      }
    },
    "/BankTransactions/{BankTransactionID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a single spend or receive money transaction",
        "operationId": "getBankTransaction",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with a specific BankTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactions"
                },
                "example": "{ \"Id\": \"612e204d-21ab-469b-ac84-afe0697b4461\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551212902962)\\/\", \"BankTransactions\": [ { \"BankTransactionID\": \"db54aab0-ad40-4ced-bcff-0940ba20db2c\", \"BankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\": \"Business Wells Fargo\" }, \"BatchPayment\": { \"Account\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\" }, \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"Date\": \"\\/Date(1476316800000+0000)\\/\", \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\", \"TotalAmount\": \"12.00\", \"UpdatedDateUTC\": \"\\/Date(1476392487037+0000)\\/\", \"IsReconciled\": \"false\" }, \"Type\": \"RECEIVE\", \"IsReconciled\": false, \"CurrencyRate\": 1.000000, \"PrepaymentID\": \"cb62750f-b49c-464b-a45b-e2e2c514c8a9\", \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"45dd3143-9856-42d2-9a6c-53814f67a33e\", \"FileName\": \"sample2.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/banktransaction/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample2.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ], \"Contact\": { \"ContactID\": \"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"sam\", \"EmailAddress\": \"\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1518821703467+0000)\\/\", \"ContactGroups\": [], \"DefaultCurrency\": \"USD\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2016-10-13T00:00:00\", \"Date\": \"\\/Date(1476316800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"hello\", \"UnitAmount\": 10.00, \"TaxType\": \"OUTPUT\", \"TaxAmount\": 0.00, \"LineAmount\": 10.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"40bec527-a744-4149-96c5-0ab643b51158\", \"ValidationErrors\": [] } ], \"SubTotal\": 10.00, \"TotalTax\": 0.00, \"Total\": 10.00, \"UpdatedDateUTC\": \"\\/Date(1476389616437+0000)\\/\", \"CurrencyCode\": \"USD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a single spend or receive money transaction",
        "operationId": "updateBankTransaction",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransactions"
              },
              "example": "{ bankTransactions: [{ type: BankTransaction.TypeEnum.SPEND, date: \"2019-02-25\", reference: \"You just updated\", status: BankTransaction.StatusEnum.AUTHORISED, bankTransactionID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, bankAccount: { accountID: \"00000000-0000-0000-000-000000000000\" }}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type BankTransactions array with updated BankTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactions"
                },
                "example": "{ \"Id\": \"f2c7f037-96fc-49bd-8f59-d3c7bfdd4746\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551213568875)\\/\", \"BankTransactions\": [ { \"BankTransactionID\": \"1289c190-e46d-434b-9628-463ffdb52f00\", \"BankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\": \"Business Wells Fargo\" }, \"Type\": \"SPEND\", \"Reference\": \"You just updated\", \"IsReconciled\": false, \"CurrencyRate\": 1.000000, \"HasAttachments\": false, \"Attachments\": [], \"Contact\": { \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\", \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\": \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\", \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\", \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-02-25T00:00:00\", \"Date\": \"\\/Date(1551052800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Inclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"TAX001\", \"TaxAmount\": 1.74, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"d2a06879-da49-4d6c-83b5-72a93a523ec6\", \"ValidationErrors\": [] } ], \"SubTotal\": 18.26, \"TotalTax\": 1.74, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1551213568733+0000)\\/\", \"CurrencyCode\": \"USD\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "{ bank_transactions: [{ type: XeroRuby::Accounting::BankTransaction::SPEND, date: \"2019-02-25\", reference: \"You just updated\", status: XeroRuby::Accounting::BankTransaction::AUTHORISED, bank_transaction_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, bank_account: { account_id: \"00000000-0000-0000-000-000000000000\" }}]}"
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any attachments to bank transactions",
        "operationId": "getBankTransactionAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with 0 to n Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"c50798e1-29e9-4a30-a452-bb6e42e400c8\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551303999577)\\/\", \"Attachments\": [ { \"AttachmentID\": \"4508a692-e52c-4ad8-a138-2f13e22bf57b\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"45dd3143-9856-42d2-9a6c-53814f67a33e\", \"FileName\": \"sample2.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample2.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on a specific BankTransaction",
        "operationId": "getBankTransactionAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Xero generated unique identifier for an attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for BankTransaction as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "BankTransaction"
    },
    "/BankTransactions/{BankTransactionID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on BankTransaction by Filename",
        "operationId": "getBankTransactionAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for BankTransaction as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create an Attachment on BankTransaction by Filename",
        "operationId": "createBankTransactionAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"572ad2fe-8c23-45aa-82f9-864485327685\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551286166630)\\/\", \"Attachments\": [ { \"AttachmentID\": \"4508a692-e52c-4ad8-a138-2f13e22bf57b\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update an Attachment on BankTransaction by Filename",
        "operationId": "updateBankTransactionAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"572ad2fe-8c23-45aa-82f9-864485327685\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551286166630)\\/\", \"Attachments\": [ { \"AttachmentID\": \"4508a692-e52c-4ad8-a138-2f13e22bf57b\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "BankTransaction"
    },
    "/BankTransactions/{BankTransactionID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history from a bank transactions",
        "operationId": "getBankTransactionsHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create history record for a bank transactions",
        "operationId": "createBankTransactionHistoryRecord",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransactionID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "BankTransaction"
    },
    "/BankTransfers": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve all bank transfers",
        "operationId": "getBankTransfers",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "HasAttachments==true"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Amount ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of BankTransfers array of 0 to N BankTransfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransfers"
                },
                "example": "{ \"Id\": \"dfc0d130-9007-4a98-a5ef-6f01700f18e2\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311318988)\\/\", \"BankTransfers\": [ { \"BankTransferID\": \"6221458a-ef7a-4d5f-9b1c-1b96ce03833c\", \"CreatedDateUTCString\": \"2016-10-17T20:46:01\", \"CreatedDateUTC\": \"\\/Date(1476737161140+0000)\\/\", \"DateString\": \"2016-11-12T21:10:00\", \"Date\": \"\\/Date(1478985000000+0000)\\/\", \"FromBankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Name\": \"Business Wells Fargo\" }, \"ToBankAccount\": { \"AccountID\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Name\": \"My Savings\" }, \"Amount\": 20.00, \"FromBankTransactionID\": \"a3eca480-bc04-4292-9bbd-5c57b8ba12b4\", \"ToBankTransactionID\": \"4ca13f40-f3a0-4530-a442-a600f5696118\", \"HasAttachments\": true }, { \"BankTransferID\": \"9f0153d5-617c-4903-887b-3875807aa27a\", \"CreatedDateUTCString\": \"2016-10-21T23:28:42\", \"CreatedDateUTC\": \"\\/Date(1477092522333+0000)\\/\", \"DateString\": \"2016-10-19T20:10:00\", \"Date\": \"\\/Date(1476907800000+0000)\\/\", \"FromBankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Name\": \"Business Wells Fargo\" }, \"ToBankAccount\": { \"AccountID\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Name\": \"My Savings\" }, \"Amount\": 20.00, \"FromBankTransactionID\": \"cb74287e-5682-4973-b354-93e2c7a836d3\", \"ToBankTransactionID\": \"4c48ba6c-f318-4405-aee6-b5efa2c70f55\", \"HasAttachments\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a bank transfers",
        "operationId": "createBankTransfer",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "BankTransfers with array of BankTransfer objects in request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransfers"
              },
              "example": "{ bankTransfers: [{ fromBankAccount: { code: \"000\", accountID: \"00000000-0000-0000-000-000000000000\" }, toBankAccount: { code: \"001\", accountID: \"00000000-0000-0000-000-000000000000\" }, amount: \"50.00\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of BankTransfers array of one BankTransfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransfers"
                },
                "example": "{ \"Id\": \"ae767b68-affd-4e17-bac0-83eaf1854dcd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311317475)\\/\", \"BankTransfers\": [ { \"BankTransferID\": \"76eea4b6-f026-464c-b6f3-5fb39a196145\", \"DateString\": \"2019-02-27T00:00:00\", \"Date\": \"\\/Date(1551225600000+0000)\\/\", \"FromBankAccount\": { \"AccountID\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Code\": \"090\", \"Name\": \"My Savings\" }, \"ToBankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\": \"Business Wells Fargo\" }, \"Amount\": 50.00, \"FromBankTransactionID\": \"e4059952-5acb-4a56-b076-53fad85f2930\", \"ToBankTransactionID\": \"88e4ac17-293b-4e5a-8d8b-3ce3a0b1ee17\", \"CurrencyRate\": 1.000000, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "bank_transfers = { bank_transfers: [{ from_bank_account: { code: \"000\", account_id: \"00000000-0000-0000-000-000000000000\" }, to_bank_account: { code: \"001\", account_id: \"00000000-0000-0000-000-000000000000\" }, amount: \"50.00\" }]}"
      },
      "x-related-model": "BankTransfer"
    },
    "/BankTransfers/{BankTransferID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any bank transfers",
        "operationId": "getBankTransfer",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of BankTransfers array with one BankTransfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransfers"
                },
                "example": "{ \"Id\": \"1a5fa46d-5ece-4ef2-89b1-77c293b5d833\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311320368)\\/\", \"BankTransfers\": [ { \"BankTransferID\": \"6221458a-ef7a-4d5f-9b1c-1b96ce03833c\", \"CreatedDateUTCString\": \"2016-10-17T20:46:01\", \"CreatedDateUTC\": \"\\/Date(1476737161140+0000)\\/\", \"DateString\": \"2016-11-12T21:10:00\", \"Date\": \"\\/Date(1478985000000+0000)\\/\", \"FromBankAccount\": { \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\": \"Business Wells Fargo\" }, \"ToBankAccount\": { \"AccountID\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Code\": \"090\", \"Name\": \"My Savings\" }, \"Amount\": 20.00, \"FromBankTransactionID\": \"a3eca480-bc04-4292-9bbd-5c57b8ba12b4\", \"ToBankTransactionID\": \"4ca13f40-f3a0-4530-a442-a600f5696118\", \"CurrencyRate\": 1.000000, \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"e05a6fd8-0e47-47a9-9799-b809c8267260\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/banktransfer/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "BankTransfer"
    },
    "/BankTransfers/{BankTransferID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments from  bank transfers",
        "operationId": "getBankTransferAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of 0 to N Attachment for a Bank Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"5cb6b587-7b02-46b6-97fe-d8ad8f20321b\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551397557272)\\/\", \"Attachments\": [ { \"AttachmentID\": \"e05a6fd8-0e47-47a9-9799-b809c8267260\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "BankTransfer"
    },
    "/BankTransfers/{BankTransferID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on BankTransfer",
        "operationId": "getBankTransferAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Xero generated unique identifier for an Attachment to a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of binary data from the Attachment to a Bank Transfer",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "BankTransfer"
    },
    "/BankTransfers/{BankTransferID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on BankTransfer by file name",
        "operationId": "getBankTransferAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a Bank Transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of binary data from the Attachment to a Bank Transfer",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransferAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a Bank Transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of 0 to N Attachment for a Bank Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"b73ba149-76a9-4e7c-a5c6-b9230022f416\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551397998372)\\/\", \"Attachments\": [ { \"AttachmentID\": \"9478be4c-c707-48c1-b4a7-83d8eaf442b5\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "operationId": "updateBankTransferAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a Bank Transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of Attachments array of 0 to N Attachment for a Bank Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"c7810140-19c2-4ff7-b3ec-b7e95ce7becf\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551398138226)\\/\", \"Attachments\": [ { \"AttachmentID\": \"0851935c-c4c5-4de8-9247-ce22efde6f82\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "BankTransfer"
    },
    "/BankTransfers/{BankTransferID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history from a bank transfers",
        "operationId": "getBankTransferHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "operationId": "createBankTransferHistoryRecord",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BankTransferID",
            "in": "path",
            "description": "Xero generated unique identifier for a bank transfer",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "BankTransfer"
    },
    "/BrandingThemes": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve all the BrandingThemes",
        "operationId": "getBrandingThemes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BrandingThemes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingThemes"
                },
                "example": "{ \"Id\": \"d1a1beea-bdfe-4ee4-9dbc-27226a26cd68\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550881711906)\\/\", \"BrandingThemes\": [ { \"BrandingThemeID\": \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\", \"Name\": \"Standard\", \"SortOrder\": 0, \"CreatedDateUTC\": \"\\/Date(1464967643813+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "BrandingTheme"
    },
    "/BrandingThemes/{BrandingThemeID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specific BrandingThemes",
        "operationId": "getBrandingTheme",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BrandingThemeID",
            "in": "path",
            "description": "Unique identifier for a Branding Theme",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type BrandingThemes with one BrandingTheme",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingThemes"
                },
                "example": "{ \"Id\": \"df671650-cf14-4a7f-b609-4166933719bc\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550881713071)\\/\", \"BrandingThemes\": [ { \"BrandingThemeID\": \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\", \"Name\": \"Standard\", \"SortOrder\": 0, \"CreatedDateUTC\": \"\\/Date(1464967643813+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "BrandingTheme"
    },
    "/BrandingThemes/{BrandingThemeID}/PaymentServices": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve the Payment services for a Branding Theme",
        "operationId": "getBrandingThemePaymentServices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BrandingThemeID",
            "in": "path",
            "description": "Unique identifier for a Branding Theme",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array with 0 to N PaymentService",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServices"
                },
                "example": "{ \"Id\": \"bfd5adbe-0e92-48f0-8c5a-39072f6c4ed3\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551139339419)\\/\", \"PaymentServices\": [ { \"PaymentServiceID\": \"8cc53aa4-ae01-45b9-b06c-69c42eeae61f\", \"PaymentServiceName\": \"Sidney Maestre\", \"PaymentServiceType\": \"PayPal\" }, { \"PaymentServiceID\": \"dede7858-14e3-4a46-bf95-4d4cc491e645\", \"PaymentServiceName\": \"ACME Payment\", \"PaymentServiceUrl\": \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\", \"PayNowText\": \"Pay Now\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allow for the creation of new custom payment service for specified Branding Theme",
        "operationId": "createBrandingThemePaymentServices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "BrandingThemeID",
            "in": "path",
            "description": "Unique identifier for a Branding Theme",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "description": "PaymentService object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentService"
              },
              "example": "{  paymentServiceID: \"dede7858-14e3-4a46-bf95-4d4cc491e645\", paymentServiceName: \"ACME Payments\", paymentServiceUrl: \"https://www.payupnow.com/\", payNowText: \"Pay Now\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array with newly created PaymentService",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServices"
                },
                "example": "{ \"Id\":\"918feecb-067a-4ed9-841b-571c04eaada3\", \"Status\":\"OK\", \"ProviderName\":\"Xero API Partner\", \"DateTimeUTC\":\"\\/Date(1551139338915)\\/\", \"PaymentServices\":[ { \"PaymentServiceID\":\"dede7858-14e3-4a46-bf95-4d4cc491e645\", \"PaymentServiceName\":\"ACME Payments\", \"PaymentServiceUrl\":\"https://www.payupnow.com/\", \"PaymentServiceType\":\"Custom\", \"PayNowText\":\"Pay Now\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "payment_service = { payment_service_id: \"dede7858-14e3-4a46-bf95-4d4cc491e645\", payment_service_name: \"ACME Payments\", payment_service_url: \"https://www.payupnow.com/\", pay_now_text: \"Pay Now\" }"
      },
      "x-related-model": "BrandingTheme"
    },
    "/Contacts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve all contacts in a Xero organisation",
        "operationId": "getContacts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "ContactStatus==\"' + Contact.ContactStatusEnum.ACTIVE + '\"",
            "x-ruby-param": "ContactStatus==#{XeroRuby::Accounting::Contact::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Name ASC"
          },
          {
            "name": "IDs",
            "in": "query",
            "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "example": "00000000-0000-0000-000-000000000000,00000000-0000-0000-000-000000000000"
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with 0 to N Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"04e93d48-e72f-4775-b7dd-15a041fab972\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551399323399)\\/\", \"Contacts\": [ { \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\", \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\": \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\", \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\", \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": true, \"IsCustomer\": true, \"Balances\": { \"AccountsReceivable\": { \"Outstanding\": 760.00, \"Overdue\": 920.00 }, \"AccountsPayable\": { \"Outstanding\": 231.60, \"Overdue\": 360.00 } }, \"ContactPersons\": [], \"HasAttachments\": false, \"HasValidationErrors\": false }, { \"ContactID\": \"3ec601ad-eddc-4ccb-a8ac-736e88293b1b\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Lisa Parker\", \"FirstName\": \"Lisa\", \"LastName\": \"Parker\", \"EmailAddress\": \"lparker@parkerandco.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\", \"City\": \"Anchorage\", \"Region\": \"AK\", \"PostalCode\": \"99501\", \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"266-3583\", \"PhoneAreaCode\": \"(510)\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1503348546760+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": false, \"IsCustomer\": false, \"ContactPersons\": [], \"HasAttachments\": false, \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a multiple contacts (bulk) in a Xero organisation",
        "operationId": "createContacts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Contacts with an array of Contact objects to create in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contacts"
              },
              "example": "{ contacts: [{ name: \"Bruce Banner\", emailAddress: \"hulk@avengers.com\", phones: [{ phoneType: Phone.PhoneTypeEnum.MOBILE, phoneNumber: \"555-1212\", phoneAreaCode: \"415\" }], paymentTerms: { bills: { day: 15, type: PaymentTermType.OFCURRENTMONTH }, sales: { day: 10, type: PaymentTermType.DAYSAFTERBILLMONTH }}}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with newly created Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"e997d6d7-6dad-4458-beb8-d9c1bf7f2edf\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551399321121)\\/\", \"Contacts\": [ { \"ContactID\": \"3ff6d40c-af9a-40a3-89ce-3c1556a25591\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Foo9987\", \"EmailAddress\": \"sid32476@blah.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551399321043+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": false, \"IsCustomer\": false, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\" }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\" } }, \"ContactPersons\": [], \"HasValidationErrors\": false } ] }"
              }
            }
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"ContactID\": \"00000000-0000-0000-0000-000000000000\", \"AccountNumber\": \"12345-ABCD\", \"Name\": \"Sidney Maestre\", \"EmailAddress\": \"foo78858@bar.com\", \"AccountsReceivableTaxType\": \"NONE\", \"AccountsPayableTaxType\": \"INPUT\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"AddressLine1\": \"101 Green St\", \"AddressLine2\": \"5th floor\", \"City\": \"San Francisco\", \"Region\": \"CA\", \"PostalCode\": \"94041\", \"Country\": \"US\", \"AttentionTo\": \"Rod Drury\", \"ValidationErrors\": [] } ], \"Phones\": [ { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\", \"ValidationErrors\": [] } ], \"ContactGroups\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\", \"ValidationErrors\": [] }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\", \"ValidationErrors\": [] } }, \"ContactPersons\": [], \"HasValidationErrors\": true, \"ValidationErrors\": [ { \"Message\": \"The contact name Sidney Maestre is already assigned to another contact. The contact name must be unique across all active contacts.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "contacts = { contacts: [{ name: \"Bruce Banner\", email_address: \"hulk@avengers.com\", phones: [{ phone_type: XeroRuby::Accounting::Phone::MOBILE, phone_number: \"555-1212\", phone_area_code: \"415\" }], payment_terms: { bills: { day: 15, type: XeroRuby::Accounting::PaymentTermType::OFCURRENTMONTH }, sales: { day: 10, type: XeroRuby::Accounting::PaymentTermType::DAYSAFTERBILLMONTH }}}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update OR create one or more contacts in a Xero organisation",
        "operationId": "updateOrCreateContacts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contacts"
              },
              "example": "{ contacts: [{ name: \"Bruce Banner\", emailAddress: \"hulk@avengers.com\", phones: [{ phoneType: Phone.PhoneTypeEnum.MOBILE, phoneNumber: \"555-1212\", phoneAreaCode: \"415\" }], paymentTerms: { bills: { day: 15, type: PaymentTermType.OFCURRENTMONTH }, sales: { day: 10, type: PaymentTermType.DAYSAFTERBILLMONTH }}}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with newly created Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"e997d6d7-6dad-4458-beb8-d9c1bf7f2edf\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551399321121)\\/\", \"Contacts\": [ { \"ContactID\": \"3ff6d40c-af9a-40a3-89ce-3c1556a25591\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Foo9987\", \"EmailAddress\": \"sid32476@blah.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551399321043+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": false, \"IsCustomer\": false, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\" }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\" } }, \"ContactPersons\": [], \"HasValidationErrors\": false } ] }"
              }
            }
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"ContactID\": \"00000000-0000-0000-0000-000000000000\", \"AccountNumber\": \"12345-ABCD\", \"Name\": \"Sidney Maestre\", \"EmailAddress\": \"foo78858@bar.com\", \"AccountsReceivableTaxType\": \"NONE\", \"AccountsPayableTaxType\": \"INPUT\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"AddressLine1\": \"101 Green St\", \"AddressLine2\": \"5th floor\", \"City\": \"San Francisco\", \"Region\": \"CA\", \"PostalCode\": \"94041\", \"Country\": \"US\", \"AttentionTo\": \"Rod Drury\", \"ValidationErrors\": [] } ], \"Phones\": [ { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\", \"ValidationErrors\": [] } ], \"ContactGroups\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\", \"ValidationErrors\": [] }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\", \"ValidationErrors\": [] } }, \"ContactPersons\": [], \"HasValidationErrors\": true, \"ValidationErrors\": [ { \"Message\": \"The contact name Sidney Maestre is already assigned to another contact. The contact name must be unique across all active contacts.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "{ contacts: [{ name: \"Bruce Banner\", email_address: \"hulk@avengers.com\", phones: [{ phone_type: XeroRuby::Accounting::Phone::MOBILE, phone_number: \"555-1212\", phone_area_code: \"415\" }], payment_terms: { bills: { day: 15, type: XeroRuby::Accounting::PaymentTermType::OFCURRENTMONTH }, sales: { day: 10, type: XeroRuby::Accounting::PaymentTermType::OFCURRENTMONTHDAYSAFTERBILLMONTH }}}]}"
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactNumber}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a single contact by Contact Number in a Xero organisation",
        "operationId": "getContactByContactNumber",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactNumber",
            "in": "path",
            "description": "This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50).",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "SB2"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with a unique Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"5c83b115-a6e8-4f2a-877f-ba63d009235b\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551462703288)\\/\", \"Contacts\": [ { \"ContactID\": \"8138a266-fb42-49b2-a104-014b7045753d\", \"ContactNumber\": \"SB2\", \"AccountNumber\": \"1234567\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Acme Parts Co.\", \"FirstName\": \"Blake\", \"LastName\": \"Kohler\", \"EmailAddress\": \"bk@krave.co\", \"SkypeUserName\": \"blake\", \"BankAccountDetails\": \"12334567\", \"TaxNumber\": \"123-22-3456\", \"AccountsReceivableTaxType\": \"TAX003\", \"AccountsPayableTaxType\": \"TAX022\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"AddressLine1\": \"123 Fake Street\", \"City\": \"Vancouver\", \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"1234 Fake Street\", \"City\": \"Vancouver\", \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\", \"Country\": \"\", \"AttentionTo\": \"Blake\" } ], \"Phones\": [ { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"489-44493\", \"PhoneAreaCode\": \"345\", \"PhoneCountryCode\": \"4\" }, { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"408-0914\", \"PhoneAreaCode\": \"604\", \"PhoneCountryCode\": \"1\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"123-9933\", \"PhoneAreaCode\": \"123\", \"PhoneCountryCode\": \"2\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"999-44\", \"PhoneAreaCode\": \"234\", \"PhoneCountryCode\": \"3\" } ], \"UpdatedDateUTC\": \"\\/Date(1551459777193+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": true, \"IsCustomer\": true, \"DefaultCurrency\": \"USD\", \"Discount\": 13.00, \"Website\": \"http://www.google.com\", \"BrandingTheme\": { \"BrandingThemeID\": \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\", \"Name\": \"Standard\" }, \"PurchasesDefaultAccountCode\": \"660\", \"SalesDefaultAccountCode\": \"002\", \"BatchPayments\": { \"BankAccountNumber\": \"12334567\", \"BankAccountName\": \"Citi Bank\", \"Details\": \"biz checking\", \"Code\": \"\", \"Reference\": \"\" }, \"Balances\": { \"AccountsReceivable\": { \"Outstanding\": 118.90, \"Overdue\": 136.90 }, \"AccountsPayable\": { \"Outstanding\": -43.60, \"Overdue\": 40.00 } }, \"PaymentTerms\": { \"Bills\": { \"Day\": 12, \"Type\": \"OFFOLLOWINGMONTH\" }, \"Sales\": { \"Day\": 14, \"Type\": \"OFCURRENTMONTH\" } }, \"ContactPersons\": [ { \"FirstName\": \"Sue\", \"LastName\": \"Johnson\", \"EmailAddress\": \"sue.johnson@krave.com\", \"IncludeInEmails\": true } ], \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"04e0a3e3-b116-456a-9f32-9706f0d33afa\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ], \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a single contacts in a Xero organisation",
        "operationId": "getContact",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with a unique Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"5c83b115-a6e8-4f2a-877f-ba63d009235b\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551462703288)\\/\", \"Contacts\": [ { \"ContactID\": \"8138a266-fb42-49b2-a104-014b7045753d\", \"ContactNumber\": \"SB2\", \"AccountNumber\": \"1234567\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Acme Parts Co.\", \"FirstName\": \"Blake\", \"LastName\": \"Kohler\", \"EmailAddress\": \"bk@krave.co\", \"SkypeUserName\": \"blake\", \"BankAccountDetails\": \"12334567\", \"TaxNumber\": \"123-22-3456\", \"AccountsReceivableTaxType\": \"TAX003\", \"AccountsPayableTaxType\": \"TAX022\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"AddressLine1\": \"123 Fake Street\", \"City\": \"Vancouver\", \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"1234 Fake Street\", \"City\": \"Vancouver\", \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\", \"Country\": \"\", \"AttentionTo\": \"Blake\" } ], \"Phones\": [ { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"489-44493\", \"PhoneAreaCode\": \"345\", \"PhoneCountryCode\": \"4\" }, { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"408-0914\", \"PhoneAreaCode\": \"604\", \"PhoneCountryCode\": \"1\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"123-9933\", \"PhoneAreaCode\": \"123\", \"PhoneCountryCode\": \"2\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"999-44\", \"PhoneAreaCode\": \"234\", \"PhoneCountryCode\": \"3\" } ], \"UpdatedDateUTC\": \"\\/Date(1551459777193+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": true, \"IsCustomer\": true, \"DefaultCurrency\": \"USD\", \"Discount\": 13.00, \"Website\": \"http://www.google.com\", \"BrandingTheme\": { \"BrandingThemeID\": \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\", \"Name\": \"Standard\" }, \"PurchasesDefaultAccountCode\": \"660\", \"SalesDefaultAccountCode\": \"002\", \"BatchPayments\": { \"BankAccountNumber\": \"12334567\", \"BankAccountName\": \"Citi Bank\", \"Details\": \"biz checking\", \"Code\": \"\", \"Reference\": \"\" }, \"Balances\": { \"AccountsReceivable\": { \"Outstanding\": 118.90, \"Overdue\": 136.90 }, \"AccountsPayable\": { \"Outstanding\": -43.60, \"Overdue\": 40.00 } }, \"PaymentTerms\": { \"Bills\": { \"Day\": 12, \"Type\": \"OFFOLLOWINGMONTH\" }, \"Sales\": { \"Day\": 14, \"Type\": \"OFCURRENTMONTH\" } }, \"ContactPersons\": [ { \"FirstName\": \"Sue\", \"LastName\": \"Johnson\", \"EmailAddress\": \"sue.johnson@krave.com\", \"IncludeInEmails\": true } ], \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"04e0a3e3-b116-456a-9f32-9706f0d33afa\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ], \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "description": "an array of Contacts containing single Contact object with properties to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contacts"
              },
              "example": "{ contacts: [{ contactID: \"00000000-0000-0000-000-000000000000\", name: \"Thanos\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array with an updated Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"4166b727-c3f0-4881-acd0-d4f7c0e8fcda\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551400031795)\\/\", \"Contacts\": [ { \"ContactID\": \"d5be01fb-b09f-4c3a-9c67-e10c2a03412c\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"FooBar\", \"EmailAddress\": \"sid30680@blah.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551400031763+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": false, \"IsCustomer\": false, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\" }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\" } }, \"ContactPersons\": [], \"HasValidationErrors\": false } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "contacts = { contacts: [{ contact_id: \"00000000-0000-0000-000-000000000000\", name: \"Thanos\" }]}"
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve, add and update contacts in a Xero organisation",
        "operationId": "getContactAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with 0 to N Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"0f63b631-a205-496d-b1d2-e6b13a9b497b\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551483890413)\\/\", \"Attachments\": [ { \"AttachmentID\": \"04e0a3e3-b116-456a-9f32-9706f0d33afa\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on Contacts",
        "operationId": "getContactAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for a Attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Contact as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on Contacts by file name",
        "operationId": "getContactAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name for the file you are attaching",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Contact as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "operationId": "createContactAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name for the file you are attaching",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with an newly created Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"a5eddf71-86aa-42f5-99e2-0aaf9caf96b6\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551484292734)\\/\", \"Attachments\": [ { \"AttachmentID\": \"27e37b01-6996-4ebe-836c-95fd472ad674\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "operationId": "updateContactAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name for the file you are attaching",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with an updated Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"8543ae1a-297c-49b8-bf91-47decac452d5\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551485146555)\\/\", \"Attachments\": [ { \"AttachmentID\": \"8b537c1b-bbb5-47fd-857e-370c369dda7c\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactID}/CISSettings": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve CISSettings for a contact in a Xero organisation",
        "operationId": "getContactCISSettings",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type CISSettings for a specific Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CISSettings"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "x-related-model": "Contact"
    },
    "/Contacts/{ContactID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an Contact",
        "operationId": "getContactHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an Contact",
        "operationId": "createContactHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Contact"
    },
    "/ContactGroups": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve the ContactID and Name of all the contacts in a contact group",
        "operationId": "getContactGroups",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + ContactGroup.StatusEnum.ACTIVE + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::ContactGroup::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Name ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array of Contact Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroups"
                },
                "example": "{ \"Id\": \"b825df86-1a72-49c9-97dd-36afc7d04bd5\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551746015603)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"d7a86b80-8dac-4d89-a334-9dcf5753676c\", \"Name\": \"Suppliers\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false }, { \"ContactGroupID\": \"ab089fd4-012f-4043-a6e4-e7be01e87e50\", \"Name\": \"Old Group84262\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a contact group",
        "operationId": "createContactGroup",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "ContactGroups with an array of names in request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroups"
              },
              "example": "{ contactGroups: [{ name: \"VIPs\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array of newly created Contact Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroups"
                },
                "example": "{ \"Id\": \"5afe53f9-2271-45b8-9767-88d023b71d34\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551745740920)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"d7a86b80-8dac-4d89-a334-9dcf5753676c\", \"Name\": \"Suppliers\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ] }"
              }
            }
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"ContactGroupID\": \"00000000-0000-0000-0000-000000000000\", \"Name\": \"Suppliers\", \"Contacts\": [], \"HasValidationErrors\": true, \"ValidationErrors\": [ { \"Message\": \"You’ve reached the limit of 100 contact groups.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "contact_groups = { contact_groups: [{ name: \"VIPs\" }]}"
      },
      "x-related-model": "ContactGroup"
    },
    "/ContactGroups/{ContactGroupID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a unique Contact Group by ID",
        "operationId": "getContactGroup",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "description": "Unique identifier for a Contact Group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array with a specific Contact Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroups"
                },
                "example": "{ \"Id\": \"079c14f6-2c2d-464e-a2c7-0edf7e465723\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551746772976)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [ { \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\", \"Name\": \"Noel Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false } ], \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a Contact Group",
        "operationId": "updateContactGroup",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "description": "Unique identifier for a Contact Group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "description": "an array of Contact groups with Name of specific group to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroups"
              },
              "example": "{ contactGroups: [{ name: \"Vendor\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Contact Groups array of updated Contact Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroups"
                },
                "example": "{ \"Id\": \"b1ba6cdb-1637-4209-bb92-bd0c593f3243\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551746288544)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"13f47537-7c1d-4e62-966e-617d76558fc5\", \"Name\": \"Supplier Vendor\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "contact_groups = { contact_groups: [{ name: \"Vendor\" }]}"
      },
      "x-related-model": "ContactGroup"
    },
    "/ContactGroups/{ContactGroupID}/Contacts": {
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to add Contacts to a Contact Group",
        "operationId": "createContactGroupContacts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "description": "Unique identifier for a Contact Group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "description": "Contacts with array of contacts specifiying the ContactID to be added to ContactGroup in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contacts"
              },
              "example": "{ contacts: [{ contactID: \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\" }, { contactID: \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Contacts array of added Contacts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                },
                "example": "{ \"Id\": \"99db8024-6895-45c8-a1b5-54805aa8689c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551747495785)\\/\", \"Contacts\": [ { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false, \"ValidationErrors\": [] }, { \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "contacts = { contacts: [{ contact_id: \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\" }, { contact_id: \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\" }]}"
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete  all Contacts from a Contact Group",
        "operationId": "deleteContactGroupContacts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "description": "Unique identifier for a Contact Group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "x-isEmpty": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      },
      "x-related-model": "ContactGroup"
    },
    "/ContactGroups/{ContactGroupID}/Contacts/{ContactID}": {
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete a specific Contact from a Contact Group",
        "operationId": "deleteContactGroupContact",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ContactGroupID",
            "in": "path",
            "description": "Unique identifier for a Contact Group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "ContactID",
            "in": "path",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "x-isEmpty": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.contacts"
            ]
          }
        ]
      },
      "x-related-model": "ContactGroup"
    },
    "/CreditNotes": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any credit notes",
        "operationId": "getCreditNotes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + CreditNote.StatusEnum.DRAFT + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::CreditNote::DRAFT}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "CreditNoteNumber ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 – Up to 100 credit notes will be returned in a single API call with line items shown for each credit note",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array of CreditNote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNotes"
                },
                "example": "{ \"Id\": \"306379b0-3d75-4c77-953a-be08fa0efae8\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551812506620)\\/\", \"CreditNotes\": [ { \"CreditNoteID\": \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CreditNoteNumber\": \"CN-0005\", \"Payments\": [ { \"PaymentID\": \"6b037c9b-2e5d-4905-84d3-eabfb3438242\", \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"Amount\": 2.00, \"Reference\": \"Too much\", \"CurrencyRate\": 1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ], \"ID\": \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CurrencyRate\": 1.000000, \"Type\": \"ACCRECCREDIT\", \"Reference\": \"US Tour\", \"RemainingCredit\": 32.50, \"Allocations\": [], \"HasAttachments\": true, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-05T00:00:00\", \"Date\": \"\\/Date(1551744000000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 30.00, \"TotalTax\": 4.50, \"Total\": 34.50, \"UpdatedDateUTC\": \"\\/Date(1551812346157+0000)\\/\", \"CurrencyCode\": \"NZD\" }, { \"CreditNoteID\": \"f8021bd2-9a6a-4c19-8477-163da0b9290f\", \"CreditNoteNumber\": \"\", \"Payments\": [], \"ID\": \"f8021bd2-9a6a-4c19-8477-163da0b9290f\", \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\": \"\", \"RemainingCredit\": 46.00, \"Allocations\": [], \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-01-05T00:00:00\", \"Date\": \"\\/Date(1546646400000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\": \"\\/Date(1551812506153+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a credit note",
        "operationId": "createCreditNotes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "Credit Notes with array of CreditNote object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNotes"
              },
              "example": "{ creditNotes: [{ type: CreditNote.TypeEnum.ACCPAYCREDIT, contact: { contactID: \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, date: \"2019-01-05\", lineItems: [{ description: \"Foobar\", quantity: 2.0, unitAmount: 20.0, accountCode: \"400\" }]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array of newly created CreditNote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNotes"
                },
                "example": "{ \"Id\": \"5e57a661-42da-4a19-96a0-00405a0e946d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551812702713)\\/\", \"CreditNotes\": [ { \"CreditNoteID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CreditNoteNumber\": \"\", \"Payments\": [], \"ID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\": \"\", \"RemainingCredit\": 46.00, \"Allocations\": [], \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-01-05T00:00:00\", \"Date\": \"\\/Date(1546646400000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"INPUT2\", \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000, \"ValidationErrors\": [] } ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\": \"\\/Date(1551812702650+0000)\\/\", \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\", \"ValidationErrors\": [ { \"Message\": \"An existing Credit Note with the specified CreditNoteID could not be found\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "credit_notes = { credit_notes: [{ type: XeroRuby::Accounting::CreditNote::ACCPAYCREDIT, contact: { contact_id: \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, date: \"2019-01-05\", line_items: [{ description: \"Foobar\", quantity: 2.0, unit_amount: 20.0, account_code: \"400\" }]}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update OR create one or more credit notes",
        "operationId": "updateOrCreateCreditNotes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "an array of Credit Notes with a single CreditNote object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNotes"
              },
              "example": "{ creditNotes: [{ type: CreditNote.TypeEnum.ACCPAYCREDIT, contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, date: \"2019-01-05\", lineItems: [{ description: \"Foobar\", quantity: 2.0, unitAmount: 20.0, accountCode: \"400\" }]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array of newly created CreditNote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNotes"
                },
                "example": "{ \"Id\": \"5e57a661-42da-4a19-96a0-00405a0e946d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551812702713)\\/\", \"CreditNotes\": [ { \"CreditNoteID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CreditNoteNumber\": \"\", \"Payments\": [], \"ID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\": \"\", \"RemainingCredit\": 46.00, \"Allocations\": [], \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-01-05T00:00:00\", \"Date\": \"\\/Date(1546646400000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"INPUT2\", \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000, \"ValidationErrors\": [] } ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\": \"\\/Date(1551812702650+0000)\\/\", \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\", \"ValidationErrors\": [ { \"Message\": \"An existing Credit Note with the specified CreditNoteID could not be found\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "credit_notes = { credit_notes: [{ type: XeroRuby::Accounting::CreditNote::ACCPAYCREDIT, contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, date: \"2019-01-05\", line_items: [{ description: \"Foobar\", quantity: 2.0, unit_amount: 20.0, account_code: \"400\" }]}]}"
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specific credit note",
        "operationId": "getCreditNote",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array with a unique CreditNote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNotes"
                },
                "example": "{ \"Id\": \"dd5c5da7-08ab-486a-ac34-aea295f1614b\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551812703811)\\/\", \"CreditNotes\": [ { \"CreditNoteID\": \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CreditNoteNumber\": \"CN-0005\", \"Payments\": [ { \"PaymentID\": \"6b037c9b-2e5d-4905-84d3-eabfb3438242\", \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"Amount\": 2.00, \"Reference\": \"Too much\", \"CurrencyRate\": 1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ], \"ID\": \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CurrencyRate\": 1.000000, \"Type\": \"ACCRECCREDIT\", \"Reference\": \"US Tour\", \"RemainingCredit\": 32.50, \"Allocations\": [], \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"9b9c9b62-069e-4f5a-a172-183195f084bb\", \"FileName\": \"Screen Shot 2019-03-04 at 9.00.06 AM.png\", \"Url\": \"https://api.xero.com/api.xro/2.0/creditnotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/Screen%20Shot%202019-03-04%20at%209.00.06%20AM.png\", \"MimeType\": \"image/png\", \"ContentLength\": 82334 } ], \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-05T00:00:00\", \"Date\": \"\\/Date(1551744000000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Mic Stand\", \"UnitAmount\": 30.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 4.50, \"LineAmount\": 30.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"ValidationErrors\": [] } ], \"SubTotal\": 30.00, \"TotalTax\": 4.50, \"Total\": 34.50, \"UpdatedDateUTC\": \"\\/Date(1551812346157+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specific credit note",
        "operationId": "updateCreditNote",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "an array of Credit Notes containing credit note details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNotes"
              },
              "example": "{ creditNotes: [{ type: CreditNote.TypeEnum.ACCPAYCREDIT, contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, date: \"2019-01-05\", status: CreditNote.StatusEnum.AUTHORISED, reference: \"Mind stone\", lineItems: [{ description: \"Infinity Stones\", quantity: 1.0, unitAmount: 100.0, accountCode: \"400\" } ]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Credit Notes array with updated CreditNote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNotes"
                },
                "example": "{ \"Id\": \"db2f7659-6044-418d-a4c6-d4b93eba4e1e\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551812704253)\\/\", \"CreditNotes\": [ { \"CreditNoteID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CreditNoteNumber\": \"\", \"Payments\": [], \"ID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\": \"HelloWorld\", \"RemainingCredit\": 46.00, \"Allocations\": [], \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-01-05T00:00:00\", \"Date\": \"\\/Date(1546646400000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"INPUT2\", \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000, \"ValidationErrors\": [] } ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\": \"\\/Date(1551812704223+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "credit_notes = { credit_notes: [{ type: XeroRuby::Accounting::CreditNote::ACCPAYCREDIT, contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, date: \"2019-01-05\", status: XeroRuby::Accounting::CreditNote::AUTHORISED, reference: \"Mind stone\", line_items: [{ description: \"Infinity Stones\", quantity: 1.0, unit_amount: 100.0, account_code: \"400\" } ]}]}"
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments for credit notes",
        "operationId": "getCreditNoteAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with all Attachment for specific Credit Note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"2bb15054-3868-4f85-a9c6-0402ec8c1201\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551822670731)\\/\", \"Attachments\": [ { \"AttachmentID\": \"b7eb1fc9-a0f9-4e8e-9373-6689f5350832\", \"FileName\": \"HelloWorld.png\", \"Url\": \"https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/HelloWorld.png\", \"MimeType\": \"image/png\", \"ContentLength\": 76091 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on CreditNote",
        "operationId": "getCreditNoteAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for a Attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Credit Note as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on CreditNote by file name",
        "operationId": "getCreditNoteAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the file you are attaching to Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Credit Note as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create Attachments on CreditNote by file name",
        "operationId": "createCreditNoteAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the file you are attaching to Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "IncludeOnline",
            "in": "query",
            "description": "Allows an attachment to be seen by the end customer within their online invoice",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with newly created Attachment for specific Credit Note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"22a8d402-5dea-40ed-9d01-26896429f649\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551822953320)\\/\", \"Attachments\": [ { \"AttachmentID\": \"91bbae3f-5de5-4e3d-875f-8662f25897bd\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update Attachments on CreditNote by file name",
        "operationId": "updateCreditNoteAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the file you are attaching to Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment for specific Credit Note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"27253066-8c4d-4e34-a251-7a749b72de40\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551828247939)\\/\", \"Attachments\": [ { \"AttachmentID\": \"103e49f1-e47c-4b4d-b5e8-77d9d00fa70a\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}/pdf": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Credit Note as PDF files",
        "operationId": "getCreditNoteAsPdf",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of binary data from the Attachment to a Credit Note",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-path": "/CreditNotes/{CreditNoteID}"
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}/Allocations": {
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create Allocation on CreditNote",
        "operationId": "createCreditNoteAllocation",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Allocations with array of Allocation object in body of request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Allocations"
              },
              "example": "{ allocations: [{ amount: 1.0, date: \"2019-03-05\", invoice: { invoiceID: \"c45720a1-ade3-4a38-a064-d15489be6841\", lineItems:[], type: Invoice.TypeEnum.ACCPAY, contact: {}}}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Allocations array with newly created Allocation for specific Credit Note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Allocations"
                },
                "example": "{ \"Id\": \"73452751-6eaa-4bcb-86f5-4c013316f4cf\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551828543255)\\/\", \"Allocations\": [ { \"Amount\": 1.00, \"Date\": \"\\/Date(1551744000000+0000)\\/\", \"Invoice\": { \"InvoiceID\": \"c45720a1-ade3-4a38-a064-d15489be6841\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [], \"ValidationErrors\": [] }, \"CreditNote\": { \"CreditNoteID\": \"7be578f5-63af-45c8-9b00-dcc4732baf0b\", \"ID\": \"7be578f5-63af-45c8-9b00-dcc4732baf0b\", \"LineItems\": [] }, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "allocations = { allocations: [{ amount: 1.0, date: \"2019-03-05\", invoice: { invoice_id: \"c45720a1-ade3-4a38-a064-d15489be6841\", line_items: [], type: XeroRuby::Accounting::Invoice::ACCPAY, contact: {} }}]}"
      },
      "x-related-model": "CreditNote"
    },
    "/CreditNotes/{CreditNoteID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an CreditNote",
        "operationId": "getCreditNoteHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an CreditNote",
        "operationId": "createCreditNoteHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "CreditNoteID",
            "in": "path",
            "description": "Unique identifier for a Credit Note",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "CreditNote"
    },
    "/Currencies": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve currencies for your organisation",
        "operationId": "getCurrencies",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Currency.StatusEnum.ACTIVE + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Currency::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Code ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Currencies array with all Currencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currencies"
                },
                "example": "{ \"Id\": \"e6803fc8-8035-4251-b3e4-39d6b2de0f4a\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552322853043)\\/\", \"Currencies\": [ { \"Code\": \"NZD\", \"Description\": \"New Zealand Dollar\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "operationId": "createCurrency",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "Currency obejct in the body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              },
              "example": "{ code: CurrencyCode.USD, description: \"United States Dollar\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Unsupported - return response incorrect exception, API is not able to create new Currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currencies"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "currency = { code: XeroRuby::Accounting::CurrencyCode::USD, description: \"United States Dollar\" }"
      },
      "x-related-model": "Currency"
    },
    "/Employees": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve employees used in Xero payrun",
        "operationId": "getEmployees",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Employee.StatusEnum.ACTIVE + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Employee::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with all Employee",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employees"
                },
                "example": " { \"Id\": \"593cbccc-5cd2-4cd2-be5e-150f0843709e\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552325082775)\\/\", \"Employees\": [ { \"EmployeeID\": \"972615c5-ad3d-47a0-b579-20370d374578\", \"Status\": \"ACTIVE\", \"FirstName\": \"Tony\", \"LastName\": \"Stark\", \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Stark+Industries\", \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\": \"\\/Date(1552324681593+0000)\\/\" }, { \"EmployeeID\": \"ad3db144-6362-459c-8c36-5d31d196e629\", \"Status\": \"ACTIVE\", \"FirstName\": \"Bruce\", \"LastName\": \"Banner\", \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\": \"\\/Date(1552325081303+0000)\\/\" }, { \"EmployeeID\": \"e1ada26b-a10e-4065-a941-af34b53740e3\", \"Status\": \"ACTIVE\", \"FirstName\": \"Nick\", \"LastName\": \"Fury\", \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\": \"\\/Date(1552324737990+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create new employees used in Xero payrun",
        "operationId": "createEmployees",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Employees with array of Employee object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              },
              "example": "{ employees: [{ firstName: \"Nick\", lastName: \"Fury\", externalLink: { url: \"http://twitter.com/#!/search/Nick+Fury\" }}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with new Employee",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employees"
                },
                "example": "{ \"Id\": \"0d6a08e7-6936-4828-a1bc-e4595e0ef778\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552324736508)\\/\", \"Employees\": [ { \"EmployeeID\": \"e1ada26b-a10e-4065-a941-af34b53740e3\", \"Status\": \"ACTIVE\", \"FirstName\": \"Nick\", \"LastName\": \"Fury\", \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\": \"\\/Date(1552324736463+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "employees = { employees: [{ first_name: \"Nick\", last_name: \"Fury\", externalink: { url: \"http://twitter.com/#!/search/Nick+Fury\" }}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a single new employees used in Xero payrun",
        "operationId": "updateOrCreateEmployees",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Employees with array of Employee object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              },
              "example": "{ employees: [{ firstName: \"Nick\", lastName: \"Fury\", externalLink: { url: \"http://twitter.com/#!/search/Nick+Fury\" }}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with new Employee",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employees"
                },
                "example": "{ \"Id\": \"0d6a08e7-6936-4828-a1bc-e4595e0ef778\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552324736508)\\/\", \"Employees\": [ { \"EmployeeID\": \"e1ada26b-a10e-4065-a941-af34b53740e3\", \"Status\": \"ACTIVE\", \"FirstName\": \"Nick\", \"LastName\": \"Fury\", \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\": \"\\/Date(1552324736463+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "employees = { employees: [{ first_name: \"Nick\", last_name: \"Fury\", external_link: { url: \"http://twitter.com/#!/search/Nick+Fury\" }}]}"
      },
      "x-related-model": "Employee"
    },
    "/Employees/{EmployeeID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specific employee used in Xero payrun",
        "operationId": "getEmployee",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "EmployeeID",
            "in": "path",
            "description": "Unique identifier for a Employee",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Employees array with specified Employee",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employees"
                },
                "example": "{ \"Id\": \"417a529e-4f8d-4b1a-8816-7100245cf8b2\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552325084085)\\/\", \"Employees\": [ { \"EmployeeID\": \"972615c5-ad3d-47a0-b579-20370d374578\", \"Status\": \"ACTIVE\", \"FirstName\": \"Tony\", \"LastName\": \"Stark\", \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Stark+Industries\", \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\": \"\\/Date(1552324681593+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "Employee"
    },
    "/ExpenseClaims": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve expense claims",
        "operationId": "getExpenseClaims",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + ExpenseClaim.StatusEnum.SUBMITTED + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::ExpenseClaim::SUBMITTED}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with all ExpenseClaims",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaims"
                },
                "example": "{ \"Id\": \"f6a8867e-af29-41ee-8f77-855f5ff214fe\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552325853538)\\/\", \"ExpenseClaims\": [ { \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1552325851767+0000)\\/\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Receipts\": [], \"Payments\": [], \"Total\": 40.00, \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"ReportingDate\": \"\\/Date(1552262400000+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve expense claims",
        "operationId": "createExpenseClaims",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "ExpenseClaims with array of ExpenseClaim object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseClaims"
              },
              "example": "{ expenseClaims: [{ status: ExpenseClaim.StatusEnum.SUBMITTED, user: { userID: \"d1164823-0ac1-41ad-987b-b4e30fe0b273\" }, receipts: [{ receiptID: \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", lineItems: [], contact: {}, user: {}, date: \"2018-01-01\" }]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with newly created ExpenseClaim",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaims"
                },
                "example": "{ \"Id\": \"4a0879a6-3860-4b73-adc6-f6a0e0f68fc8\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552325850201)\\/\", \"ExpenseClaims\": [ { \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\", \"Status\": \"SUBMITTED\", \"UpdatedDateUTC\": \"\\/Date(1552325850107+0000)\\/\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Receipts\": [ { \"ReceiptID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"ReceiptNumber\": 1, \"Status\": \"SUBMITTED\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552325848457+0000)\\/\", \"Reference\": \"\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"Tracking\": [], \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"HasAttachments\": false } ], \"Payments\": [], \"Total\": 40.00, \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"StatusAttributeString\": \"OK\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "expense_claims = { expense_claims: [{ status: XeroRuby::Accounting::ExpenseClaim::SUBMITTED, user: { user_id: \"d1164823-0ac1-41ad-987b-b4e30fe0b273\" }, receipts: [{ receipt_id: \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", line_items: [], contact: {}, user: {}, date: \"2018-01-01\" }]}]}"
      },
      "x-related-model": "ExpenseClaim"
    },
    "/ExpenseClaims/{ExpenseClaimID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified expense claim",
        "operationId": "getExpenseClaim",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "description": "Unique identifier for a ExpenseClaim",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with specified ExpenseClaim",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaims"
                },
                "example": "{ \"Id\": \"b54bb45d-37da-4f53-9f1d-536302d6bad7\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552325854864)\\/\", \"ExpenseClaims\": [ { \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1552325851767+0000)\\/\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Receipts\": [ { \"ReceiptID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"ReceiptNumber\": 1, \"Status\": \"AUTHORISED\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552325848457+0000)\\/\", \"Reference\": \"\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"HasAttachments\": false } ], \"Payments\": [], \"Total\": 40.00, \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"ReportingDate\": \"\\/Date(1552262400000+0000)\\/\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update specified expense claims",
        "operationId": "updateExpenseClaim",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "description": "Unique identifier for a ExpenseClaim",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseClaims"
              },
              "example": "{ expenseClaims: [{ status: ExpenseClaim.StatusEnum.AUTHORISED, user: { userID: \"00000000-0000-0000-000-000000000000\" }, receipts: [{ receiptID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, date:\"2020-01-01\", user: {} }]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type ExpenseClaims array with updated ExpenseClaim",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaims"
                },
                "example": "{ \"Id\": \"8ee87f9c-058b-4f1b-b5b2-29569bf055d7\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552325851907)\\/\", \"ExpenseClaims\": [ { \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1552325851767+0000)\\/\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Receipts\": [ { \"ReceiptID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"ReceiptNumber\": 1, \"Status\": \"AUTHORISED\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552325848457+0000)\\/\", \"Reference\": \"\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"HasAttachments\": false } ], \"Payments\": [], \"Total\": 40.00, \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"ReportingDate\": \"\\/Date(1552262400000+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "expense_claims = { expense_claims: [{ status: XeroRuby::Accounting::ExpenseClaim::AUTHORISED, user: { user_id: \"00000000-0000-0000-000-000000000000\" }, receipts: [{ receipt_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, date:\"2020-01-01\", user: {} }]}]}"
      },
      "x-related-model": "ExpenseClaim"
    },
    "/ExpenseClaims/{ExpenseClaimID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an ExpenseClaim",
        "operationId": "getExpenseClaimHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "description": "Unique identifier for a ExpenseClaim",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a history records of an ExpenseClaim",
        "operationId": "createExpenseClaimHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ExpenseClaimID",
            "in": "path",
            "description": "Unique identifier for a ExpenseClaim",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "ExpenseClaim"
    },
    "/Invoices": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any sales invoices or purchase bills",
        "operationId": "getInvoices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Invoice.StatusEnum.DRAFT + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Invoice::DRAFT}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "InvoiceNumber ASC"
          },
          {
            "name": "IDs",
            "in": "query",
            "description": "Filter by a comma-separated list of InvoicesIDs.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "example": "00000000-0000-0000-000-000000000000,00000000-0000-0000-000-000000000000"
          },
          {
            "name": "InvoiceNumbers",
            "in": "query",
            "description": "Filter by a comma-separated list of InvoiceNumbers.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "null"
          },
          {
            "name": "ContactIDs",
            "in": "query",
            "description": "Filter by a comma-separated list of ContactIDs.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "example": "00000000-0000-0000-000-000000000000,00000000-0000-0000-000-000000000000"
          },
          {
            "name": "Statuses",
            "in": "query",
            "description": "Filter by a comma-separated list Statuses. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "null"
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 – Up to 100 invoices will be returned in a single API call with line items shown for each invoice",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "createdByMyApp",
            "in": "query",
            "description": "When set to true you'll only retrieve Invoices created by your app",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with all Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                },
                "example": "{ \"Id\": \"900c500b-e83c-4ce2-902a-b8ba04751748\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552326816230)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\", \"InvoiceID\": \"d4956132-ed94-4dd7-9eaa-aa22dfdf06f2\", \"InvoiceNumber\": \"INV-0001\", \"Reference\": \"Red Fish, Blue Fish\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 0.00, \"AmountPaid\": 0.00, \"AmountCredited\": 0.00, \"SentToContact\": true, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"HasAttachments\": false, \"RepeatingInvoiceID\": \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney Rubble-83203\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2018-10-20T00:00:00\", \"Date\": \"\\/Date(1539993600000+0000)\\/\", \"DueDateString\": \"2018-12-30T00:00:00\", \"DueDate\": \"\\/Date(1546128000000+0000)\\/\", \"Status\": \"VOIDED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"UpdatedDateUTC\": \"\\/Date(1541176290160+0000)\\/\", \"CurrencyCode\": \"NZD\" }, { \"Type\": \"ACCREC\", \"InvoiceID\": \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"InvoiceNumber\": \"INV-0002\", \"Reference\": \"Red Fish, Blue Fish\", \"Payments\": [ { \"PaymentID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"Date\": \"\\/Date(1543449600000+0000)\\/\", \"Amount\": 46.00, \"CurrencyRate\": 1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 0.00, \"AmountPaid\": 46.00, \"AmountCredited\": 0.00, \"SentToContact\": true, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney Rubble-83203\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2018-10-20T00:00:00\", \"Date\": \"\\/Date(1539993600000+0000)\\/\", \"DueDateString\": \"2018-12-30T00:00:00\", \"DueDate\": \"\\/Date(1546128000000+0000)\\/\", \"Status\": \"PAID\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\", \"CurrencyCode\": \"NZD\", \"FullyPaidOnDate\": \"\\/Date(1543449600000+0000)\\/\" }, { \"Type\": \"ACCREC\", \"InvoiceID\": \"7ef31b20-de17-4312-8382-412f869b1510\", \"InvoiceNumber\": \"INV-0003\", \"Reference\": \"\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 115.00, \"AmountPaid\": 0.00, \"AmountCredited\": 0.00, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney Rubble-83203\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2018-11-02T00:00:00\", \"Date\": \"\\/Date(1541116800000+0000)\\/\", \"DueDateString\": \"2018-11-07T00:00:00\", \"DueDate\": \"\\/Date(1541548800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 100.00, \"TotalTax\": 15.00, \"Total\": 115.00, \"UpdatedDateUTC\": \"\\/Date(1541176648927+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more sales invoices or purchase bills",
        "operationId": "createInvoices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "Invoices with an array of invoice objects in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoices"
              },
              "example": "{ invoices: [{ type: Invoice.TypeEnum.ACCREC, contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Acme Tires\", quantity: 2.0, unitAmount: 20.0, accountCode: \"000\", taxType: TaxType.NONE, lineAmount: 40.0 }], date: \"2019-03-11\", dueDate: \"2018-12-10\", reference: \"Website Design\", status: Invoice.StatusEnum.DRAFT }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with newly created Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                },
                "example": "{ \"Id\": \"ccece84a-075c-4fcd-9073-149d4f7a91cf\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552327126164)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\", \"InvoiceID\": \"ed255415-e141-4150-aab7-89c3bbbb851c\", \"InvoiceNumber\": \"INV-0007\", \"Reference\": \"Website Design\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [ { \"FirstName\": \"Debbie\", \"LastName\": \"Gwyther\", \"EmailAddress\": \"debbie@rockstar.com\", \"IncludeInEmails\": false } ], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-11T00:00:00\", \"Date\": \"\\/Date(1552262400000+0000)\\/\", \"DueDateString\": \"2018-12-10T00:00:00\", \"DueDate\": \"\\/Date(1544400000000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Acme Tires\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 2.0000, \"LineItemID\": \"5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f\", \"ValidationErrors\": [] } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"UpdatedDateUTC\": \"\\/Date(1552327126117+0000)\\/\", \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "invoices = { invoices: [{ type: XeroRuby::Accounting::Invoice::ACCREC, contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Acme Tires\", quantity: 2.0, unit_amount: 20.0, account_code: \"000\", tax_type: TaxType.NONE, line_amount: 40.0 }], date: \"2019-03-11\", due_date: \"2018-12-10\", reference: \"Website Design\", status: XeroRuby::Accounting::Invoice::DRAFT }]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update OR create one or more sales invoices or purchase bills",
        "operationId": "updateOrCreateInvoices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoices"
              },
              "example": "{ invoices: [{ type: Invoice.TypeEnum.ACCREC, contact: { contactID:\"00000000-0000-0000-000-000000000000\" }, lineItems:[ { description:\"Acme Tires\", quantity:2.0, unitAmount:20.0, accountCode:\"200\", taxType:\"NONE\", lineAmount:40.0 } ], date:\"2019-03-11\", dueDate:\"2018-12-10\", reference:\"Website Design\", status: Invoice.StatusEnum.AUTHORISED } ] }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with newly created Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                },
                "example": "{ \"Id\": \"ccece84a-075c-4fcd-9073-149d4f7a91cf\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552327126164)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\", \"InvoiceID\": \"ed255415-e141-4150-aab7-89c3bbbb851c\", \"InvoiceNumber\": \"INV-0007\", \"Reference\": \"Website Design\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [ { \"FirstName\": \"Debbie\", \"LastName\": \"Gwyther\", \"EmailAddress\": \"debbie@rockstar.com\", \"IncludeInEmails\": false } ], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-11T00:00:00\", \"Date\": \"\\/Date(1552262400000+0000)\\/\", \"DueDateString\": \"2018-12-10T00:00:00\", \"DueDate\": \"\\/Date(1544400000000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Acme Tires\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 2.0000, \"LineItemID\": \"5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f\", \"ValidationErrors\": [] } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"UpdatedDateUTC\": \"\\/Date(1552327126117+0000)\\/\", \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "invoices = { invoices: [{ type: XeroRuby::Accounting::Invoice::ACCREC, contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Acme Tires\", quantity: 2.0, unit_amount: 20.0, account_code: \"000\", tax_type: TaxType.NONE, line_amount: 40.0 }], date: \"2019-03-11\", due_date: \"2018-12-10\", reference: \"Website Design\", status: XeroRuby::Accounting::Invoice::DRAFT }]}"
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified sales invoice or purchase bill",
        "operationId": "getInvoice",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with specified Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                },
                "example": "{ \"Id\": \"516f400a-b764-4c88-831b-12d2b210fa24\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1551981658323)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\", \"InvoiceID\": \"a03ffcd2-5d91-4c7e-b483-318584e9e439\", \"InvoiceNumber\": \"INV-0006\", \"Reference\": \"Tour\", \"Payments\": [ { \"PaymentID\": \"38928000-e9a0-420c-8884-f624bab2a351\", \"Date\": \"\\/Date(1552953600000+0000)\\/\", \"Amount\": 148062.76, \"Reference\": \"Yahoo\", \"CurrencyRate\": 1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ], \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 0.00, \"AmountPaid\": 148062.76, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"3a2fe7e0-fac7-4ea2-afb2-31cedaabd294\", \"FileName\": \"helo-heros.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/a03ffcd2-5d91-4c7e-b483-318584e9e439/Attachments/helo-heros.jpg\", \"MimeType\": \"image/jpeg\", \"ContentLength\": 2878711 } ], \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [ { \"FirstName\": \"Debbie\", \"LastName\": \"Gwyther\", \"EmailAddress\": \"debbie@rockstar.com\", \"IncludeInEmails\": false } ], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-07T00:00:00\", \"Date\": \"\\/Date(1551916800000+0000)\\/\", \"DueDateString\": \"2019-03-13T00:00:00\", \"DueDate\": \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"PAID\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"ItemCode\": \"123\", \"Description\": \"Guitars Fender Strat\", \"UnitAmount\": 148062.76, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 148062.76, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"b18f39d9-7739-4246-9288-72afe939d2d5\", \"ValidationErrors\": [] } ], \"SubTotal\": 148062.76, \"TotalTax\": 0.00, \"Total\": 148062.76, \"UpdatedDateUTC\": \"\\/Date(1551981568133+0000)\\/\", \"CurrencyCode\": \"NZD\", \"FullyPaidOnDate\": \"\\/Date(1552953600000+0000)\\/\", \"StatusAttributeString\": \"ERROR\", \"ValidationErrors\": [ { \"Message\": \"Invoice # must be unique.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified sales invoices or purchase bills",
        "operationId": "updateInvoice",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoices"
              },
              "example": "{ invoices: [{ reference: \"I am Iron Man\", invoiceID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, type: Invoice.TypeEnum.ACCPAY }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Invoices array with updated Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                },
                "example": "{ \"Id\": \"bd83b60e-9d16-4a3b-9f59-0a2d0ccd35f2\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552329729002)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\", \"InvoiceID\": \"4074292c-09b3-456d-84e7-add864c6c39b\", \"InvoiceNumber\": \"INV-0008\", \"Reference\": \"My the Force be With You\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 575.00, \"AmountPaid\": 0.00, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"be392c72-c121-4f83-9512-03ac71e54c20\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Luke Skywalker\", \"EmailAddress\": \"\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1552329691573+0000)\\/\", \"ContactGroups\": [], \"IsSupplier\": false, \"IsCustomer\": true, \"DefaultCurrency\": \"NZD\", \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-11T00:00:00\", \"Date\": \"\\/Date(1552262400000+0000)\\/\", \"DueDateString\": \"2019-03-12T00:00:00\", \"DueDate\": \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"SUBMITTED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Light Saber\", \"UnitAmount\": 500.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 75.00, \"LineAmount\": 500.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"6de1bf9f-de95-4c47-9287-37305db758c9\", \"ValidationErrors\": [] } ], \"SubTotal\": 500.00, \"TotalTax\": 75.00, \"Total\": 575.00, \"UpdatedDateUTC\": \"\\/Date(1552329728987+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "invoices = { invoices: [{ reference: \"I am Iron Man\", invoice_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, type: XeroRuby::Accounting::Invoice::ACCPAY }]}"
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/pdf": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve invoices or purchase bills as PDF files",
        "operationId": "getInvoiceAsPdf",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of byte array pdf version of specified Invoices",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ],
        "x-path": "/Invoices/{InvoiceID}"
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on invoices or purchase bills",
        "operationId": "getInvoiceAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachments for specified Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": " { \"Id\": \"7e357a45-69f5-4e8f-8d7b-15da8ef50aab\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552330258523)\\/\", \"Attachments\": [ { \"AttachmentID\": \"9808ad7f-c8d4-41cf-995e-bc29cb76fd2c\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"5a500c1a-5a02-48de-939e-1d234fd170d4\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] } "
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified Attachment on invoices or purchase bills by it's ID",
        "operationId": "getInvoiceAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for an Attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Invoice as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachment on invoices or purchase bills by it's filename",
        "operationId": "getInvoiceAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the file you are attaching",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Invoice as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create an Attachment on invoices or purchase bills by it's filename",
        "operationId": "createInvoiceAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the file you are attaching",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "IncludeOnline",
            "in": "query",
            "description": "Allows an attachment to be seen by the end customer within their online invoice",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with newly created Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"971fbd18-c850-453a-825f-63f2fee096ee\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552330001318)\\/\", \"Attachments\": [ { \"AttachmentID\": \"5a500c1a-5a02-48de-939e-1d234fd170d4\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update Attachment on invoices or purchase bills by it's filename",
        "operationId": "updateInvoiceAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the file you are attaching",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"acd7d618-5fef-4d45-849c-a339ea31a973\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552330524005)\\/\", \"Attachments\": [ { \"AttachmentID\": \"08085449-fda3-45f4-a685-ff44c8a29ee3\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/OnlineInvoice": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a URL to an online invoice",
        "operationId": "getOnlineInvoice",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type OnlineInvoice array with one OnlineInvoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineInvoices"
                },
                "example": "{ \"Id\": \"d20705fb-fe1c-4366-835b-98de7474da3c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552331100745)\\/\", \"OnlineInvoices\": [ { \"OnlineInvoiceUrl\": \"https://in.xero.com/bCWCCfytGdTXoJam9HENWlQt07G6zcDaj4gQojHu\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/Email": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to email a copy of invoice to related Contact",
        "operationId": "emailInvoice",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEmpty"
              },
              "example": "{}"
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "x-isEmpty": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Invoice"
    },
    "/Invoices/{InvoiceID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an invoice",
        "operationId": "getInvoiceHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an invoice",
        "operationId": "createInvoiceHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "InvoiceID",
            "in": "path",
            "description": "Unique identifier for an Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Invoice"
    },
    "/InvoiceReminders/Settings": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve invoice reminder settings",
        "operationId": "getInvoiceReminders",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of Invoice Reminders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceReminders"
                },
                "example": "{ \"Id\": \"c7cd0953-c012-4be8-b618-63ce4c2c3494\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552331430618)\\/\", \"InvoiceReminders\": [ { \"Enabled\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "Invoice"
    },
    "/Items": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any items",
        "operationId": "getItems",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "IsSold==true"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Code ASC"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with all Item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                },
                "example": "{ \"Id\": \"8487e8d7-5fb3-4f02-b949-dec8f1e38182\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552331874897)\\/\", \"Items\": [ { \"ItemID\": \"c8c54d65-f3f2-452d-926e-bf450b12fb07\", \"Code\": \"123\", \"Description\": \"Guitars Fender Strat\", \"UpdatedDateUTC\": \"\\/Date(1551981476267+0000)\\/\", \"PurchaseDetails\": {}, \"SalesDetails\": { \"UnitPrice\": 5000.0000, \"AccountCode\": \"200\", \"TaxType\": \"OUTPUT2\" }, \"Name\": \"Guitars\", \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\": false }, { \"ItemID\": \"a4544d51-48f6-441f-a623-99ecbced6ab7\", \"Code\": \"abc65591\", \"Description\": \"Barfoo\", \"UpdatedDateUTC\": \"\\/Date(1552331873580+0000)\\/\", \"PurchaseDetails\": {}, \"SalesDetails\": {}, \"Name\": \"Hello11350\", \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\": true } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more items",
        "operationId": "createItems",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "Items with an array of Item objects in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              },
              "example": "{ items: [{ code: \"abcXYZ123\", name: \"HelloWorld11\", description: \"Foobar\", inventoryAssetAccountCode: \"140\", purchaseDetails: { cOGSAccountCode: \"500\" }}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with newly created Item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                },
                "example": "{ \"Id\": \"ae7ef7c8-9024-4d42-8d59-5f26ed3f508b\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552331871904)\\/\", \"Items\": [ { \"ItemID\": \"a4544d51-48f6-441f-a623-99ecbced6ab7\", \"Code\": \"abc65591\", \"Description\": \"foobar\", \"UpdatedDateUTC\": \"\\/Date(1552331871707)\\/\", \"PurchaseDetails\": {}, \"SalesDetails\": {}, \"Name\": \"Hello11350\", \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\": true, \"ValidationErrors\": [ { \"Message\": \"Price List Item with Code 'abc' already exists\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "items = { items: [{ code: \"abcXYZ123\", name: \"HelloWorld11\", description: \"Foobar\", inventory_asset_account_code: \"140\", purchase_details: { cogs_account_code: \"500\" }}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update or create one or more items",
        "operationId": "updateOrCreateItems",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              },
              "example": "{ items: [{ code: \"abcXYZ\", name: \"HelloWorld\", description: \"Foobar\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with newly created Item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                },
                "example": "{ \"Id\": \"ae7ef7c8-9024-4d42-8d59-5f26ed3f508b\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552331871904)\\/\", \"Items\": [ { \"ItemID\": \"a4544d51-48f6-441f-a623-99ecbced6ab7\", \"Code\": \"abc65591\", \"Description\": \"foobar\", \"UpdatedDateUTC\": \"\\/Date(1552331871707)\\/\", \"PurchaseDetails\": {}, \"SalesDetails\": {}, \"Name\": \"Hello11350\", \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\": true, \"ValidationErrors\": [ { \"Message\": \"Price List Item with Code 'abc' already exists\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "items = { items: [{ code: \"abcXYZ\", name: \"HelloWorld\", description: \"Foobar\" }]}"
      },
      "x-related-model": "Item"
    },
    "/Items/{ItemID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified item",
        "operationId": "getItem",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ItemID",
            "in": "path",
            "description": "Unique identifier for an Item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with specified Item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                },
                "example": "{ \"Id\": \"0bbd8a92-9ba7-4711-8040-8d6a609ca7e8\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552333420160)\\/\", \"Items\": [ { \"ItemID\": \"c8c54d65-f3f2-452d-926e-bf450b12fb07\", \"Code\": \"123\", \"Description\": \"Guitars Fender Strat\", \"PurchaseDescription\": \"Brand new Fender Strats\", \"UpdatedDateUTC\": \"\\/Date(1552333309387+0000)\\/\", \"PurchaseDetails\": { \"UnitPrice\": 2500.0000, \"COGSAccountCode\": \"310\", \"TaxType\": \"INPUT2\" }, \"SalesDetails\": { \"UnitPrice\": 5000.0000, \"AccountCode\": \"200\", \"TaxType\": \"OUTPUT2\" }, \"Name\": \"Guitars\", \"IsTrackedAsInventory\": true, \"InventoryAssetAccountCode\": \"630\", \"TotalCostPool\": 25000.00, \"QuantityOnHand\": 10.0000, \"IsSold\": true, \"IsPurchased\": true, \"ValidationErrors\": [] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified item",
        "operationId": "updateItem",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ItemID",
            "in": "path",
            "description": "Unique identifier for an Item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              },
              "example": "{ items:[ { code:\"abc123\", description:\"Hello Xero\" } ] }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Items array with updated Item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Items"
                },
                "example": "{ \"Id\": \"24feb629-6b14-499e-9aa1-fc2c596c0280\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552332558975)\\/\", \"Items\": [ { \"ItemID\": \"a7e87086-e0ae-4df2-83d7-e26e9a6b7786\", \"Code\": \"abc38306\", \"Description\": \"Hello Xero\", \"UpdatedDateUTC\": \"\\/Date(1552332558924)\\/\", \"PurchaseDetails\": {}, \"SalesDetails\": {}, \"Name\": \"Hello8746\", \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\": true, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete a specified item",
        "operationId": "deleteItem",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ItemID",
            "in": "path",
            "description": "Unique identifier for an Item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "x-isEmpty": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "x-related-model": "Item"
    },
    "/Items/{ItemID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history for items",
        "operationId": "getItemHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ItemID",
            "in": "path",
            "description": "Unique identifier for an Item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a history record for items",
        "operationId": "createItemHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ItemID",
            "in": "path",
            "description": "Unique identifier for an Item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Item"
    },
    "/Journals": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any journals.",
        "operationId": "getJournals",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset by a specified journal number. e.g. journals with a JournalNumber greater than the offset will be returned",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "description": "Filter to retrieve journals on a cash basis. Journals are returned on an accrual basis by default.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Journals array with all Journals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journals"
                },
                "example": "{ \"Id\": \"49a09a97-df50-4679-8043-02c86e0dcf5f\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552335214210)\\/\", \"Journals\": [ { \"JournalID\": \"1b31feeb-aa23-404c-8c19-24c827c53661\", \"JournalDate\": \"\\/Date(1539993600000+0000)\\/\", \"JournalNumber\": 1, \"CreatedDateUTC\": \"\\/Date(1541176243467+0000)\\/\", \"Reference\": \"Red Fish, Blue Fish\", \"SourceID\": \"d4956132-ed94-4dd7-9eaa-aa22dfdf06f2\", \"SourceType\": \"ACCREC\", \"JournalLines\": [ { \"JournalLineID\": \"81e6b1bf-d812-4f87-8dc4-698558ae043e\", \"AccountID\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\", \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\", \"Description\": \"\", \"NetAmount\": 40.00, \"GrossAmount\": 40.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, { \"JournalLineID\": \"ad221a8c-ebee-4c1b-88ed-d574e27e8803\", \"AccountID\": \"e0a5d892-9f9f-44f0-a153-5cb7db125170\", \"AccountCode\": \"200\", \"AccountType\": \"REVENUE\", \"AccountName\": \"Sales\", \"Description\": \"Acme Tires\", \"NetAmount\": -40.00, \"GrossAmount\": -40.00, \"TaxAmount\": 0.00, \"TaxType\": \"NONE\", \"TaxName\": \"No GST\", \"TrackingCategories\": [] } ] }, { \"JournalID\": \"2be66e45-805b-46de-921d-c67e1d3dad2a\", \"JournalDate\": \"\\/Date(1539993600000+0000)\\/\", \"JournalNumber\": 9, \"CreatedDateUTC\": \"\\/Date(1541176504083+0000)\\/\", \"Reference\": \"Red Fish, Blue Fish\", \"SourceID\": \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"SourceType\": \"ACCREC\", \"JournalLines\": [ { \"JournalLineID\": \"ba8a5680-a753-4a35-b3dd-0bc72e5c26a1\", \"AccountID\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\", \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\", \"Description\": \"\", \"NetAmount\": 40.00, \"GrossAmount\": 40.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, { \"JournalLineID\": \"09a0b9b9-0222-4e24-8c31-efef472e22f1\", \"AccountID\": \"e0a5d892-9f9f-44f0-a153-5cb7db125170\", \"AccountCode\": \"200\", \"AccountType\": \"REVENUE\", \"AccountName\": \"Sales\", \"Description\": \"Acme Tires\", \"NetAmount\": -40.00, \"GrossAmount\": -40.00, \"TaxAmount\": 0.00, \"TaxType\": \"NONE\", \"TaxName\": \"No GST\", \"TrackingCategories\": [] } ] }, { \"JournalID\": \"d0ed2957-ebba-4d3a-8367-ae9ccd574885\", \"JournalDate\": \"\\/Date(1543449600000+0000)\\/\", \"JournalNumber\": 14, \"CreatedDateUTC\": \"\\/Date(1541176592673+0000)\\/\", \"SourceID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"SourceType\": \"ACCRECPAYMENT\", \"JournalLines\": [ { \"JournalLineID\": \"1bdae2b7-3035-40ec-b344-b12b1c23adc4\", \"AccountID\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\", \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\", \"Description\": \"\", \"NetAmount\": -46.00, \"GrossAmount\": -46.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, { \"JournalLineID\": \"353be85e-ae79-4bb3-9483-5ea7682fc0a3\", \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"AccountCode\": \"970\", \"AccountType\": \"EQUITY\", \"AccountName\": \"Owner A Funds Introduced\", \"Description\": \"\", \"NetAmount\": 46.00, \"GrossAmount\": 46.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] } ] }, { \"JournalID\": \"772e8133-7f12-4edc-ab98-aa6dceb16c9d\", \"JournalDate\": \"\\/Date(1552262400000+0000)\\/\", \"JournalNumber\": 30, \"CreatedDateUTC\": \"\\/Date(1552333389227+0000)\\/\", \"Reference\": \"\", \"SourceID\": \"5376633d-0456-43a3-8234-e457a3f50a12\", \"SourceType\": \"ACCPAY\", \"JournalLines\": [ { \"JournalLineID\": \"33469836-642f-4973-a708-0e99339dff4a\", \"AccountID\": \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"AccountCode\": \"800\", \"AccountType\": \"CURRLIAB\", \"AccountName\": \"Accounts Payable\", \"Description\": \"\", \"NetAmount\": -28750.00, \"GrossAmount\": -28750.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, { \"JournalLineID\": \"4f3b6462-5cf6-4b55-a2ae-de4039878215\", \"AccountID\": \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"AccountCode\": \"630\", \"AccountType\": \"CURRENT\", \"AccountName\": \"Inventory\", \"Description\": \"Brand new Fender Strats\", \"NetAmount\": 25000.00, \"GrossAmount\": 28750.00, \"TaxAmount\": 3750.00, \"TaxType\": \"INPUT2\", \"TaxName\": \"15% GST on Expenses\", \"TrackingCategories\": [] }, { \"JournalLineID\": \"534e822e-d441-48a7-8e57-5ad54729e83e\", \"AccountID\": \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"AccountCode\": \"820\", \"AccountType\": \"CURRLIAB\", \"AccountName\": \"GST\", \"Description\": \"\", \"NetAmount\": 3750.00, \"GrossAmount\": 3750.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.journals.read"
            ]
          }
        ]
      },
      "x-related-model": "Journal"
    },
    "/Journals/{JournalID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified journals.",
        "operationId": "getJournal",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "JournalID",
            "in": "path",
            "description": "Unique identifier for a Journal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Journals array with specified Journal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journals"
                },
                "example": "{ \"Id\": \"39ab8367-eb14-420d-83a9-e01ddddd21f8\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552335613002)\\/\", \"Journals\": [ { \"JournalID\": \"1b31feeb-aa23-404c-8c19-24c827c53661\", \"JournalDate\": \"\\/Date(1539993600000+0000)\\/\", \"JournalNumber\": 1, \"CreatedDateUTC\": \"\\/Date(1541176243467+0000)\\/\", \"Reference\": \"Red Fish, Blue Fish\", \"JournalLines\": [ { \"JournalLineID\": \"81e6b1bf-d812-4f87-8dc4-698558ae043e\", \"AccountID\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\", \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\", \"Description\": \"\", \"NetAmount\": 40.00, \"GrossAmount\": 40.00, \"TaxAmount\": 0.00, \"TaxType\": \"\", \"TaxName\": \"\", \"TrackingCategories\": [] }, { \"JournalLineID\": \"ad221a8c-ebee-4c1b-88ed-d574e27e8803\", \"AccountID\": \"e0a5d892-9f9f-44f0-a153-5cb7db125170\", \"AccountCode\": \"200\", \"AccountType\": \"REVENUE\", \"AccountName\": \"Sales\", \"Description\": \"Acme Tires\", \"NetAmount\": -40.00, \"GrossAmount\": -40.00, \"TaxAmount\": 0.00, \"TaxType\": \"NONE\", \"TaxName\": \"No GST\", \"TrackingCategories\": [] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.journals.read"
            ]
          }
        ]
      },
      "x-related-model": "Journal"
    },
    "/LinkedTransactions": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Retrieve linked transactions (billable expenses)",
        "operationId": "getLinkedTransactions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Up to 100 linked transactions will be returned in a single API call. Use the page parameter to specify the page to be returned e.g. page=1.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "LinkedTransactionID",
            "in": "query",
            "description": "The Xero identifier for an Linked Transaction",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "SourceTransactionID",
            "in": "query",
            "description": "Filter by the SourceTransactionID. Get the linked transactions created from a particular ACCPAY invoice",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "ContactID",
            "in": "query",
            "description": "Filter by the ContactID. Get all the linked transactions that have been assigned to a particular customer.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Filter by the combination of ContactID and Status. Get  the linked transactions associaed to a  customer and with a status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "APPROVED"
          },
          {
            "name": "TargetTransactionID",
            "in": "query",
            "description": "Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with all LinkedTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedTransactions"
                },
                "example": "{ \"Id\": \"516aabd0-e670-48d5-b0eb-10dce4494dd8\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552348338096)\\/\", \"LinkedTransactions\": [ { \"LinkedTransactionID\": \"5cf7d9c0-b9a7-4433-a2dc-ae3c11bba39b\", \"SourceTransactionID\": \"aec416dd-38ea-40dc-9f0b-813c8c71f87f\", \"SourceLineItemID\": \"77e0b23b-5b79-4f4b-ae20-c9031d41442f\", \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"TargetTransactionID\": \"83693fc1-5b05-4807-b190-109d4a85dd5f\", \"TargetLineItemID\": \"d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c\", \"Status\": \"ONDRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\": \"\\/Date(1552347991000+0000)\\/\", \"SourceTransactionTypeCode\": \"ACCPAY\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create linked transactions (billable expenses)",
        "operationId": "createLinkedTransaction",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "LinkedTransaction object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedTransaction"
              },
              "example": "{ sourceTransactionID: \"00000000-0000-0000-000-000000000000\", sourceLineItemID: \"00000000-0000-0000-000-000000000000\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with newly created LinkedTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedTransactions"
                },
                "example": "{ \"Id\": \"f32b30e5-32d1-42a8-bcc9-5b22828f725c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552351054646)\\/\", \"LinkedTransactions\": [ { \"LinkedTransactionID\": \"e9684b6c-4df9-45a0-917b-85cc29857008\", \"SourceTransactionID\": \"a848644a-f20f-4630-98c3-386bd7505631\", \"SourceLineItemID\": \"b0df260d-3cc8-4ced-9bd6-41924f624ed3\", \"Status\": \"DRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\": \"\\/Date(1552351055000+0000)\\/\", \"SourceTransactionTypeCode\": \"ACCPAY\", \"ValidationErrors\": [ { \"Message\": \"The SourceLineItemID and SourceTransactionID do not match\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "linked_transaction = { source_transaction_id: \"00000000-0000-0000-000-000000000000\", source_line_item_id: \"00000000-0000-0000-000-000000000000\" }"
      },
      "x-related-model": "LinkedTransaction"
    },
    "/LinkedTransactions/{LinkedTransactionID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified linked transactions (billable expenses)",
        "operationId": "getLinkedTransaction",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "description": "Unique identifier for a LinkedTransaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with a specified LinkedTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedTransactions"
                },
                "example": "{ \"Id\": \"171ca542-874d-44e2-8930-db9bccd7d88b\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552348339875)\\/\", \"LinkedTransactions\": [ { \"LinkedTransactionID\": \"5cf7d9c0-b9a7-4433-a2dc-ae3c11bba39b\", \"SourceTransactionID\": \"aec416dd-38ea-40dc-9f0b-813c8c71f87f\", \"SourceLineItemID\": \"77e0b23b-5b79-4f4b-ae20-c9031d41442f\", \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"TargetTransactionID\": \"83693fc1-5b05-4807-b190-109d4a85dd5f\", \"TargetLineItemID\": \"d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c\", \"Status\": \"ONDRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\": \"\\/Date(1552347991000+0000)\\/\", \"SourceTransactionTypeCode\": \"ACCPAY\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified linked transactions (billable expenses)",
        "operationId": "updateLinkedTransaction",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "description": "Unique identifier for a LinkedTransaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedTransactions"
              },
              "example": "{ linkedTransactions: [{ sourceLineItemID: \"00000000-0000-0000-000-000000000000\", contactID: \"00000000-0000-0000-000-000000000000\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type LinkedTransactions array with updated LinkedTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedTransactions"
                },
                "example": "{ \"Id\": \"bd364af7-08f0-432b-81db-c1e5ba05f3dd\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552351488159)\\/\", \"LinkedTransactions\": [ { \"LinkedTransactionID\": \"e9684b6c-4df9-45a0-917b-85cc29857008\", \"SourceTransactionID\": \"a848644a-f20f-4630-98c3-386bd7505631\", \"SourceLineItemID\": \"b0df260d-3cc8-4ced-9bd6-41924f624ed3\", \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\", \"Status\": \"DRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\": \"\\/Date(1552351055000+0000)\\/\", \"SourceTransactionTypeCode\": \"ACCPAY\" } ] }"
              }
            }
          },
          "400": {
            "description": "Success - return response of type LinkedTransactions array with updated LinkedTransaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"LinkedTransactionID\": \"5a68b5b4-8cf0-4af5-8c3c-513cc19e1c73\", \"SourceTransactionID\": \"aec416dd-38ea-40dc-9f0b-813c8c71f87f\", \"SourceLineItemID\": \"77e0b23b-5b79-4f4b-ae20-c9031d41442f\", \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\", \"TargetTransactionID\": \"83693fc1-5b05-4807-b190-109d4a85dd5f\", \"TargetLineItemID\": \"d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c\", \"Status\": \"ONDRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\": \"\\/Date(1552349706000+0000)\\/\", \"SourceTransactionTypeCode\": \"ACCPAY\", \"ValidationErrors\": [ { \"Message\": \"The ContactID and the TargetTransaction ContactID do not match\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "linked_transactions = { linked_transactions: [{ source_line_item_id: \"00000000-0000-0000-000-000000000000\", contact_id: \"00000000-0000-0000-000-000000000000\" }]}"
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete a specified linked transactions (billable expenses)",
        "operationId": "deleteLinkedTransaction",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "LinkedTransactionID",
            "in": "path",
            "description": "Unique identifier for a LinkedTransaction",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "204": {
            "description": "Success - return response 204 no content",
            "x-isEmpty": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ]
      },
      "x-related-model": "LinkedTransaction"
    },
    "/ManualJournals": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any manual journals",
        "operationId": "getManualJournals",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + ManualJournal.StatusEnum.DRAFT + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::ManualJournal::DRAFT}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Date ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 – Up to 100 manual journals will be returned in a single API call with line items shown for each overpayment",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with a all ManualJournals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualJournals"
                },
                "example": "{ \"Id\": \"8a508ec1-b578-48bf-97df-020c918fbf7d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552357217359)\\/\", \"ManualJournals\": [ { \"Date\": \"\\/Date(1553126400000+0000)\\/\", \"Status\": \"POSTED\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552357188083+0000)\\/\", \"ManualJournalID\": \"0b159335-606b-485f-b51b-97b3b32bad32\", \"Narration\": \"Reversal: These aren't the droids you are looking for\", \"JournalLines\": [], \"ShowOnCashBasisReports\": true, \"HasAttachments\": false }, { \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"POSTED\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552357188147+0000)\\/\", \"ManualJournalID\": \"99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4\", \"Narration\": \"These aren't the droids you are looking for\", \"JournalLines\": [], \"ShowOnCashBasisReports\": true, \"HasAttachments\": true }, { \"Date\": \"\\/Date(1552262400000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552357216843+0000)\\/\", \"ManualJournalID\": \"ecb6b362-c78f-462a-a229-a66abf115e92\", \"Narration\": \"Foo bar\", \"JournalLines\": [], \"ShowOnCashBasisReports\": true, \"HasAttachments\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more manual journals",
        "operationId": "createManualJournals",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "ManualJournals array with ManualJournal object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualJournals"
              },
              "example": "{ manualJournals: [{ narration: \"Foo bar\", date: \"2019-03-14\", journalLines: [{ lineAmount: 100.0, accountCode: \"400\", description: \"Hello there\" }, { lineAmount: -100.0, accountCode: \"400\", description: \"Goodbye\", tracking: [{ name: \"Simpson\", option: \"Bart\" }] }]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with newly created ManualJournal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualJournals"
                },
                "example": "{ \"Id\": \"45dfa608-0fcb-4f30-a377-c82cd348569c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552595972952)\\/\", \"ManualJournals\": [ { \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552595972920+0000)\\/\", \"ManualJournalID\": \"d312dd5e-a53e-46d1-9d51-c569ef4570b7\", \"Narration\": \"Foo bar\", \"JournalLines\": [ { \"Description\": \"Hello there\", \"TaxType\": \"NONE\", \"LineAmount\": 100.00, \"AccountCode\": \"400\", \"Tracking\": [], \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false }, { \"Description\": \"Goodbye\", \"TaxType\": \"NONE\", \"LineAmount\": -100.00, \"AccountCode\": \"400\", \"Tracking\": [ { \"Name\": \"Simpsons\", \"Option\": \"Bart\", \"TrackingCategoryID\": \"6a68adde-f210-4465-b0a9-0d8cc6f50762\", \"TrackingOptionID\": \"dc54c220-0140-495a-b925-3246adc0075f\" } ], \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false } ], \"ShowOnCashBasisReports\": true, \"Warnings\": [ { \"Message\": \"Account code '476' has been removed as it does not match a recognised account.\" } ], \"ValidationErrors\": [ { \"Message\": \"The total debits (100.00) must equal total credits (-10.00)\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "manual_journals = { manual_journals: [{ narration: \"Foo bar\", date: \"2019-03-14\", journal_lines: [{ line_amount: 100.0, account_code: \"400\", description: \"Hello there\" }, { line_amount: -100.0, account_code: \"400\", description: \"Goodbye\", tracking: [{ name: \"Simpson\", option: \"Bart\" }] }]}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a single manual journal",
        "operationId": "updateOrCreateManualJournals",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "ManualJournals array with ManualJournal object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualJournals"
              },
              "example": "{ manualJournals: [{ narration: \"Foo bar\", journalLines: [{ lineAmount: 100.0, accountCode: \"400\", description: \"Hello there\" },{ lineAmount: -100.0, accountCode: \"400\", description: \"Goodbye\", tracking: [{ name: \"Simpsons\", option: \"Bart\" }]}], date: \"2019-03-14\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with newly created ManualJournal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualJournals"
                },
                "example": "{ \"Id\": \"45dfa608-0fcb-4f30-a377-c82cd348569c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552595972952)\\/\", \"ManualJournals\": [ { \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552595972920+0000)\\/\", \"ManualJournalID\": \"d312dd5e-a53e-46d1-9d51-c569ef4570b7\", \"Narration\": \"Foo bar\", \"JournalLines\": [ { \"Description\": \"Hello there\", \"TaxType\": \"NONE\", \"LineAmount\": 100.00, \"AccountCode\": \"400\", \"Tracking\": [], \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false }, { \"Description\": \"Goodbye\", \"TaxType\": \"NONE\", \"LineAmount\": -100.00, \"AccountCode\": \"400\", \"Tracking\": [ { \"Name\": \"Simpsons\", \"Option\": \"Bart\", \"TrackingCategoryID\": \"6a68adde-f210-4465-b0a9-0d8cc6f50762\", \"TrackingOptionID\": \"dc54c220-0140-495a-b925-3246adc0075f\" } ], \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false } ], \"ShowOnCashBasisReports\": true, \"Warnings\": [ { \"Message\": \"Account code '476' has been removed as it does not match a recognised account.\" } ], \"ValidationErrors\": [ { \"Message\": \"The total debits (100.00) must equal total credits (-10.00)\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "manual_journals = { manual_journals: [{ narration: \"Foo bar\", date: \"2019-03-14\", journal_lines: [{ line_amount: 100.0, account_code: \"400\", description: \"Hello there\" },{ line_amount: -100.0, account_code: \"400\", description: \"Goodbye\", tracking: [{ name: \"Simpsons\", option: \"Bart\" }]}] }]}"
      },
      "x-related-model": "ManualJournal"
    },
    "/ManualJournals/{ManualJournalID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified manual journals",
        "operationId": "getManualJournal",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with a specified ManualJournals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualJournals"
                },
                "example": "{ \"Id\": \"7321fc21-1a13-4f40-ae47-df59cff5676d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552399859139)\\/\", \"ManualJournals\": [ { \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"POSTED\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552357188147+0000)\\/\", \"ManualJournalID\": \"99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4\", \"Narration\": \"These aren't the droids you are looking for\", \"JournalLines\": [ { \"Description\": \"These aren't the droids you are looking for\", \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 100.00, \"AccountCode\": \"429\", \"Tracking\": [], \"AccountID\": \"160bad11-c1b7-4c7e-8903-dca925d78721\", \"IsBlank\": false }, { \"Description\": \"Yes the are\", \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": -100.00, \"AccountCode\": \"200\", \"Tracking\": [], \"AccountID\": \"e0a5d892-9f9f-44f0-a153-5cb7db125170\", \"IsBlank\": false } ], \"ShowOnCashBasisReports\": true, \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"166ca8f8-8bc6-4780-8466-a0e474d586ea\", \"FileName\": \"giphy.gif\", \"Url\": \"https://api.xero.com/api.xro/2.0/manualjournal/99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4/Attachments/giphy.gif\", \"MimeType\": \"image/gif\", \"ContentLength\": 495727 }, { \"AttachmentID\": \"5e5036f9-b1e0-4c5d-a93f-61900137e40b\", \"FileName\": \"ridehistory.pdf\", \"Url\": \"https://api.xero.com/api.xro/2.0/manualjournal/99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4/Attachments/ridehistory.pdf\", \"MimeType\": \"application/pdf\", \"ContentLength\": 4423 } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified manual journal",
        "operationId": "updateManualJournal",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualJournals"
              },
              "example": "{ manualJournals: [{ narration: \"Hello Xero\", manualJournalID: \"00000000-0000-0000-000-000000000000\", journalLines: [] }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type ManualJournals array with an updated ManualJournal",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManualJournals"
                },
                "example": "{ \"Id\": \"b694559c-686c-4047-b657-661ba6c0dd1f\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552357736850)\\/\", \"ManualJournals\": [ { \"Date\": \"\\/Date(1552262400000+0000)\\/\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\": \"\\/Date(1552357736820+0000)\\/\", \"ManualJournalID\": \"07eac261-78ef-47a0-a0eb-a57b74137877\", \"Narration\": \"Hello Xero\", \"JournalLines\": [ { \"Description\": \"Hello there\", \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 100.00, \"AccountCode\": \"400\", \"Tracking\": [], \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false }, { \"Description\": \"Goodbye\", \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": -100.00, \"AccountCode\": \"400\", \"Tracking\": [], \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false } ], \"ShowOnCashBasisReports\": true, \"HasAttachments\": false, \"Attachments\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "manual_journals = { manual_journals: [{ narration: \"Hello Xero\", manual_journal_id: \"00000000-0000-0000-000-000000000000\", journal_ines: [] }]}"
      },
      "x-related-model": "ManualJournal"
    },
    "/ManualJournals/{ManualJournalID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachment for manual journals",
        "operationId": "getManualJournalAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with all Attachments for a ManualJournals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"5fa4b3ef-7945-45a7-9bab-10e830673dfb\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552404121471)\\/\", \"Attachments\": [ { \"AttachmentID\": \"16e86f32-3e25-4209-8662-c0dfd91b654c\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"ff7c439e-a057-4807-ac2c-b558d7df7511\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "ManualJournal"
    },
    "/ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve specified Attachment on ManualJournals",
        "operationId": "getManualJournalAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for a Attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Manual Journal as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "ManualJournal"
    },
    "/ManualJournals/{ManualJournalID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve specified Attachment on ManualJournal by file name",
        "operationId": "getManualJournalAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Manual Journal as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a specified Attachment on ManualJournal by file name",
        "operationId": "createManualJournalAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with a newly created Attachment for a ManualJournals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"a864994c-e7d7-4dee-b5ca-0a729fde2f39\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552400898428)\\/\", \"Attachments\": [ { \"AttachmentID\": \"47ac97ff-d4f9-48a0-8a8e-49fae29129e7\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified Attachment on ManualJournal by file name",
        "operationId": "updateManualJournalAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ManualJournalID",
            "in": "path",
            "description": "Unique identifier for a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a ManualJournal",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with an update Attachment for a ManualJournals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"e1cb9deb-a8f0-477f-b4d1-cf0c6c39e080\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552401039306)\\/\", \"Attachments\": [ { \"AttachmentID\": \"16e86f32-3e25-4209-8662-c0dfd91b654c\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "ManualJournal"
    },
    "/Organisation": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Organisation details",
        "operationId": "getOrganisations",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Organisation array with all Organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisations"
                },
                "example": "{ \"Id\": \"27b7a645-a3ee-43c8-b2c6-a2fa7b84c8c5\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552404447003)\\/\", \"Organisations\": [ { \"APIKey\": \"CTJ60UH519MXQIXEJSDPDALS3EOZ5Y\", \"Name\": \"Dev Evangelist - Sid Test 3 (NZ-2016-02)\", \"LegalName\": \"Dev Evangelist - Sid Test 3 (NZ-2016-02)\", \"PaysTax\": true, \"Version\": \"NZ\", \"OrganisationType\": \"COMPANY\", \"BaseCurrency\": \"NZD\", \"CountryCode\": \"NZ\", \"IsDemoCompany\": false, \"OrganisationStatus\": \"ACTIVE\", \"TaxNumber\": \"071-138-054\", \"FinancialYearEndDay\": 31, \"FinancialYearEndMonth\": 3, \"SalesTaxBasis\": \"PAYMENTS\", \"SalesTaxPeriod\": \"TWOMONTHS\", \"DefaultSalesTax\": \"Tax Exclusive\", \"DefaultPurchasesTax\": \"Tax Exclusive\", \"PeriodLockDate\": \"\\/Date(1546214400000+0000)\\/\", \"EndOfYearLockDate\": \"\\/Date(1546214400000+0000)\\/\", \"CreatedDateUTC\": \"\\/Date(1455827393000)\\/\", \"OrganisationEntityType\": \"COMPANY\", \"Timezone\": \"NEWZEALANDSTANDARDTIME\", \"ShortCode\": \"!mBdtL\", \"OrganisationID\": \"b2c885a9-4bb9-4a00-9b6e-6c2bf60b1a2b\", \"Edition\": \"BUSINESS\", \"Class\": \"PREMIUM\", \"Addresses\": [], \"Phones\": [], \"ExternalLinks\": [], \"PaymentTerms\": {} } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "Organisation"
    },
    "/Organisation/{OrganisationID}/CISSettings": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you To verify if an organisation is using contruction industry scheme, you can retrieve the CIS settings for the organistaion.",
        "operationId": "getOrganisationCISSettings",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "OrganisationID",
            "in": "path",
            "description": "The unique Xero identifier for an organisation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Organisation array with specified Organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CISOrgSetting"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "Organisation"
    },
    "/Overpayments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve overpayments",
        "operationId": "getOverpayments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Overpayment.StatusEnum.AUTHORISED + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Overpayment::AUTHORISED}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "RemainingCredit ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 – Up to 100 overpayments will be returned in a single API call with line items shown for each overpayment",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Overpayments array with all Overpayments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overpayments"
                },
                "example": "{ \"Id\": \"c0ce675e-e5bc-4b2a-a20e-76a9eaedf89d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552428951416)\\/\", \"Overpayments\": [ { \"OverpaymentID\": \"098b4dcb-5622-4699-87f8-9d40c4ccceb3\", \"ID\": \"098b4dcb-5622-4699-87f8-9d40c4ccceb3\", \"Type\": \"SPEND-OVERPAYMENT\", \"RemainingCredit\": 500.00, \"Allocations\": [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"af3ffcc1-c578-4658-82f3-5d8d458cc7af\", \"Name\": \"Daddy Warbucks\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 500.00, \"TotalTax\": 0.00, \"Total\": 500.00, \"UpdatedDateUTC\": \"\\/Date(1552428535123+0000)\\/\", \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\": \"2a8bda49-8908-473b-8bcf-1f90990460eb\", \"ID\": \"2a8bda49-8908-473b-8bcf-1f90990460eb\", \"Type\": \"RECEIVE-OVERPAYMENT\", \"RemainingCredit\": 20.00, \"Allocations\": [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1552428568250+0000)\\/\", \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\": \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"ID\": \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"Type\": \"SPEND-OVERPAYMENT\", \"RemainingCredit\": 3000.00, \"Allocations\": [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 3000.00, \"TotalTax\": 0.00, \"Total\": 3000.00, \"UpdatedDateUTC\": \"\\/Date(1552428781527+0000)\\/\", \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\": \"0859adbc-ea00-40cd-a877-258cf8644975\", \"ID\": \"0859adbc-ea00-40cd-a877-258cf8644975\", \"Type\": \"RECEIVE-OVERPAYMENT\", \"RemainingCredit\": 20.00, \"Allocations\": [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1552428842190+0000)\\/\", \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\": \"687b877f-634a-415d-92b2-74e62977de30\", \"ID\": \"687b877f-634a-415d-92b2-74e62977de30\", \"Type\": \"RECEIVE-OVERPAYMENT\", \"RemainingCredit\": 20.00, \"Allocations\": [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1552428950730+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "Overpayment"
    },
    "/Overpayments/{OverpaymentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified overpayments",
        "operationId": "getOverpayment",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "description": "Unique identifier for a Overpayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Overpayments array with specified Overpayments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overpayments"
                },
                "example": " { \"Id\": \"46c9e8e2-9410-4e75-9297-f0ca8fa76c32\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553278835158)\\/\", \"Overpayments\": [ { \"OverpaymentID\": \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"ID\": \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"CurrencyRate\": 1.000000, \"Type\": \"SPEND-OVERPAYMENT\", \"RemainingCredit\": 2999.00, \"Allocations\": [ { \"Amount\": 1.00, \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Invoice\": { \"InvoiceID\": \"c45720a1-ade3-4a38-a064-d15489be6841\", \"InvoiceNumber\": \"\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] } } ], \"Payments\": [], \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"247dd942-5245-47a7-adb1-4d9ea075b431\", \"FileName\": \"giphy.gif\", \"Url\": \"https://api.xero.com/api.xro/2.0/banktransaction/ed7f6041-c915-4667-bd1d-54c48e92161e/Attachments/giphy.gif\", \"MimeType\": \"image/gif\", \"ContentLength\": 495727 } ], \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Broken TV deposit\", \"UnitAmount\": 3000.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 3000.00, \"AccountCode\": \"800\", \"Tracking\": [], \"Quantity\": 1.0000, \"DiscountEnteredAsPercent\": true, \"ValidationErrors\": [] } ], \"SubTotal\": 3000.00, \"TotalTax\": 0.00, \"Total\": 3000.00, \"UpdatedDateUTC\": \"\\/Date(1552428952890+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "Overpayment"
    },
    "/Overpayments/{OverpaymentID}/Allocations": {
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a single allocation for an overpayment",
        "operationId": "createOverpaymentAllocations",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "description": "Unique identifier for a Overpayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Allocations array with Allocation object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Allocations"
              },
              "example": "{ allocations: [{ invoice: { invoiceID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, type: Invoice.TypeEnum.ACCPAY }, amount: 1.0, date: \"2019-03-12\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Allocations array with all Allocation for Overpayments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Allocations"
                },
                "example": "{ \"Id\": \"3b7f7be2-384a-4703-bcfb-c56e9116c914\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552428952968)\\/\", \"Allocations\": [ { \"Amount\": 1.00, \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Invoice\": { \"InvoiceID\": \"c45720a1-ade3-4a38-a064-d15489be6841\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [], \"ValidationErrors\": [] }, \"Overpayment\": { \"OverpaymentID\": \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"ID\": \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"LineItems\": [] }, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "allocations = { allocations: [{ invoice: { invoice_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, type: XeroRuby::Accounting::Invoice::ACCPAY }, amount: 1.0, date: \"2019-03-12\" }]}"
      },
      "x-related-model": "Overpayment"
    },
    "/Overpayments/{OverpaymentID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an Overpayment",
        "operationId": "getOverpaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "description": "Unique identifier for a Overpayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create history records of an Overpayment",
        "operationId": "createOverpaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "OverpaymentID",
            "in": "path",
            "description": "Unique identifier for a Overpayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error - API is not able to create HistoryRecord for Overpayments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"DateUTCString\": \"2019-03-12T22:30:13\", \"DateUTC\": \"\\/Date(1552429813667)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"The document with the supplied id was not found for this endpoint.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Overpayment"
    },
    "/Payments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve payments for invoices and credit notes",
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Payment.StatusEnum.AUTHORISED + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Payment::AUTHORISED}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Amount ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Up to 100 payments will be returned in a single API call",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for all Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                },
                "example": "{ \"Id\": \"9f310473-e1b5-4704-a25c-eec653deb596\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552431874205)\\/\", \"Payments\": [ { \"PaymentID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"BatchPayment\": { \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\" }, \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\", \"TotalAmount\": \"50.00\", \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\", \"IsReconciled\": \"false\" }, \"Date\": \"\\/Date(1543449600000+0000)\\/\", \"BankAmount\": 46.00, \"Amount\": 46.00, \"Reference\": \"\", \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\", \"HasAccount\": true, \"IsReconciled\": false, \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\" }, \"Invoice\": { \"Type\": \"ACCREC\", \"InvoiceID\": \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"InvoiceNumber\": \"INV-0002\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"ContactNumber\": \"\", \"Name\": \"Barney Rubble-83203\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"LineItems\": [], \"CurrencyCode\": \"NZD\" }, \"HasValidationErrors\": false }, { \"PaymentID\": \"6b037c9b-2e5d-4905-84d3-eabfb3438242\", \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"BankAmount\": 2.00, \"Amount\": 2.00, \"Reference\": \"Too much\", \"CurrencyRate\": 1.000000, \"PaymentType\": \"ARCREDITPAYMENT\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1551812346173+0000)\\/\", \"HasAccount\": true, \"IsReconciled\": false, \"Account\": { \"AccountID\": \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Code\": \"980\" }, \"Invoice\": { \"Type\": \"ACCRECCREDIT\", \"InvoiceID\": \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"InvoiceNumber\": \"CN-0005\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactNumber\": \"\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"LineItems\": [], \"CurrencyCode\": \"NZD\" }, \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create multiple payments for invoices or credit notes",
        "operationId": "createPayments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Payments array with Payment object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payments"
              },
              "example": "{ payments: [{ invoice: { invoiceID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, type: Invoice.TypeEnum.ACCPAY }, account: { code: \"970\" }, date: \"2019-03-12\", amount: 1.0 }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for newly created Payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                },
                "example": "{ \"Id\": \"83b5715a-6a77-4c16-b5b8-2da08b5fde44\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552432238716)\\/\", \"Payments\": [ { \"PaymentID\": \"61ed71fc-01bf-4eb8-8419-8a18789ff45f\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"BankAmount\": 1.00, \"Amount\": 1.00, \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1552432238623+0000)\\/\", \"HasAccount\": true, \"IsReconciled\": false, \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\", \"Name\": \"Owner A Funds Introduced\" }, \"Invoice\": { \"Type\": \"ACCREC\", \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\", \"InvoiceNumber\": \"INV-0004\", \"Reference\": \"\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 229.00, \"AmountPaid\": 1.00, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney Rubble-83203\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2018-10-10T00:00:00\", \"Date\": \"\\/Date(1539129600000+0000)\\/\", \"DueDateString\": \"2018-10-18T00:00:00\", \"DueDate\": \"\\/Date(1539820800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"boo\", \"UnitAmount\": 200.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 30.00, \"LineAmount\": 200.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"173dfdb9-43b5-4bd2-ae25-9419e662a3a7\", \"ValidationErrors\": [] } ], \"SubTotal\": 200.00, \"TotalTax\": 30.00, \"Total\": 230.00, \"UpdatedDateUTC\": \"\\/Date(1552432238623+0000)\\/\", \"CurrencyCode\": \"NZD\" }, \"HasValidationErrors\": true, \"ValidationErrors\": [ { \"Message\": \"Payment amount exceeds the amount outstanding on this document\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "payments = { payments: [{ invoice: { invoice_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, type: XeroRuby::Accounting::Invoice::ACCPAY }, account: { code: \"970\" }, date: \"2019-03-12\", amount: 1.0 }]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a single payment for invoices or credit notes",
        "operationId": "createPayment",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "Request body with a single Payment object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              },
              "example": "{ invoice: { invoiceID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, type: Invoice.TypeEnum.ACCPAY }, account: { code: \"970\" }, date: \"2019-03-12\", amount: 1.0 }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for newly created Payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                },
                "example": "{ \"Id\": \"83b5715a-6a77-4c16-b5b8-2da08b5fde44\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552432238716)\\/\", \"Payments\": [ { \"PaymentID\": \"61ed71fc-01bf-4eb8-8419-8a18789ff45f\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"BankAmount\": 1.00, \"Amount\": 1.00, \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1552432238623+0000)\\/\", \"HasAccount\": true, \"IsReconciled\": false, \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\", \"Name\": \"Owner A Funds Introduced\" }, \"Invoice\": { \"Type\": \"ACCREC\", \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\", \"InvoiceNumber\": \"INV-0004\", \"Reference\": \"\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 229.00, \"AmountPaid\": 1.00, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney Rubble-83203\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2018-10-10T00:00:00\", \"Date\": \"\\/Date(1539129600000+0000)\\/\", \"DueDateString\": \"2018-10-18T00:00:00\", \"DueDate\": \"\\/Date(1539820800000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"boo\", \"UnitAmount\": 200.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 30.00, \"LineAmount\": 200.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"173dfdb9-43b5-4bd2-ae25-9419e662a3a7\", \"ValidationErrors\": [] } ], \"SubTotal\": 200.00, \"TotalTax\": 30.00, \"Total\": 230.00, \"UpdatedDateUTC\": \"\\/Date(1552432238623+0000)\\/\", \"CurrencyCode\": \"NZD\" }, \"HasValidationErrors\": true, \"ValidationErrors\": [ { \"Message\": \"Payment amount exceeds the amount outstanding on this document\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "invoice = { invoice: { invoice_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, type: XeroRuby::Accounting::Invoice::ACCPAY }, account: { code: \"970\" }, date: \"2019-03-12\", amount: 1.0 }"
      },
      "x-related-model": "Payment"
    },
    "/Payments/{PaymentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified payment for invoices and credit notes",
        "operationId": "getPayment",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "description": "Unique identifier for a Payment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for specified Payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                },
                "example": "{ \"Id\": \"4876f9ee-3a17-47d8-8c1b-84377c8f2998\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552431874852)\\/\", \"Payments\": [ { \"PaymentID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"BatchPayment\": { \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\" }, \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"Date\": \"\\/Date(1543449600000+0000)\\/\", \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\", \"TotalAmount\": \"50.00\", \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\", \"IsReconciled\": \"false\" }, \"Date\": \"\\/Date(1543449600000+0000)\\/\", \"BankAmount\": 46.00, \"Amount\": 46.00, \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\", \"HasAccount\": true, \"IsReconciled\": false, \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\", \"Name\": \"Owner A Funds Introduced\" }, \"Invoice\": { \"Type\": \"ACCREC\", \"InvoiceID\": \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"InvoiceNumber\": \"INV-0002\", \"Reference\": \"Red Fish, Blue Fish\", \"Payments\": [ { \"PaymentID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"Date\": \"\\/Date(1543449600000+0000)\\/\", \"Amount\": 46.00, \"CurrencyRate\": 1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ], \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 0.00, \"AmountPaid\": 46.00, \"SentToContact\": true, \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney Rubble-83203\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2018-10-20T00:00:00\", \"Date\": \"\\/Date(1539993600000+0000)\\/\", \"DueDateString\": \"2018-12-30T00:00:00\", \"DueDate\": \"\\/Date(1546128000000+0000)\\/\", \"Status\": \"PAID\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Acme Tires\", \"UnitAmount\": 20.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 2.0000, \"LineItemID\": \"878d1688-a905-4866-ae91-5a772c2540c7\", \"ValidationErrors\": [] } ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\", \"CurrencyCode\": \"NZD\", \"FullyPaidOnDate\": \"\\/Date(1543449600000+0000)\\/\" }, \"HasValidationErrors\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified payment for invoices and credit notes",
        "operationId": "deletePayment",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "description": "Unique identifier for a Payment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDelete"
              },
              "example": "{ status: \"DELETED\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Payments array for updated Payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payments"
                },
                "example": "{ \"Id\": \"ee23328c-4a8b-4ee7-8fb6-9796ffab9cb0\", \"Status\": \"OK\", \"ProviderName\": \"java-sdk-oauth2-dev-02\", \"DateTimeUTC\": \"\\/Date(1583945852489)\\/\", \"Payments\": [ { \"PaymentID\": \"c94c996b-1ab3-4ff3-ad19-1cdc77f30817\", \"Date\": \"\\/Date(1567382400000+0000)\\/\", \"BankAmount\": 2.00, \"Amount\": 2.00, \"Reference\": \"foobar\", \"CurrencyRate\": 1.000000, \"PaymentType\": \"APCREDITPAYMENT\", \"Status\": \"DELETED\", \"UpdatedDateUTC\": \"\\/Date(1583945852373+0000)\\/\", \"HasAccount\": true, \"IsReconciled\": false, \"Account\": { \"AccountID\": \"57f261f0-e32d-4a7f-be82-22cd992c6367\", \"Code\": \"033\", \"Name\": \"Checking account\" }, \"Invoice\": { \"Type\": \"ACCPAYCREDIT\", \"InvoiceID\": \"dba68ebc-c05a-4e2d-b97d-964349e5b8d6\", \"InvoiceNumber\": \"\", \"Reference\": \"\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 22.00, \"AmountPaid\": 0.00, \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"IsDiscounted\": false, \"HasErrors\": false, \"Contact\": { \"ContactID\": \"216830cb-9a68-487e-928b-c1a7ccc4fc81\", \"Name\": \"FooBar73005\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2017-01-02T00:00:00\", \"Date\": \"\\/Date(1483315200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Sample Item72716\", \"UnitAmount\": 20.00, \"TaxType\": \"INPUT\", \"TaxAmount\": 2.00, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 1.0000, \"ValidationErrors\": [] } ], \"SubTotal\": 20.00, \"TotalTax\": 2.00, \"Total\": 22.00, \"UpdatedDateUTC\": \"\\/Date(1583945852363+0000)\\/\", \"CurrencyCode\": \"AUD\" }, \"HasValidationErrors\": false } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Payment"
    },
    "/Payments/{PaymentID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history records of a payment",
        "operationId": "getPaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "description": "Unique identifier for a Payment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a history record for a payment",
        "operationId": "createPaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PaymentID",
            "in": "path",
            "description": "Unique identifier for a Payment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error - API is not able to create HistoryRecord for Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"DateUTCString\": \"2019-03-12T22:30:13\", \"DateUTC\": \"\\/Date(1552429813667)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"The document with the supplied id was not found for this endpoint.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Payment"
    },
    "/PaymentServices": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve payment services",
        "operationId": "getPaymentServices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array for all PaymentService",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServices"
                },
                "example": "{ \"Id\": \"ab82a7dd-5070-4e82-b841-0af52909fe04\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552488713171)\\/\", \"PaymentServices\": [ { \"PaymentServiceID\": \"54b3b4f6-0443-4fba-bcd1-61ec0c35ca55\", \"PaymentServiceName\": \"PayUpNow\", \"PaymentServiceUrl\": \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\", \"PayNowText\": \"Time To Pay\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create payment services",
        "operationId": "createPaymentService",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "PaymentServices array with PaymentService object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentServices"
              },
              "example": "{ paymentServices: [{ paymentServiceName: \"PayUpNow\", paymentServiceUrl: \"https://www.payupnow.com/\", payNowText: \"Time To Pay\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type PaymentServices array for newly created PaymentService",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServices"
                },
                "example": "{ \"Id\": \"7ed8b3c0-2155-49ee-a583-f2dce6607dfb\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552488712813)\\/\", \"PaymentServices\": [ { \"PaymentServiceID\": \"54b3b4f6-0443-4fba-bcd1-61ec0c35ca55\", \"PaymentServiceName\": \"PayUpNow\", \"PaymentServiceUrl\": \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\", \"PayNowText\": \"Time To Pay\", \"ValidationErrors\": [ { \"Message\": \"Payment service could not be found\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "paymentservices"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "payment_services = { payment_services: [{ payment_service_name: \"PayUpNow\", payment_service_url: \"https://www.payupnow.com/\", pay_now_text: \"Time To Pay\" }]}"
      },
      "x-related-model": "PaymentServices"
    },
    "/Prepayments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve prepayments",
        "operationId": "getPrepayments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Prepayment.StatusEnum.AUTHORISED + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Prepayment::AUTHORISED}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Reference ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 – Up to 100 prepayments will be returned in a single API call with line items shown for each overpayment",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Prepayments array for all Prepayment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prepayments"
                },
                "example": "{ \"Id\": \"d7a9ca0c-6159-4c26-ad2e-715440c50b7d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552489227595)\\/\", \"Prepayments\": [ { \"PrepaymentID\": \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"ID\": \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"Type\": \"RECEIVE-PREPAYMENT\", \"Reference\": \"INV-0011\", \"RemainingCredit\": 3450.00, \"Allocations\": [], \"Payments\": [], \"HasAttachments\": true, \"Contact\": { \"ContactID\": \"be392c72-c121-4f83-9512-03ac71e54c20\", \"Name\": \"Luke Skywalker\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 3000.00, \"TotalTax\": 450.00, \"Total\": 3450.00, \"UpdatedDateUTC\": \"\\/Date(1552489187730+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "Prepayment"
    },
    "/Prepayments/{PrepaymentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified prepayments",
        "operationId": "getPrepayment",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "description": "Unique identifier for a PrePayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Prepayments array for a specified Prepayment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prepayments"
                },
                "example": "{ \"Id\": \"18e5f578-ef28-4096-a7aa-d06d65574b99\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553540376847)\\/\", \"Prepayments\": [ { \"PrepaymentID\": \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"ID\": \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"CurrencyRate\": 1.000000, \"Type\": \"RECEIVE-PREPAYMENT\", \"Reference\": \"INV-0011\", \"RemainingCredit\": 3449.00, \"Allocations\": [ { \"Amount\": 1.00, \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Invoice\": { \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\", \"InvoiceNumber\": \"INV-0004\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] } } ], \"Payments\": [], \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"2ca06aa0-3629-474a-9401-553d4b7fa9b0\", \"FileName\": \"giphy.gif\", \"Url\": \"https://api.xero.com/api.xro/2.0/banktransaction/ce0cddef-cf5a-4e59-b638-f225679115a7/Attachments/giphy.gif\", \"MimeType\": \"image/gif\", \"ContentLength\": 495727 } ], \"Contact\": { \"ContactID\": \"be392c72-c121-4f83-9512-03ac71e54c20\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Luke Skywalker\", \"EmailAddress\": \"\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1552329691573+0000)\\/\", \"ContactGroups\": [], \"DefaultCurrency\": \"NZD\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Light Speeder\", \"UnitAmount\": 3000.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 450.00, \"LineAmount\": 3000.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"DiscountEnteredAsPercent\": true, \"ValidationErrors\": [] } ], \"SubTotal\": 3000.00, \"TotalTax\": 450.00, \"Total\": 3450.00, \"UpdatedDateUTC\": \"\\/Date(1552522424850+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "Prepayment"
    },
    "/Prepayments/{PrepaymentID}/Allocations": {
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create an Allocation for prepayments",
        "operationId": "createPrepaymentAllocations",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "description": "Unique identifier for Prepayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Allocations with an array of Allocation object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Allocations"
              },
              "example": "{ allocations: [{ invoice: { invoiceID: \"00000000-0000-0000-000-000000000000\", lineItems: [], contact: {}, type: null }, amount: 1.0, date: \"2019-03-13\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Allocations array of Allocation for all Prepayment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Allocations"
                },
                "example": "{ \"Id\": \"d4758808-d14d-45d5-851a-52787ae5739a\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552522424927)\\/\", \"Allocations\": [ { \"Amount\": 1.00, \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Invoice\": { \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [], \"ValidationErrors\": [] }, \"Prepayment\": { \"PrepaymentID\": \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"ID\": \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"LineItems\": [] }, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "allocations = { allocations: [{ invoice: { invoice_id: \"00000000-0000-0000-000-000000000000\", line_items: [], contact: {}, type: null }, amount: 1.0, date: \"2019-03-13\" }]}"
      },
      "x-related-model": "Prepayment"
    },
    "/Prepayments/{PrepaymentID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an Prepayment",
        "operationId": "getPrepaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "description": "Unique identifier for a PrePayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create a history record for an Prepayment",
        "operationId": "createPrepaymentHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PrepaymentID",
            "in": "path",
            "description": "Unique identifier for a PrePayment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "Unsupported - return response incorrect exception, API is not able to create HistoryRecord for Expense Claims",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": " { \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"DateUTCString\": \"2019-03-14T00:15:35\", \"DateUTC\": \"\\/Date(1552522535440)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"The document with the supplied id was not found for this endpoint.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Prepayment"
    },
    "/PurchaseOrders": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve purchase orders",
        "operationId": "getPurchaseOrders",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Filter by purchase order status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "SUBMITTED",
                "AUTHORISED",
                "BILLED",
                "DELETED"
              ]
            },
            "example": "SUBMITTED"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-12-01"
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Filter by purchase order date (e.g. GET https://.../PurchaseOrders?DateFrom=2015-12-01&DateTo=2015-12-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-12-31"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "PurchaseOrderNumber ASC"
          },
          {
            "name": "page",
            "in": "query",
            "description": "To specify a page, append the page parameter to the URL e.g. ?page=1. If there are 100 records in the response you will need to check if there is any more data by fetching the next page e.g ?page=2 and continuing this process until no more results are returned.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array of all PurchaseOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrders"
                },
                "example": "{ \"Id\": \"66910bfc-15cc-4692-bd4c-cc8f671e653c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552523977238)\\/\", \"PurchaseOrders\": [ { \"PurchaseOrderID\": \"f9627f0d-b715-4039-bb6a-96dc3eae5ec5\", \"PurchaseOrderNumber\": \"PO-0001\", \"DateString\": \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"AttentionTo\": \"Jimmy\", \"HasErrors\": false, \"IsDiscounted\": false, \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"Addresses\": [ { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"DELETED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxAmount\": 0.00, \"LineAmount\": 20.00, \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"0f7b54b8-bfa4-4c5d-9c22-73dbd5796e54\" } ], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1552522703443+0000)\\/\", \"HasAttachments\": false }, { \"PurchaseOrderID\": \"6afa2e02-c514-4964-ab89-b5c0179b8c50\", \"PurchaseOrderNumber\": \"PO-0002\", \"DateString\": \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"AttentionTo\": \"Jimmy\", \"HasErrors\": false, \"IsDiscounted\": false, \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"Addresses\": [ { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"DELETED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxAmount\": 0.00, \"LineAmount\": 20.00, \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"3e4ec232-32b9-491b-84dd-48fb9aa8916f\" } ], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00, \"UpdatedDateUTC\": \"\\/Date(1552522834733+0000)\\/\", \"HasAttachments\": false } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more purchase orders",
        "operationId": "createPurchaseOrders",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "PurchaseOrders with an array of PurchaseOrder object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrders"
              },
              "example": "{ purchaseOrders: [{ contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"710\" }], date: \"2019-03-13\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrders"
                },
                "example": " { \"Id\": \"aa2f9d23-fd76-4bee-9600-30c0f0f34036\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552522946173)\\/\", \"PurchaseOrders\": [ { \"PurchaseOrderID\": \"56204648-8fbe-46f8-b09c-2125f7939533\", \"PurchaseOrderNumber\": \"PO-0004\", \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"HasErrors\": false, \"IsDiscounted\": false, \"TotalDiscount\": 0.00, \"SentToContact\": false, \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\": 3.00, \"LineAmount\": 20.00, \"AccountCode\": \"710\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"792b7e40-b9f2-47f0-8624-b09f4b0166dd\" } ], \"SubTotal\": 20.00, \"TotalTax\": 3.00, \"Total\": 23.00, \"UpdatedDateUTC\": \"\\/Date(1552522946077+0000)\\/\", \"StatusAttributeString\": \"ERROR\", \"Warnings\": [ { \"Message\": \"Only AUTHORISED and BILLED purchase orders may have SentToContact updated.\" } ], \"ValidationErrors\": [ { \"Message\": \"Order number must be unique\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "purchase_orders = { purchase_orders: [{ contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, account_code: \"710\" }], date: \"2019-03-13\" }]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update or create one or more purchase orders",
        "operationId": "updateOrCreatePurchaseOrders",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrders"
              },
              "example": "{ purchaseOrders: [ { contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"710\" }], date: \"2019-03-13\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrders"
                },
                "example": " { \"Id\": \"aa2f9d23-fd76-4bee-9600-30c0f0f34036\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552522946173)\\/\", \"PurchaseOrders\": [ { \"PurchaseOrderID\": \"56204648-8fbe-46f8-b09c-2125f7939533\", \"PurchaseOrderNumber\": \"PO-0004\", \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"HasErrors\": false, \"IsDiscounted\": false, \"TotalDiscount\": 0.00, \"SentToContact\": false, \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\": 3.00, \"LineAmount\": 20.00, \"AccountCode\": \"710\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"792b7e40-b9f2-47f0-8624-b09f4b0166dd\" } ], \"SubTotal\": 20.00, \"TotalTax\": 3.00, \"Total\": 23.00, \"UpdatedDateUTC\": \"\\/Date(1552522946077+0000)\\/\", \"StatusAttributeString\": \"ERROR\", \"Warnings\": [ { \"Message\": \"Only AUTHORISED and BILLED purchase orders may have SentToContact updated.\" } ], \"ValidationErrors\": [ { \"Message\": \"Order number must be unique\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "purchase_orders = { purchase_orders: [{ contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"710\" }], date: \"2019-03-13\" }]}"
      },
      "x-related-model": "PurchaseOrder"
    },
    "/PurchaseOrders/{PurchaseOrderID}/pdf": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve purchase orders as PDF files",
        "operationId": "getPurchaseOrderAsPdf",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "description": "Unique identifier for an Purchase Order",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of byte array pdf version of specified Purchase Orders",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ],
        "x-path": "/PurchaseOrders/{PurchaseOrderID}"
      },
      "x-related-model": "PurchaseOrder"
    },
    "/PurchaseOrders/{PurchaseOrderID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified purchase orders",
        "operationId": "getPurchaseOrder",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "description": "Unique identifier for a PurchaseOrder",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrders"
                },
                "example": "{ \"Id\": \"53a8c7a5-92e8-475b-a037-acf7c55c3afd\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553626110950)\\/\", \"PurchaseOrders\": [ { \"PurchaseOrderID\": \"15369a9f-17b6-4235-83c4-0029256d1c37\", \"PurchaseOrderNumber\": \"PO-0006\", \"DateString\": \"2019-03-26T00:00:00\", \"Date\": \"\\/Date(1553558400000+0000)\\/\", \"DeliveryDateString\": \"2019-03-28T00:00:00\", \"DeliveryDate\": \"\\/Date(1553731200000+0000)\\/\", \"DeliveryAddress\": \"101 Grafton Road\\nRoseneath\\nWellington\\n6011\\nNew Zealand\", \"AttentionTo\": \"CEO\", \"Telephone\": \"64 123-2222\", \"DeliveryInstructions\": \"Drop off at front  door\", \"HasErrors\": false, \"IsDiscounted\": true, \"TotalDiscount\": 250.00, \"SentToContact\": false, \"Reference\": \"foobar\", \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1553672800957+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"DefaultCurrency\": \"NZD\", \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"BrandingThemeID\": \"414d4a87-46d6-4cfc-ab42-4e29d22e5076\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"ItemCode\": \"123\", \"Description\": \"Brand new Fender Strats\", \"UnitAmount\": 2500.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\": 337.50, \"LineAmount\": 2250.00, \"AccountCode\": \"630\", \"Tracking\": [ { \"Name\": \"Simpsons\", \"Option\": \"Homer\", \"TrackingCategoryID\": \"6a68adde-f210-4465-b0a9-0d8cc6f50762\", \"TrackingOptionID\": \"94faf12f-f65c-4331-8004-b0b7c5a2da23\" } ], \"Quantity\": 1.0000, \"DiscountRate\": 10.00, \"LineItemID\": \"8a9d3eca-e052-43bc-9b87-221d0648c045\" } ], \"SubTotal\": 2250.00, \"TotalTax\": 337.50, \"Total\": 2587.50, \"UpdatedDateUTC\": \"\\/Date(1553626029823+0000)\\/\", \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"7d94ccdc-ef7b-4806-87ac-8442f25e593b\", \"FileName\": \"HelloWorld.png\", \"Url\": \"https://api.xero.com/api.xro/2.0/PurchaseOrders/15369a9f-17b6-4235-83c4-0029256d1c37/Attachments/HelloWorld.png\", \"MimeType\": \"image/png\", \"ContentLength\": 76091 } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified purchase order",
        "operationId": "updatePurchaseOrder",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "description": "Unique identifier for a PurchaseOrder",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrders"
              },
              "example": "{ purchaseOrders:[ { attentionTo: \"Peter Parker\", lineItems: [], contact: {} }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for updated PurchaseOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrders"
                },
                "example": "{ \"Id\": \"0e9bb3f8-d68b-4bb2-a54d-7da240a4f51a\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552523976885)\\/\", \"PurchaseOrders\": [ { \"PurchaseOrderID\": \"f9fc1120-c937-489e-84bc-e822190cfe9c\", \"PurchaseOrderNumber\": \"PO-0005\", \"DateString\": \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"AttentionTo\": \"Jimmy\", \"HasErrors\": false, \"IsDiscounted\": false, \"TotalDiscount\": 0.00, \"SentToContact\": false, \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\": 3.00, \"LineAmount\": 20.00, \"AccountCode\": \"710\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"d1d9b2cd-c9f2-4445-8d98-0b8096cf4dae\" } ], \"SubTotal\": 20.00, \"TotalTax\": 3.00, \"Total\": 23.00, \"UpdatedDateUTC\": \"\\/Date(1552523976853+0000)\\/\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "purchase_orders = { purchase_orders: [ { attention_to: \"Peter Parker\", line_items: [], contact: {} }]}"
      },
      "x-related-model": "PurchaseOrder"
    },
    "/PurchaseOrders/{PurchaseOrderNumber}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified purchase orders",
        "operationId": "getPurchaseOrderByNumber",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PurchaseOrderNumber",
            "in": "path",
            "description": "Unique identifier for a PurchaseOrder",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "PO1234"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type PurchaseOrder array for specified PurchaseOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrders"
                },
                "example": "{ \"Id\": \"53a8c7a5-92e8-475b-a037-acf7c55c3afd\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553626110950)\\/\", \"PurchaseOrders\": [ { \"PurchaseOrderID\": \"15369a9f-17b6-4235-83c4-0029256d1c37\", \"PurchaseOrderNumber\": \"PO-0006\", \"DateString\": \"2019-03-26T00:00:00\", \"Date\": \"\\/Date(1553558400000+0000)\\/\", \"DeliveryDateString\": \"2019-03-28T00:00:00\", \"DeliveryDate\": \"\\/Date(1553731200000+0000)\\/\", \"DeliveryAddress\": \"101 Grafton Road\\nRoseneath\\nWellington\\n6011\\nNew Zealand\", \"AttentionTo\": \"CEO\", \"Telephone\": \"64 123-2222\", \"DeliveryInstructions\": \"Drop off at front  door\", \"HasErrors\": false, \"IsDiscounted\": true, \"TotalDiscount\": 250.00, \"SentToContact\": false, \"Reference\": \"foobar\", \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1553672800957+0000)\\/\", \"ContactGroups\": [ { \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false } ], \"IsSupplier\": true, \"IsCustomer\": true, \"DefaultCurrency\": \"NZD\", \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"BrandingThemeID\": \"414d4a87-46d6-4cfc-ab42-4e29d22e5076\", \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"ItemCode\": \"123\", \"Description\": \"Brand new Fender Strats\", \"UnitAmount\": 2500.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\": 337.50, \"LineAmount\": 2250.00, \"AccountCode\": \"630\", \"Tracking\": [ { \"Name\": \"Simpsons\", \"Option\": \"Homer\", \"TrackingCategoryID\": \"6a68adde-f210-4465-b0a9-0d8cc6f50762\", \"TrackingOptionID\": \"94faf12f-f65c-4331-8004-b0b7c5a2da23\" } ], \"Quantity\": 1.0000, \"DiscountRate\": 10.00, \"LineItemID\": \"8a9d3eca-e052-43bc-9b87-221d0648c045\" } ], \"SubTotal\": 2250.00, \"TotalTax\": 337.50, \"Total\": 2587.50, \"UpdatedDateUTC\": \"\\/Date(1553626029823+0000)\\/\", \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"7d94ccdc-ef7b-4806-87ac-8442f25e593b\", \"FileName\": \"HelloWorld.png\", \"Url\": \"https://api.xero.com/api.xro/2.0/PurchaseOrders/15369a9f-17b6-4235-83c4-0029256d1c37/Attachments/HelloWorld.png\", \"MimeType\": \"image/png\", \"ContentLength\": 76091 } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "PurchaseOrder"
    },
    "/PurchaseOrders/{PurchaseOrderID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history for PurchaseOrder",
        "operationId": "getPurchaseOrderHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "description": "Unique identifier for a PurchaseOrder",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create HistoryRecord for purchase orders",
        "operationId": "createPurchaseOrderHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "PurchaseOrderID",
            "in": "path",
            "description": "Unique identifier for a PurchaseOrder",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "PurchaseOrder"
    },
    "/Quotes": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any sales quotes",
        "operationId": "getQuotes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "Filter for quotes after a particular date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "Filter for quotes before a particular date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ExpiryDateFrom",
            "in": "query",
            "description": "Filter for quotes expiring after a particular date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ExpiryDateTo",
            "in": "query",
            "description": "Filter for quotes before a particular date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ContactID",
            "in": "query",
            "description": "Filter for quotes belonging to a particular contact",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Filter for quotes of a particular Status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "e.g. page=1 – Up to 100 Quotes will be returned in a single API call with line items shown for each quote",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type quotes array with all quotes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quotes"
                },
                "example": "{ \"Id\": \"bb583e7e-9b6b-471e-88da-4cbfcfad7a57\", \"Status\": \"OK\", \"ProviderName\": \"Adams OAuth2 App\", \"DateTimeUTC\": \"/Date(1571876635477)/\", \"Quotes\": [ { \"QuoteID\": \"be59294f-2a9c-4cee-8c64-0f0ddbc1883a\", \"QuoteNumber\": \"QU-0001\", \"Reference\": \"REF-123\", \"Terms\": \"Not valid after the expiry date\", \"Contact\": { \"ContactID\": \"060816db-0ed7-44de-ab58-8fee9316fcd5\", \"Name\": \"Adam\" }, \"LineItems\": [ { \"LineItemID\": \"ccf5e45c-73b6-4659-83e8-520f4c6126fd\", \"AccountCode\": \"200\", \"Description\": \"Fish out of Water\", \"UnitAmount\": 19.9500, \"DiscountRate\": 10.00, \"LineAmount\": 17.96, \"ItemCode\": \"BOOK\", \"Quantity\": 1.0000, \"TaxAmount\": 2.69, \"TaxType\": \"OUTPUT2\", \"Tracking\": [ { \"TrackingCategoryID\": \"351953c4-8127-4009-88c3-f9cd8c9cbe9f\", \"TrackingOptionID\": \"ce205173-7387-4651-9726-2cf4c5405ba2\", \"Name\": \"Region\", \"Option\": \"Eastside\" } ] } ], \"Date\": \"/Date(1571875200000)/\", \"DateString\": \"2019-10-24T00:00:00\", \"ExpiryDate\": \"/Date(1571961600000)/\", \"ExpiryDateString\": \"2019-10-25T00:00:00\", \"Status\": \"ACCEPTED\", \"CurrencyRate\": 0.937053, \"CurrencyCode\": \"AUD\", \"SubTotal\": 17.96, \"TotalTax\": 2.69, \"Total\": 20.65, \"TotalDiscount\": 1.99, \"Title\": \"Your Quote\", \"Summary\": \"Please buy this\", \"BrandingThemeID\": \"4c82c365-35cb-467f-bb11-dce1f2f2f67c\", \"UpdatedDateUTC\": \"/Date(1571869373890)/\", \"LineAmountTypes\": \"EXCLUSIVE\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more quotes",
        "operationId": "createQuotes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "description": "Quotes with an array of Quote object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotes"
              },
              "example": "{ quotes: [{ contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"12775\" }], date:\"2020-02-01\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes with array with newly created Quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quotes"
                },
                "example": "{ \"SummarizeErrors\":false, \"Id\":\"29571f5a-bf73-4bb6-9de5-86be44e6bf2e\", \"Status\":\"OK\", \"ProviderName\":\"java-sdk-oauth2-dev-02\", \"DateTimeUTC\":\"\\/Date(1580607782916)\\/\", \"Quotes\":[ { \"QuoteID\":\"60031d53-6488-4321-9cbd-c1db6dbf9ba4\", \"QuoteNumber\":\"QU-0008\", \"Terms\":\"\", \"Contact\":{ \"ContactID\":\"6a65f055-b0e0-471a-a933-d1ffdd89393f\", \"Name\":\"John Smith-82160\", \"EmailAddress\":\"\" }, \"LineItems\":[ { \"LineItemID\":\"26995857-0eea-45fb-b46c-f8ea896ec46e\", \"AccountCode\":\"12775\", \"Description\":\"Foobar\", \"UnitAmount\":20.0000, \"LineAmount\":20.00, \"ItemCode\":\"\", \"Quantity\":1.0000, \"TaxAmount\":0.00, \"Tracking\":[\n] } ], \"Date\":\"\\/Date(1580515200000)\\/\", \"DateString\":\"2020-02-01T00:00:00\", \"Status\":\"DRAFT\", \"CurrencyRate\":1.000000, \"CurrencyCode\":\"USD\", \"SubTotal\":20.00, \"TotalTax\":0.00, \"Total\":20.00, \"UpdatedDateUTC\":\"\\/Date(1580607782913)\\/\", \"LineAmountTypes\":\"EXCLUSIVE\", \"StatusAttributeString\":\"OK\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "quotes = { quotes: [{ contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"12775\" }], date:\"2020-02-01\" }]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update OR create one or more quotes",
        "operationId": "updateOrCreateQuotes",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "summarizeErrors",
            "in": "query",
            "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotes"
              },
              "example": "{ quotes: [{ contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"12775\" }], date: \"2020-02-01\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes array with updated or created Quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quotes"
                },
                "example": "{ \"SummarizeErrors\":false, \"Id\":\"b425754f-0512-481d-827b-c8958db7667e\", \"Status\":\"OK\", \"ProviderName\":\"java-sdk-oauth2-dev-02\", \"DateTimeUTC\":\"\\/Date(1580607783833)\\/\", \"Quotes\":[ { \"QuoteID\":\"fd53e0b7-4d24-4c20-be85-043a62ea5847\", \"QuoteNumber\":\"QU-0009\", \"Terms\":\"\", \"Contact\":{ \"ContactID\":\"6a65f055-b0e0-471a-a933-d1ffdd89393f\", \"Name\":\"John Smith-82160\", \"EmailAddress\":\"\" }, \"LineItems\":[ { \"LineItemID\":\"898c7fd6-0d94-4ac0-ace8-87e350a042de\", \"AccountCode\":\"12775\", \"Description\":\"Foobar\", \"UnitAmount\":20.0000, \"LineAmount\":20.00, \"ItemCode\":\"\", \"Quantity\":1.0000, \"TaxAmount\":0.00, \"Tracking\":[\n] } ], \"Date\":\"\\/Date(1580515200000)\\/\", \"DateString\":\"2020-02-01T00:00:00\", \"Status\":\"DRAFT\", \"CurrencyRate\":1.000000, \"CurrencyCode\":\"USD\", \"SubTotal\":20.00, \"TotalTax\":0.00, \"Total\":20.00, \"UpdatedDateUTC\":\"\\/Date(1580607783467)\\/\", \"LineAmountTypes\":\"EXCLUSIVE\", \"StatusAttributeString\":\"OK\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "quotes = { quotes: [{ contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"12775\" }], date: \"2020-02-01\" }]}"
      },
      "x-related-model": "Quote"
    },
    "/Quotes/{QuoteID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified quote",
        "operationId": "getQuote",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for an Quote",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes array with specified Quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quotes"
                },
                "example": "{ \"SummarizeErrors\":true, \"Id\":\"e3626c45-77f1-4ab0-ba9b-3593c7bcd25c\", \"Status\":\"OK\", \"ProviderName\":\"java-sdk-oauth2-dev-02\", \"DateTimeUTC\":\"\\/Date(1580607864786)\\/\", \"Quotes\":[ { \"QuoteID\":\"1f90e77a-7b88-4462-874f-1aa675be8fef\", \"QuoteNumber\":\"QU-0007\", \"Reference\":\"MyQuote\", \"Terms\":\"These are my terms\", \"Contact\":{ \"ContactID\":\"4bc3ecb2-8e2a-4267-a171-0e0ce7e5ac2a\", \"Name\":\"ABC Limited\", \"EmailAddress\":\"john.smith@gmail.com\", \"FirstName\":\"John\", \"LastName\":\"Smith\" }, \"LineItems\":[ { \"LineItemID\":\"09b47d9f-f78d-4bab-b226-957f55bfb1b5\", \"AccountCode\":\"400\", \"Description\":\"Half day training - Microsoft Office\", \"UnitAmount\":500.0000, \"LineAmount\":500.00, \"ItemCode\":\"Train-MS\", \"Quantity\":1.0000, \"TaxAmount\":0.00, \"TaxType\":\"NONE\", \"Tracking\":[ { \"TrackingCategoryID\":\"9bd3f506-6d91-4625-81f0-0f9147f099f4\", \"TrackingOptionID\":\"d30e2a0d-ae6f-4806-88ca-d8ebdba2af73\", \"Name\":\"Avengers\", \"Option\":\"IronMan\" } ] } ], \"Date\":\"\\/Date(1580515200000)\\/\", \"DateString\":\"2020-02-01T00:00:00\", \"ExpiryDate\":\"\\/Date(1581724800000)\\/\", \"ExpiryDateString\":\"2020-02-15T00:00:00\", \"Status\":\"DRAFT\", \"CurrencyRate\":1.547150, \"CurrencyCode\":\"NZD\", \"SubTotal\":500.00, \"TotalTax\":0.00, \"Total\":500.00, \"TotalDiscount\":0.00, \"Title\":\"\", \"Summary\":\"\", \"BrandingThemeID\":\"324587a9-7eed-46c0-ad64-fa941a1b5b3e\", \"UpdatedDateUTC\":\"\\/Date(1580607757040)\\/\", \"LineAmountTypes\":\"EXCLUSIVE\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update a specified quote",
        "operationId": "updateQuote",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for an Quote",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quotes"
              },
              "example": "{ quotes: [{ reference: \"I am an update\", contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, date: \"2020-02-01\" }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Quotes array with updated Quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quotes"
                },
                "example": "{ \"SummarizeErrors\":true, \"Id\":\"be4f43a7-ef02-497a-96c2-fc0bc047a82a\", \"Status\":\"OK\", \"ProviderName\":\"java-sdk-oauth2-dev-02\", \"DateTimeUTC\":\"\\/Date(1580605644385)\\/\", \"Quotes\":[ { \"QuoteID\":\"8ce6b14c-ef87-4f45-93f0-853137c6d0e1\", \"QuoteNumber\":\"QU-0008\", \"Reference\":\"I am an update\", \"Terms\":\"\", \"Contact\":{ \"ContactID\":\"8ed7dd03-4e6a-4078-a807-c5309abfec52\", \"Name\":\"Orlena Greenville 35\", \"EmailAddress\":\"\" }, \"LineItems\":[ { \"LineItemID\":\"be69f44e-9c72-4fcd-9152-0174867cce49\", \"AccountCode\":\"12775\", \"Description\":\"Foobar\", \"UnitAmount\":20.0000, \"LineAmount\":20.00, \"ItemCode\":\"\", \"Quantity\":1.0000, \"TaxAmount\":0.00, \"Tracking\":[] } ], \"Date\":\"\\/Date(1580515200000)\\/\", \"DateString\":\"2020-02-01T00:00:00\", \"Status\":\"DRAFT\", \"CurrencyRate\":1.000000, \"CurrencyCode\":\"USD\", \"SubTotal\":20.00, \"TotalTax\":0.00, \"Total\":20.00, \"UpdatedDateUTC\":\"\\/Date(1580605644360)\\/\", \"LineAmountTypes\":\"EXCLUSIVE\" } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "quotes = { quotes: [{ reference: \"I am an update\", contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, date: \"2020-02-01\" }]}"
      },
      "x-related-model": "Quote"
    },
    "/Quotes/{QuoteID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an quote",
        "operationId": "getQuoteHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for an Quote",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an quote",
        "operationId": "createQuoteHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for an Quote",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      }
    },
    "/Quotes/{QuoteID}/pdf": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve quotes as PDF files",
        "operationId": "getQuoteAsPdf",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for an Quote",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of byte array pdf version of specified Quotes",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ],
        "x-path": "/Quotes/{QuoteID}"
      },
      "x-related-model": "Quote"
    },
    "/Quotes/{QuoteID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments for Quotes",
        "operationId": "getQuoteAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for Quote object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"439c1573-3cd8-4697-a9f6-81fa651ee8f3\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550852630329)\\/\", \"Attachments\": [ { \"AttachmentID\": \"52a643be-cd5c-489f-9778-53a9fd337756\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve specific Attachment on Quote",
        "operationId": "getQuoteAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for Quote object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for Attachment object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Quote as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      }
    },
    "/Quotes/{QuoteID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachment on Quote by Filename",
        "operationId": "getQuoteAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for Quote object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Quote as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create Attachment on Quote",
        "operationId": "createQuoteAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for Quote object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"724cdff5-bcd1-4c5c-977e-e864c24258e0\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550856817769)\\/\", \"Attachments\": [ { \"AttachmentID\": \"ab95b276-9dce-4925-9077-439818ba270f\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update Attachment on Quote by Filename",
        "operationId": "updateQuoteAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "QuoteID",
            "in": "path",
            "description": "Unique identifier for Quote object",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "Name of the attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"c8d6413a-1da2-4faa-9848-21f60443e906\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550859714477)\\/\", \"Attachments\": [ { \"AttachmentID\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"FileName\": \"sample5.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "Validation Error - some data was incorrect returns response of type Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      }
    },
    "/Receipts": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve draft expense claim receipts for any user",
        "operationId": "getReceipts",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + Receipt.StatusEnum.DRAFT + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::Receipt::DRAFT}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "ReceiptNumber ASC"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for all Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipts"
                },
                "example": "{ \"Id\": \"078b2a2c-902f-4154-8739-357ece5982e5\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552524584695)\\/\", \"Receipts\": [ { \"ReceiptID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"ReceiptNumber\": 1, \"Status\": \"DRAFT\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"ValidationErrors\": [], \"Warnings\": [] }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [], \"ContactPersons\": [], \"Attachments\": [], \"HasValidationErrors\": false, \"ValidationErrors\": [], \"Warnings\": [] }, \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552524583983+0000)\\/\", \"Reference\": \"\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"HasAttachments\": false, \"Attachments\": [], \"ValidationErrors\": [], \"Warnings\": [] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create draft expense claim receipts for any user",
        "operationId": "createReceipt",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "description": "Receipts with an array of Receipt object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Receipts"
              },
              "example": "{ receipts: [{ contact: { contactID: \"00000000-0000-0000-000-000000000000\" }, lineItems: [{ description: \"Foobar\", quantity: 2.0, unitAmount: 20.0, accountCode: \"400\", taxType: TaxType.NONE, lineAmount: 40.0 }], user: { userID: \"00000000-0000-0000-000-000000000000\" }, lineAmountTypes: LineAmountTypes.Inclusive, status: Receipt.StatusEnum.DRAFT, date: null} ] }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for newly created Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipts"
                },
                "example": "{ \"Id\": \"35898898-5361-4b42-b6ca-9d2c584fc53d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552524583429)\\/\", \"Receipts\": [ { \"ReceiptID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"ReceiptNumber\": 1, \"Status\": \"DRAFT\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552524583367+0000)\\/\", \"Reference\": \"\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"HasAttachments\": false, \"ValidationErrors\": [ { \"Message\": \"A valid user should be identified using the UserID.\" } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "receipts = { receipts: [ { contact: { contact_id: \"00000000-0000-0000-000-000000000000\" }, line_items: [{ description: \"Foobar\", quantity: 2.0, unit_amount: 20.0, account_code: \"400\", tax_type: XeroRuby::Accounting::TaxType::NONE, line_amount: 40.0 }], user: { user_id: \"00000000-0000-0000-000-000000000000\" }, line_amount_types: XeroRuby::Accounting::INCLUSIVE, status: XeroRuby::Accounting::Receipt::DRAFT, date: nil }]}"
      },
      "x-related-model": "Receipt"
    },
    "/Receipts/{ReceiptID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified draft expense claim receipts",
        "operationId": "getReceipt",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for a specified Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipts"
                },
                "example": "{ \"Id\": \"2c99af06-d278-4580-8c8c-463c806af5b6\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553800357225)\\/\", \"Receipts\": [ { \"ReceiptID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"ReceiptNumber\": 1, \"Status\": \"DRAFT\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1553672800957+0000)\\/\", \"ContactGroups\": [], \"DefaultCurrency\": \"NZD\", \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552524583983+0000)\\/\", \"Reference\": \"Foobar\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000, \"DiscountEnteredAsPercent\": true } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"e02a84f6-b83a-4983-b3b9-35cd8880c7bc\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"3451e34c-66a6-42b0-91e2-88618bdc169b\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified draft expense claim receipts",
        "operationId": "updateReceipt",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "unitdp",
            "in": "query",
            "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Receipts"
              },
              "example": "{ receipts: [{ user: { userID: \"00000000-0000-0000-000-000000000000\" }, reference: \"Foobar\", date: \"2020-01-01\", contact: {}, lineItems: [] }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Receipts array for updated Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipts"
                },
                "example": "{ \"Id\": \"05b76bf7-4734-4633-a399-7d569a6a25c6\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552675557052)\\/\", \"Receipts\": [ { \"ReceiptID\": \"e3686fdc-c661-4581-b9df-cbb20782ea66\", \"ReceiptNumber\": 2, \"Status\": \"DRAFT\", \"User\": { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" }, \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\": \"\\/Date(1552694400000+0000)\\/\", \"UpdatedDateUTC\": \"\\/Date(1552675556927+0000)\\/\", \"Reference\": \"Foobar\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\": \"e3686fdc-c661-4581-b9df-cbb20782ea66\", \"HasAttachments\": false, \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "receipts = { receipts: [{ user: { user_id: \"00000000-0000-0000-000-000000000000\" }, reference: \"Foobar\", date: \"2020-01-01\", contact: {}, line_items: [] }]}"
      },
      "x-related-model": "Receipt"
    },
    "/Receipts/{ReceiptID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments for expense claim receipts",
        "operationId": "getReceiptAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array of Attachments for a specified Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"d379c04d-d3aa-4034-95b8-af69a449bd78\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552686430436)\\/\", \"Attachments\": [ { \"AttachmentID\": \"11e5ca6b-d38c-42ab-a29f-c1710d171aa1\", \"FileName\": \"giphy.gif\", \"Url\": \"https://api.xero.com/api.xro/2.0/Receipts/7923c00d-163d-404c-a608-af3de333db29/Attachments/giphy.gif\", \"MimeType\": \"image/gif\", \"ContentLength\": 495727 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Receipt"
    },
    "/Receipts/{ReceiptID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on expense claim receipts by ID",
        "operationId": "getReceiptAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for a Attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Receipt as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "Receipt"
    },
    "/Receipts/{ReceiptID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on expense claim receipts by file name",
        "operationId": "getReceiptAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to the Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Receipt as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create Attachment on expense claim receipts by file name",
        "operationId": "createReceiptAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to the Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with newly created Attachment for a specified Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"01c9a720-b1f1-4477-8de8-ff46d945fd1d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552686599884)\\/\", \"Attachments\": [ { \"AttachmentID\": \"3451e34c-66a6-42b0-91e2-88618bdc169b\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update Attachment on expense claim receipts by file name",
        "operationId": "updateReceiptAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to the Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment for a specified Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"aeca1ea8-8fd9-4757-96a6-397dc4957a69\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1552686602761)\\/\", \"Attachments\": [ { \"AttachmentID\": \"e02a84f6-b83a-4983-b3b9-35cd8880c7bc\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Receipt"
    },
    "/Receipts/{ReceiptID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an Receipt",
        "operationId": "getReceiptHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a history records of an Receipt",
        "operationId": "createReceiptHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReceiptID",
            "in": "path",
            "description": "Unique identifier for a Receipt",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "Unsupported - return response incorrect exception, API is not able to create HistoryRecord for Receipts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": "{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A validation exception occurred\", \"Elements\": [ { \"DateUTCString\": \"2019-03-15T21:51:50\", \"DateUTC\": \"\\/Date(1552686710791)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\": \"The document with the supplied id was not found for this endpoint.\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "Receipt"
    },
    "/RepeatingInvoices": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve any repeating invoices",
        "operationId": "getRepeatingInvoices",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + RepeatingInvoice.StatusEnum.DRAFT + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::RepeatingInvoice::DRAFT}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Total ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Repeating Invoices array for all Repeating Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepeatingInvoices"
                },
                "example": "{ \"Id\": \"b336833d-a3a8-4a67-ab4c-6280b3ad87b0\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553805183228)\\/\", \"RepeatingInvoices\": [ { \"Schedule\": { \"Period\": 1, \"Unit\": \"MONTHLY\", \"DueDate\": 10, \"DueDateType\": \"OFFOLLOWINGMONTH\", \"StartDate\": \"\\/Date(1555286400000+0000)\\/\", \"EndDate\": \"\\/Date(1569801600000+0000)\\/\", \"NextScheduledDate\": \"\\/Date(1555286400000+0000)\\/\" }, \"RepeatingInvoiceID\": \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Type\": \"ACCREC\", \"Reference\": \"[Week]\", \"HasAttachments\": true, \"ID\": \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Guitars Fender Strat\", \"UnitAmount\": 5000.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 750.00, \"LineAmount\": 5000.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"13a8353c-d2af-4d5b-920c-438449f08900\", \"DiscountEnteredAsPercent\": true } ], \"SubTotal\": 5000.00, \"TotalTax\": 750.00, \"Total\": 5750.00, \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "RepeatingInvoice"
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified repeating invoice",
        "operationId": "getRepeatingInvoice",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Repeating Invoices array with a specified Repeating Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepeatingInvoices"
                },
                "example": "{ \"Id\": \"d9ac3755-7b81-4e3a-bef0-fa8a4f171442\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553805184820)\\/\", \"RepeatingInvoices\": [ { \"Schedule\": { \"Period\": 1, \"Unit\": \"MONTHLY\", \"DueDate\": 10, \"DueDateType\": \"OFFOLLOWINGMONTH\", \"StartDate\": \"\\/Date(1555286400000+0000)\\/\", \"EndDate\": \"\\/Date(1569801600000+0000)\\/\", \"NextScheduledDate\": \"\\/Date(1555286400000+0000)\\/\" }, \"RepeatingInvoiceID\": \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Type\": \"ACCREC\", \"Reference\": \"[Week]\", \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\": \"2a488b0f-3966-4b6e-a7e1-b6d3286351f2\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"48294e40-bfd2-4027-a365-f034383cb7aa\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"528e978a-87b8-44c4-9465-9456ec2f7ee6\", \"FileName\": \"helo-heros.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/helo-heros.jpg\", \"MimeType\": \"image/jpeg\", \"ContentLength\": 2878711 } ], \"ID\": \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Contact\": { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\": \"Guitars Fender Strat\", \"UnitAmount\": 5000.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 750.00, \"LineAmount\": 5000.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\": \"13a8353c-d2af-4d5b-920c-438449f08900\", \"DiscountEnteredAsPercent\": true } ], \"SubTotal\": 5000.00, \"TotalTax\": 750.00, \"Total\": 5750.00, \"CurrencyCode\": \"NZD\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "x-related-model": "RepeatingInvoice"
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Attachments on repeating invoice",
        "operationId": "getRepeatingInvoiceAttachments",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with all Attachments for a specified Repeating Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"b88b807b-3087-474b-a4f9-d8f1b4f5a899\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553805762049)\\/\", \"Attachments\": [ { \"AttachmentID\": \"2a488b0f-3966-4b6e-a7e1-b6d3286351f2\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"48294e40-bfd2-4027-a365-f034383cb7aa\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, { \"AttachmentID\": \"528e978a-87b8-44c4-9465-9456ec2f7ee6\", \"FileName\": \"helo-heros.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/helo-heros.jpg\", \"MimeType\": \"image/jpeg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "RepeatingInvoice"
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified Attachments on repeating invoices",
        "operationId": "getRepeatingInvoiceAttachmentById",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "AttachmentID",
            "in": "path",
            "description": "Unique identifier for a Attachment",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Repeating Invoice as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "x-related-model": "RepeatingInvoice"
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve specified attachment on repeating invoices by file name",
        "operationId": "getRepeatingInvoiceAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          },
          {
            "name": "contentType",
            "in": "header",
            "description": "The mime type of the attachment file you are retrieving i.e image/jpg, application/pdf",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "image/jpg"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of attachment for Repeating Invoice as binary data",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create attachment on repeating invoices by file name",
        "operationId": "createRepeatingInvoiceAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with updated Attachment for a specified Repeating Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"219de8c0-ee70-48af-a000-594eba14b417\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553805866696)\\/\", \"Attachments\": [ { \"AttachmentID\": \"e078e56c-9a2b-4f6c-a1fa-5d19b0dab611\", \"FileName\": \"foobar.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update specified attachment on repeating invoices by file name",
        "operationId": "updateRepeatingInvoiceAttachmentByFileName",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "FileName",
            "in": "path",
            "description": "The name of the file being attached to a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "xero-dev.jpg"
          }
        ],
        "requestBody": {
          "description": "Byte array of file in body of request",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type Attachments array with specified Attachment for a specified Repeating Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachments"
                },
                "example": "{ \"Id\": \"61b24d5c-4d6e-468f-9de1-abbc234b239a\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553805873362)\\/\", \"Attachments\": [ { \"AttachmentID\": \"d086d5f4-9c3d-4edc-a87e-906248eeb652\", \"FileName\": \"HelloWorld.jpg\", \"Url\": \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg\", \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }"
              }
            },
            "x-isAttachment": true
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.attachments"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "RepeatingInvoice"
    },
    "/RepeatingInvoices/{RepeatingInvoiceID}/History": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve history for a repeating invoice",
        "operationId": "getRepeatingInvoiceHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create history for a repeating invoice",
        "operationId": "createRepeatingInvoiceHistory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "RepeatingInvoiceID",
            "in": "path",
            "description": "Unique identifier for a Repeating Invoice",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/historyRecords"
        },
        "responses": {
          "200": {
            "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryRecords"
                },
                "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.transactions"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "RepeatingInvoice"
    },
    "/Reports/TenNinetyNine": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for TenNinetyNine",
        "operationId": "getReportTenNinetyNine",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "reportYear",
            "in": "query",
            "description": "The year of the 1099 report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Reports",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reports"
                },
                "example": "{ \"Id\": \"8b474ddb-9ef4-457c-8640-1c0e3670ea0e\", \"Status\": \"OK\", \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\": \"\\/Date(1555968100978)\\/\", \"Reports\": [ { \"ReportName\": \"1099 report\", \"ReportDate\": \"1 Jan 2016 to 31 Dec 2016\", \"Fields\": [], \"Contacts\": [ { \"Box1\": 0.00, \"Box2\": 0.00, \"Box3\": 1000.00, \"Box4\": 0.00, \"Box5\": 0.00, \"Box6\": 0.00, \"Box7\": 0.00, \"Box8\": 0.00, \"Box9\": 0.00, \"Box10\": 0.00, \"Box11\": 0.00, \"Box13\": 0.00, \"Box14\": 0.00, \"Name\": \"Bank West\", \"FederalTaxIDType\": \"SSN\", \"City\": \"Pinehaven\", \"Zip\": \"12345\", \"State\": \"CA\", \"Email\": \"jack@bowest.com\", \"StreetAddress\": \"Procurement Services\\r\\nGPO 1234\\r\\n\\r\\n\\r\\n\", \"TaxID\": \"234-22-2223\", \"ContactId\": \"81d5706a-8057-4338-8511-747cd85f4c68\" }, { \"Box1\": 0.00, \"Box2\": 0.00, \"Box3\": 1000.00, \"Box4\": 0.00, \"Box5\": 0.00, \"Box6\": 0.00, \"Box7\": 0.00, \"Box8\": 0.00, \"Box9\": 0.00, \"Box10\": 0.00, \"Box11\": 0.00, \"Box13\": 0.00, \"Box14\": 0.00, \"Name\": \"Hoyt Productions\", \"FederalTaxIDType\": \"SSN\", \"City\": \"Oaktown\", \"Zip\": \"45123\", \"State\": \"NY\", \"Email\": \"accounts@hoytmadeupdemo.com\", \"StreetAddress\": \"100 Rusty Ridge Road\\r\\nSuite 100\\r\\n\\r\\n\\r\\n\", \"TaxID\": \"123-45-6780\", \"ContactId\": \"19732b6a-9a5c-4651-b33c-3f8f682e2a2b\" }, { \"Box1\": 5543.75, \"Box2\": 0.00, \"Box3\": 0.00, \"Box4\": 0.00, \"Box5\": 0.00, \"Box6\": 0.00, \"Box7\": 0.00, \"Box8\": 0.00, \"Box9\": 0.00, \"Box10\": 0.00, \"Box11\": 0.00, \"Box13\": 0.00, \"Box14\": 0.00, \"Name\": \"Truxton Property Management\", \"FederalTaxIDType\": \"EIN\", \"City\": \"Coppertown\", \"Zip\": \"21321\", \"State\": \"FL\", \"Email\": \"accounts@truxtonmadeupdemo.com\", \"StreetAddress\": \"1000 Copper Avenue\\r\\nSuite 1000\\r\\n\\r\\n\\r\\n\", \"TaxID\": \"33-3332233\", \"ContactId\": \"018355fc-c67e-4352-b443-ef3873031983\" } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.tenninetynine.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/AgedPayablesByContact": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for AgedPayablesByContact",
        "operationId": "getReportAgedPayablesByContact",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "contactId",
            "in": "query",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date of the Aged Payables By Contact report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The from date of the Aged Payables By Contact report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The to date of the Aged Payables By Contact report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"5a33f9d4-44a6-4467-a812-4f025506ee35\", \"Status\": \"OK\", \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\": \"\\/Date(1555971088085)\\/\", \"Reports\": [ { \"ReportID\": \"AgedPayablesByContact\", \"ReportName\": \"Aged Payables By Contact\", \"ReportType\": \"AgedPayablesByContact\", \"ReportTitles\": [ \"Invoices\", \"ABC\", \"From 10 October 2017 to 22 April 2019\", \"Showing payments to 22 April 2019\" ], \"ReportDate\": \"22 April 2019\", \"UpdatedDateUTC\": \"\\/Date(1555971088085)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"Date\" }, { \"Value\": \"Reference\" }, { \"Value\": \"Due Date\" }, { \"Value\": \"\" }, { \"Value\": \"Total\" }, { \"Value\": \"Paid\" }, { \"Value\": \"Credited\" }, { \"Value\": \"Due\" } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"2017-10-10T00:00:00\" }, { \"Value\": \"Opening Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"2018-10-09T00:00:00\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"2018-10-23T00:00:00\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"181 days overdue\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"250.00\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"250.00\", \"Attributes\": [ { \"Value\": \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"250.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"250.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Closing Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"250.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"250.00\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/AgedReceivablesByContact": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for AgedReceivablesByContact",
        "operationId": "getReportAgedReceivablesByContact",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "contactId",
            "in": "query",
            "description": "Unique identifier for a Contact",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date of the Aged Receivables By Contact report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The from date of the Aged Receivables By Contact report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The to date of the Aged Receivables By Contact report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"b977b607-955d-47cb-92fd-7c29b3dd755c\", \"Status\": \"OK\", \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\": \"\\/Date(1556032862815)\\/\", \"Reports\": [ { \"ReportID\": \"AgedReceivablesByContact\", \"ReportName\": \"Aged Receivables By Contact\", \"ReportType\": \"AgedReceivablesByContact\", \"ReportTitles\": [ \"Invoices\", \"ABC\", \"From 10 October 2017 to 23 April 2019\", \"Showing payments to 23 April 2019\" ], \"ReportDate\": \"23 April 2019\", \"UpdatedDateUTC\": \"\\/Date(1556032862815)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"Date\" }, { \"Value\": \"Number\" }, { \"Value\": \"Due Date\" }, { \"Value\": \"\" }, { \"Value\": \"Total\" }, { \"Value\": \"Paid\" }, { \"Value\": \"Credited\" }, { \"Value\": \"Due\" } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"2017-10-10T00:00:00\" }, { \"Value\": \"Opening Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"2018-05-13T00:00:00\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"IV1242016\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"2018-06-22T00:00:00\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"305 days overdue\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"100.00\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"100.00\", \"Attributes\": [ { \"Value\": \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"2019-04-23T00:00:00\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"INV-0086\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"2019-05-07T00:00:00\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"50.00\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }, { \"Value\": \"50.00\", \"Attributes\": [ { \"Value\": \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"150.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"150.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Closing Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"150.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"150.00\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/BalanceSheet": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for BalanceSheet",
        "operationId": "getReportBalanceSheet",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date of the Balance Sheet report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "2019-11-01"
          },
          {
            "name": "periods",
            "in": "query",
            "description": "The number of periods for the Balance Sheet report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 3
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "The period size to compare to (MONTH, QUARTER, YEAR)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "MONTH",
                "QUARTER",
                "YEAR"
              ]
            },
            "example": "MONTH"
          },
          {
            "name": "trackingOptionID1",
            "in": "query",
            "description": "The tracking option 1 for the Balance Sheet report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "trackingOptionID2",
            "in": "query",
            "description": "The tracking option 2 for the Balance Sheet report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "standardLayout",
            "in": "query",
            "description": "The standard layout boolean for the Balance Sheet report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "description": "return a cash basis for the Balance Sheet report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"2ddba304-6ed3-4da4-b185-3b6289699653\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555099412778)\\/\", \"Reports\": [ { \"ReportID\": \"BalanceSheet\", \"ReportName\": \"Balance Sheet\", \"ReportType\": \"BalanceSheet\", \"ReportTitles\": [ \"Balance Sheet\", \"Dev Evangelist - Sid Test 3 (NZ-2016-02)\", \"As at 30 April 2019\" ], \"ReportDate\": \"12 April 2019\", \"UpdatedDateUTC\": \"\\/Date(1555099412778)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"\" }, { \"Value\": \"30 Apr 2019\" }, { \"Value\": \"31 Mar 2019\" }, { \"Value\": \"28 Feb 2019\" } ] }, { \"RowType\": \"Section\", \"Title\": \"Assets\", \"Rows\": [] }, { \"RowType\": \"Section\", \"Title\": \"Bank\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Country Savings\", \"Attributes\": [ { \"Value\": \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\" } ] }, { \"Value\": \"-1850.00\", \"Attributes\": [ { \"Value\": \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\" } ] }, { \"Value\": \"-1850.00\", \"Attributes\": [ { \"Value\": \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"My Big Bank\", \"Attributes\": [ { \"Value\": \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] }, { \"Value\": \"2146.37\", \"Attributes\": [ { \"Value\": \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] }, { \"Value\": \"2020.00\", \"Attributes\": [ { \"Value\": \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Bank\" }, { \"Value\": \"296.37\" }, { \"Value\": \"170.00\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Current Assets\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Receivable\", \"Attributes\": [ { \"Value\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] }, { \"Value\": \"154355.72\", \"Attributes\": [ { \"Value\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] }, { \"Value\": \"154351.78\", \"Attributes\": [ { \"Value\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] }, { \"Value\": \"356.50\", \"Attributes\": [ { \"Value\": \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Inventory\", \"Attributes\": [ { \"Value\": \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] }, { \"Value\": \"25000.00\", \"Attributes\": [ { \"Value\": \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] }, { \"Value\": \"25000.00\", \"Attributes\": [ { \"Value\": \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Current Assets\" }, { \"Value\": \"179355.72\" }, { \"Value\": \"179351.78\" }, { \"Value\": \"356.50\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Fixed Assets\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Office Equipment\", \"Attributes\": [ { \"Value\": \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\" } ] }, { \"Value\": \"-119.00\", \"Attributes\": [ { \"Value\": \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\" } ] }, { \"Value\": \"-119.00\", \"Attributes\": [ { \"Value\": \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Fixed Assets\" }, { \"Value\": \"-119.00\" }, { \"Value\": \"-119.00\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Assets\" }, { \"Value\": \"179533.09\" }, { \"Value\": \"179402.78\" }, { \"Value\": \"356.50\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Liabilities\", \"Rows\": [] }, { \"RowType\": \"Section\", \"Title\": \"Current Liabilities\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Payable\", \"Attributes\": [ { \"Value\": \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] }, { \"Value\": \"-3469.00\", \"Attributes\": [ { \"Value\": \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] }, { \"Value\": \"-3469.00\", \"Attributes\": [ { \"Value\": \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] }, { \"Value\": \"-184.00\", \"Attributes\": [ { \"Value\": \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"GST\", \"Attributes\": [ { \"Value\": \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] }, { \"Value\": \"-2446.21\", \"Attributes\": [ { \"Value\": \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] }, { \"Value\": \"-2461.89\", \"Attributes\": [ { \"Value\": \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] }, { \"Value\": \"76.50\", \"Attributes\": [ { \"Value\": \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Current Liabilities\" }, { \"Value\": \"-5915.21\" }, { \"Value\": \"-5930.89\" }, { \"Value\": \"-107.50\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Liabilities\" }, { \"Value\": \"-5915.21\" }, { \"Value\": \"-5930.89\" }, { \"Value\": \"-107.50\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Net Assets\" }, { \"Value\": \"185448.30\" }, { \"Value\": \"185333.67\" }, { \"Value\": \"464.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Equity\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Current Year Earnings\", \"Attributes\": [ { \"Value\": \"abababab-abab-abab-abab-abababababab\", \"Id\": \"account\" } ] }, { \"Value\": \"114.62\", \"Attributes\": [ { \"Value\": \"abababab-abab-abab-abab-abababababab\", \"Id\": \"account\" }, { \"Value\": \"4/1/2019\", \"Id\": \"fromDate\" }, { \"Value\": \"4/30/2019\", \"Id\": \"toDate\" } ] }, { \"Value\": \"156621.67\", \"Attributes\": [ { \"Value\": \"abababab-abab-abab-abab-abababababab\", \"Id\": \"account\" }, { \"Value\": \"4/1/2018\", \"Id\": \"fromDate\" }, { \"Value\": \"3/31/2019\", \"Id\": \"toDate\" } ] }, { \"Value\": \"500.00\", \"Attributes\": [ { \"Value\": \"abababab-abab-abab-abab-abababababab\", \"Id\": \"account\" }, { \"Value\": \"4/1/2018\", \"Id\": \"fromDate\" }, { \"Value\": \"2/28/2019\", \"Id\": \"toDate\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Owner A Drawings\", \"Attributes\": [ { \"Value\": \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] }, { \"Value\": \"28752.00\", \"Attributes\": [ { \"Value\": \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] }, { \"Value\": \"28752.00\", \"Attributes\": [ { \"Value\": \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Owner A Funds Introduced\", \"Attributes\": [ { \"Value\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] }, { \"Value\": \"-50.00\", \"Attributes\": [ { \"Value\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] }, { \"Value\": \"-50.00\", \"Attributes\": [ { \"Value\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] }, { \"Value\": \"-46.00\", \"Attributes\": [ { \"Value\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Retained Earnings\", \"Attributes\": [ { \"Value\": \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" } ] }, { \"Value\": \"156631.67\", \"Attributes\": [ { \"Value\": \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"4/30/2019\", \"Id\": \"toDate\" } ] }, { \"Value\": \"10.00\", \"Attributes\": [ { \"Value\": \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"3/31/2019\", \"Id\": \"toDate\" } ] }, { \"Value\": \"10.00\", \"Attributes\": [ { \"Value\": \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"2/28/2019\", \"Id\": \"toDate\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Equity\" }, { \"Value\": \"185448.29\" }, { \"Value\": \"185333.67\" }, { \"Value\": \"464.00\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/BankSummary": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for BankSummary",
        "operationId": "getReportBankSummary",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The from date for the Bank Summary report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-11-01"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The to date for the Bank Summary report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-11-30"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"ae58d0ec-9c5c-455f-b96e-690107579257\", \"Status\": \"OK\", \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\": \"\\/Date(1556035526223)\\/\", \"Reports\": [ { \"ReportID\": \"BankSummary\", \"ReportName\": \"Bank Summary\", \"ReportType\": \"BankSummary\", \"ReportTitles\": [ \"Bank Summary\", \"MindBody Test 10 (AU-2016-02)\", \"From 1 April 2019 to 30 April 2019\" ], \"ReportDate\": \"23 April 2019\", \"UpdatedDateUTC\": \"\\/Date(1556035526223)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"Bank Accounts\" }, { \"Value\": \"Opening Balance\" }, { \"Value\": \"Cash Received\" }, { \"Value\": \"Cash Spent\" }, { \"Value\": \"Closing Balance\" } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Big City Bank\", \"Attributes\": [ { \"Value\": \"03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8\", \"Id\": \"accountID\" } ] }, { \"Value\": \"0.00\" }, { \"Value\": \"110.00\", \"Attributes\": [ { \"Value\": \"03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8\", \"Id\": \"account\" } ] }, { \"Value\": \"100.00\", \"Attributes\": [ { \"Value\": \"03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8\", \"Id\": \"account\" } ] }, { \"Value\": \"10.00\" } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\" }, { \"Value\": \"0.00\" }, { \"Value\": \"110.00\" }, { \"Value\": \"100.00\" }, { \"Value\": \"10.00\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for BAS only valid for AU orgs",
        "operationId": "getReportBASorGSTList",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/{ReportID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for BAS only valid for AU orgs",
        "operationId": "getReportBASorGST",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "ReportID",
            "in": "path",
            "description": "Unique identifier for a Report",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/BudgetSummary": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for Budget Summary",
        "operationId": "getReportBudgetSummary",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for the Bank Summary report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-03-31"
          },
          {
            "name": "period",
            "in": "query",
            "description": "The number of periods to compare (integer between 1 and 12)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 2
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "The period size to compare to (1=month, 3=quarter, 12=year)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 3
          }
        ],
        "responses": {
          "200": {
            "description": "success- return a Report with Rows object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"9f1e2722-0d98-4669-890f-f8f4217c968b\", \"Status\": \"OK\", \"ProviderName\": \"java-sdk-oauth2-dev-02\", \"DateTimeUTC\": \"\\/Date(1573755037865)\\/\", \"Reports\": [ { \"ReportID\": \"BudgetSummary\", \"ReportName\": \"Budget Summary\", \"ReportType\": \"BudgetSummary\", \"ReportTitles\": [ \"Overall Budget\", \"Budget Summary\", \"Mind Body Online Test 11\", \"November 2019 to October 2022\" ], \"ReportDate\": \"14 November 2019\", \"UpdatedDateUTC\": \"\\/Date(1573755037865)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"Account\" }, { \"Value\": \"Jan-20\" }, { \"Value\": \"Apr-20\" }, { \"Value\": \"Jul-20\" }, { \"Value\": \"Oct-20\" }, { \"Value\": \"Jan-21\" }, { \"Value\": \"Apr-21\" }, { \"Value\": \"Jul-21\" }, { \"Value\": \"Oct-21\" }, { \"Value\": \"Jan-22\" }, { \"Value\": \"Apr-22\" }, { \"Value\": \"Jul-22\" }, { \"Value\": \"Oct-22\" } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Gross Profit\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Expenses\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Net Profit\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/ExecutiveSummary": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for ExecutiveSummary",
        "operationId": "getReportExecutiveSummary",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for the Bank Summary report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-03-31"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"068d3505-ac37-43f3-8135-f912a5963d8a\", \"Status\": \"OK\", \"ProviderName\": \"java-sdk-oauth2-dev-02\", \"DateTimeUTC\": \"/Date(1573755038314)/\", \"Reports\": [ { \"ReportID\": \"ExecutiveSummary\", \"ReportName\": \"Executive Summary\", \"ReportType\": \"ExecutiveSummary\", \"ReportTitles\": [ \"Executive Summary\", \"Mind Body Online Test 11\", \"For the month of November 2019\" ], \"ReportDate\": \"14 November 2019\", \"UpdatedDateUTC\": \"/Date(1573755038314)/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"\" }, { \"Value\": \"Nov 2019\" }, { \"Value\": \"Oct 2019\" }, { \"Value\": \"Variance\" } ] }, { \"RowType\": \"Section\", \"Title\": \"Cash\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Cash received\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Cash spent\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Cash surplus (deficit)\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Closing bank balance\" }, { \"Value\": \"79.01\" }, { \"Value\": \"79.01\" }, { \"Value\": \"0.0%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Profitability\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Income\" }, { \"Value\": \"40.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Direct costs\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Gross profit (loss)\" }, { \"Value\": \"40.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Other Income\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Expenses\" }, { \"Value\": \"205.40\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Profit (loss)\" }, { \"Value\": \"-165.40\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Balance Sheet\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Debtors\" }, { \"Value\": \"590.00\" }, { \"Value\": \"550.00\" }, { \"Value\": \"7.3%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Creditors\" }, { \"Value\": \"-44.00\" }, { \"Value\": \"-44.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Net assets\" }, { \"Value\": \"594.16\" }, { \"Value\": \"759.56\" }, { \"Value\": \"-21.8%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Income\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Number of invoices issued\" }, { \"Value\": \"1\" }, { \"Value\": \"0\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Average value of invoices\" }, { \"Value\": \"40.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Performance\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Gross profit margin\" }, { \"Value\": \"100.0%\" }, { \"Value\": \"\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Net profit margin\" }, { \"Value\": \"-413.5%\" }, { \"Value\": \"\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Return on investment (p.a.)\" }, { \"Value\": \"-334.1%\" }, { \"Value\": \"0.0%\" }, { \"Value\": \"0.0%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Position\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Average debtors days\" }, { \"Value\": \"442.50\" }, { \"Value\": \"0\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Average creditors days\" }, { \"Value\": \"-6.426484907497565725413826680\" }, { \"Value\": \"0\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Short term cash forecast\" }, { \"Value\": \"634.00\" }, { \"Value\": \"594.00\" }, { \"Value\": \"6.7%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Current assets to liabilities\" }, { \"Value\": \"4.0729764675459012154124644427\" }, { \"Value\": \"-62.034024896265560165975103734\" }, { \"Value\": \"106.6%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Term assets to liabilities\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"0.0%\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/ProfitAndLoss": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for ProfitAndLoss",
        "operationId": "getReportProfitAndLoss",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The from date for the ProfitAndLoss report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-03-01"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "The to date for the ProfitAndLoss report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-03-31"
          },
          {
            "name": "periods",
            "in": "query",
            "description": "The number of periods to compare (integer between 1 and 12)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            },
            "example": 3
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "The period size to compare to (MONTH, QUARTER, YEAR)",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "MONTH",
                "QUARTER",
                "YEAR"
              ]
            },
            "example": "MONTH"
          },
          {
            "name": "trackingCategoryID",
            "in": "query",
            "description": "The trackingCategory 1 for the ProfitAndLoss report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "trackingCategoryID2",
            "in": "query",
            "description": "The trackingCategory 2 for the ProfitAndLoss report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "trackingOptionID",
            "in": "query",
            "description": "The tracking option 1 for the ProfitAndLoss report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "trackingOptionID2",
            "in": "query",
            "description": "The tracking option 2 for the ProfitAndLoss report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "standardLayout",
            "in": "query",
            "description": "Return the standard layout for the ProfitAndLoss report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": "true"
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "description": "Return cash only basis for the ProfitAndLoss report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/Reports/TrialBalance": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve report for TrialBalance",
        "operationId": "getReportTrialBalance",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date for the Trial Balance report e.g. 2018-03-31",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2019-10-31"
          },
          {
            "name": "paymentsOnly",
            "in": "query",
            "description": "Return cash only basis for the Trial Balance report",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            },
            "example": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type ReportWithRows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportWithRows"
                },
                "example": "{ \"Id\": \"0b3ee35e-b97c-4b3c-b7e2-9a465233e329\", \"Status\": \"OK\", \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\": \"\\/Date(1556129558740)\\/\", \"Reports\": [ { \"ReportID\": \"TrialBalance\", \"ReportName\": \"Trial Balance\", \"ReportType\": \"TrialBalance\", \"ReportTitles\": [ \"Trial Balance\", \"Dev Evangelist - Sid Test 1 (US-2016-06)\", \"As at 24 April 2019\" ], \"ReportDate\": \"24 April 2019\", \"UpdatedDateUTC\": \"\\/Date(1556129558724)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\": \"Account\" }, { \"Value\": \"Debit\" }, { \"Value\": \"Credit\" }, { \"Value\": \"YTD Debit\" }, { \"Value\": \"YTD Credit\" } ] }, { \"RowType\": \"Section\", \"Title\": \"Revenue\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Big Expense (002)\", \"Attributes\": [ { \"Value\": \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, { \"Value\": \"80.00\", \"Attributes\": [ { \"Value\": \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Sales (400)\", \"Attributes\": [ { \"Value\": \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, { \"Value\": \"200.00\", \"Attributes\": [ { \"Value\": \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, { \"Value\": \"1020.22\", \"Attributes\": [ { \"Value\": \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Sales-35325 (1302)\", \"Attributes\": [ { \"Value\": \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, { \"Value\": \"1000.00\", \"Attributes\": [ { \"Value\": \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, { \"Value\": \"1000.00\", \"Attributes\": [ { \"Value\": \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Expenses\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Foobar14043 (123)\", \"Attributes\": [ { \"Value\": \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, { \"Value\": \"40.00\", \"Attributes\": [ { \"Value\": \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"MyExp51937 (1231239)\", \"Attributes\": [ { \"Value\": \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, { \"Value\": \"80.00\", \"Attributes\": [ { \"Value\": \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Assets\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Receivable (120)\", \"Attributes\": [ { \"Value\": \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, { \"Value\": \"1190.00\", \"Attributes\": [ { \"Value\": \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, { \"Value\": \"36555.04\", \"Attributes\": [ { \"Value\": \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Business Wells Fargo (088)\", \"Attributes\": [ { \"Value\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, { \"Value\": \"7639.04\", \"Attributes\": [ { \"Value\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Generic Cash Clearing (8003)\", \"Attributes\": [ { \"Value\": \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, { \"Value\": \"1443.00\", \"Attributes\": [ { \"Value\": \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Generic Credit Card Clearing (8002)\", \"Attributes\": [ { \"Value\": \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, { \"Value\": \"96.49\", \"Attributes\": [ { \"Value\": \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Generic Inventory (1400)\", \"Attributes\": [ { \"Value\": \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, { \"Value\": \"160.00\", \"Attributes\": [ { \"Value\": \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"My Savings (090)\", \"Attributes\": [ { \"Value\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, { \"Value\": \"219.92\", \"Attributes\": [ { \"Value\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Payment Wall Clearing Account (8001)\", \"Attributes\": [ { \"Value\": \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, { \"Value\": \"1.00\", \"Attributes\": [ { \"Value\": \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Liabilities\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Payable (200)\", \"Attributes\": [ { \"Value\": \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, { \"Value\": \"9223.00\", \"Attributes\": [ { \"Value\": \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Deferred Revenue (2300)\", \"Attributes\": [ { \"Value\": \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, { \"Value\": \"1854.24\", \"Attributes\": [ { \"Value\": \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Rounding (260)\", \"Attributes\": [ { \"Value\": \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, { \"Value\": \"0.01\", \"Attributes\": [ { \"Value\": \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Sales Tax (220)\", \"Attributes\": [ { \"Value\": \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, { \"Value\": \"1578.35\", \"Attributes\": [ { \"Value\": \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Suspense (250)\", \"Attributes\": [ { \"Value\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, { \"Value\": \"10.00\", \"Attributes\": [ { \"Value\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, { \"Value\": \"41.00\", \"Attributes\": [ { \"Value\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Unpaid Expense Claims (210)\", \"Attributes\": [ { \"Value\": \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, { \"Value\": \"135.00\", \"Attributes\": [ { \"Value\": \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Equity\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Retained Earnings (320)\", \"Attributes\": [ { \"Value\": \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\": \"toDate\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\": \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\": \"toDate\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\": \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\": \"toDate\" } ] }, { \"Value\": \"30871.69\", \"Attributes\": [ { \"Value\": \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\": \"toDate\" } ] } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\" }, { \"Value\": \"1200.00\" }, { \"Value\": \"1200.00\" }, { \"Value\": \"46019.00\" }, { \"Value\": \"46019.00\" } ] } ] } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.reports.read"
            ]
          }
        ]
      },
      "x-related-model": "Report"
    },
    "/TaxRates": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve Tax Rates",
        "operationId": "getTaxRates",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + TaxRate.StatusEnum.ACTIVE + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::TaxRate::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Name ASC"
          },
          {
            "name": "TaxType",
            "in": "query",
            "description": "Filter by tax type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "INPUT"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TaxRates array with TaxRates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRates"
                },
                "example": "{ \"Id\": \"455d494d-9706-465b-b584-7086ca406b27\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555086839841)\\/\", \"TaxRates\": [ { \"Name\": \"15% GST on Expenses\", \"TaxType\": \"INPUT2\", \"ReportTaxType\": \"INPUT\", \"CanApplyToAssets\": true, \"CanApplyToEquity\": true, \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 15.0000, \"EffectiveRate\": 15.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"GST\", \"Rate\": 15.0000, \"IsCompound\": false, \"IsNonRecoverable\": false } ] }, { \"Name\": \"15% GST on Income\", \"TaxType\": \"OUTPUT2\", \"ReportTaxType\": \"OUTPUT\", \"CanApplyToAssets\": true, \"CanApplyToEquity\": true, \"CanApplyToExpenses\": false, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": true, \"DisplayTaxRate\": 15.0000, \"EffectiveRate\": 15.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"GST\", \"Rate\": 15.0000, \"IsCompound\": false, \"IsNonRecoverable\": false } ] }, { \"Name\": \"GST on Imports\", \"TaxType\": \"GSTONIMPORTS\", \"ReportTaxType\": \"GSTONIMPORTS\", \"CanApplyToAssets\": false, \"CanApplyToEquity\": false, \"CanApplyToExpenses\": false, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 0.0000, \"EffectiveRate\": 0.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"GST\", \"Rate\": 0.0000, \"IsCompound\": false, \"IsNonRecoverable\": false } ] }, { \"Name\": \"No GST\", \"TaxType\": \"NONE\", \"ReportTaxType\": \"NONE\", \"CanApplyToAssets\": true, \"CanApplyToEquity\": true, \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": true, \"DisplayTaxRate\": 0.0000, \"EffectiveRate\": 0.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"GST\", \"Rate\": 0.0000, \"IsCompound\": false, \"IsNonRecoverable\": false } ] }, { \"Name\": \"Zero Rated\", \"TaxType\": \"ZERORATED\", \"ReportTaxType\": \"OUTPUT\", \"CanApplyToAssets\": false, \"CanApplyToEquity\": false, \"CanApplyToExpenses\": false, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": true, \"DisplayTaxRate\": 0.0000, \"EffectiveRate\": 0.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"GST\", \"Rate\": 0.0000, \"IsCompound\": false, \"IsNonRecoverable\": false } ] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create one or more Tax Rates",
        "operationId": "createTaxRates",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "TaxRates array with TaxRate object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRates"
              },
              "example": "{ taxRates: [{ name: \"CA State Tax\", taxComponents: [{ name: \"State Tax\", rate: 2.25 }]}]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type TaxRates array newly created TaxRate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRates"
                },
                "example": "{ \"Id\": \"9d2c5e56-fab4-450b-a5ff-d47409508eab\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555086839080)\\/\", \"TaxRates\": [ { \"Name\": \"SDKTax29067\", \"TaxType\": \"TAX002\", \"ReportTaxType\": \"INPUT\", \"CanApplyToAssets\": true, \"CanApplyToEquity\": true, \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 2.2500, \"EffectiveRate\": 2.2500, \"Status\": \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"State Tax\", \"Rate\": 2.2500, \"IsCompound\": false, \"IsNonRecoverable\": false } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "tax_rates = { tax_rates: [{ name: \"CA State Tax\", tax_components: [{ name: \"State Tax\", rate: 2.25 }]}]}"
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update Tax Rates",
        "operationId": "updateTaxRate",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRates"
              },
              "example": "{ taxRates: [{ name: \"State Tax NY\", taxComponents: [{ name: \"State Tax\", rate: 2.25 }], status: TaxRate.StatusEnum.Deleted, reportTaxType: TaxRate.ReportTaxTypeEnum.INPUT }]}"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type TaxRates array updated TaxRate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRates"
                },
                "example": "{ \"Id\": \"12f4c453-2e25-41aa-a52f-6faaf6c05832\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555086839658)\\/\", \"TaxRates\": [ { \"Name\": \"SDKTax29067\", \"TaxType\": \"TAX002\", \"ReportTaxType\": \"INPUT\", \"CanApplyToAssets\": true, \"CanApplyToEquity\": true, \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 2.2500, \"EffectiveRate\": 2.2500, \"Status\": \"DELETED\", \"TaxComponents\": [ { \"Name\": \"State Tax\", \"Rate\": 2.2500, \"IsCompound\": false, \"IsNonRecoverable\": false } ] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true,
        "x-ruby-requestBody": "tax_rates = { tax_rates: [{ name: \"State Tax NY\", tax_components: [{ name: \"State Tax\", rate: 2.25 }], status: XeroRuby::Accounting::TaxRate::Deleted, report_tax_type: XeroRuby::Accounting::TaxRate::INPUT }]}"
      }
    },
    "/TrackingCategories": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve tracking categories and options",
        "operationId": "getTrackingCategories",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Status==\"' + TrackingCategory.StatusEnum.ACTIVE + '\"",
            "x-ruby-param": "Status==#{XeroRuby::Accounting::TrackingCategory::ACTIVE}"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "Name ASC"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "e.g. includeArchived=true - Categories and options with a status of ARCHIVED will be included in the response",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of TrackingCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingCategories"
                },
                "example": "{ \"Id\": \"cec55068-8061-48e5-ac83-c77e7c54cf3d\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085855047)\\/\", \"TrackingCategories\": [ { \"Name\": \"BarFoo\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\": \"22f10184-0deb-44ae-a312-b1f6ea70e51f\", \"Options\": [] }, { \"Name\": \"HelloWorld\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\": \"0c9fce3e-a111-4d99-803a-62cf3f40e633\", \"Options\": [] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create tracking categories",
        "operationId": "createTrackingCategory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          }
        ],
        "requestBody": {
          "description": "TrackingCategory object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingCategory"
              },
              "example": "{ name: \"FooBar\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of newly created TrackingCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingCategories"
                },
                "example": "{ \"Id\": \"1a9f8e03-9916-4a42-93a9-e8fa4902d49c\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085855988)\\/\", \"TrackingCategories\": [ { \"Name\": \"FooBar\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\": \"b1df776b-b093-4730-b6ea-590cca40e723\", \"Options\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "TrackingCategory"
    },
    "/TrackingCategories/{TrackingCategoryID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve tracking categories and options for specified category",
        "operationId": "getTrackingCategory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "description": "Unique identifier for a TrackingCategory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of specified TrackingCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingCategories"
                },
                "example": "{ \"Id\": \"b75b8862-39c0-45a8-82b8-30ab4831996b\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085855442)\\/\", \"TrackingCategories\": [ { \"Name\": \"Foo41157\", \"Status\": \"DELETED\", \"TrackingCategoryID\": \"22f10184-0deb-44ae-a312-b1f6ea70e51f\", \"Options\": [] } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update tracking categories",
        "operationId": "updateTrackingCategory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "description": "Unique identifier for a TrackingCategory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingCategory"
              },
              "example": "{ name: \"Avengers\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of updated TrackingCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingCategories"
                },
                "example": "{ \"Id\": \"55438774-f87d-4731-b586-799cf0f914ed\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085856275)\\/\", \"TrackingCategories\": [ { \"Name\": \"BarFoo\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\": \"b1df776b-b093-4730-b6ea-590cca40e723\", \"Options\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete tracking categories",
        "operationId": "deleteTrackingCategory",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "description": "Unique identifier for a TrackingCategory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingCategories array of deleted TrackingCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingCategories"
                },
                "example": "{ \"Id\": \"ca7f8145-c8a5-4366-a2fb-784edc0cfbb7\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555086457922)\\/\", \"TrackingCategories\": [ { \"Name\": \"Foo46189\", \"Status\": \"DELETED\", \"TrackingCategoryID\": \"0390bdfd-94f2-49d6-b7a0-4a38c46ebf03\", \"Options\": [] } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "x-related-model": "TrackingCategory"
    },
    "/TrackingCategories/{TrackingCategoryID}/Options": {
      "put": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to create options for a specified tracking category",
        "operationId": "createTrackingOptions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "description": "Unique identifier for a TrackingCategory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "description": "TrackingOption object in body of request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingOption"
              },
              "example": "{ name: \" Bar\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingOptions array of options for a specified category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingOptions"
                },
                "example": "{ \"Id\": \"923be702-d124-4f5c-a568-760906538d8e\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085857061)\\/\", \"Options\": [ { \"TrackingOptionID\": \"34669548-b989-487a-979f-0787d04568a2\", \"Name\": \"Bar40423\", \"Status\": \"ACTIVE\", \"HasValidationErrors\": false, \"IsDeleted\": false, \"IsArchived\": false, \"IsActive\": true } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "x-related-model": "TrackingCategory"
    },
    "/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}": {
      "post": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to update options for a specified tracking category",
        "operationId": "updateTrackingOptions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "description": "Unique identifier for a TrackingCategory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "TrackingOptionID",
            "in": "path",
            "description": "Unique identifier for a Tracking Option",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingOption"
              },
              "example": "{ name: \"Vision\" }"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingOptions array of options for a specified category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingOptions"
                },
                "example": "{ \"Id\": \"923be702-d124-4f5c-a568-760906538d8e\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085857061)\\/\", \"Options\": [ { \"TrackingOptionID\": \"34669548-b989-487a-979f-0787d04568a2\", \"Name\": \"Bar40423\", \"Status\": \"ACTIVE\", \"HasValidationErrors\": false, \"IsDeleted\": false, \"IsArchived\": false, \"IsActive\": true } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ],
        "x-hasAccountingValidationError": true
      },
      "delete": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to delete a specified option for a specified tracking category",
        "operationId": "deleteTrackingOptions",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "TrackingCategoryID",
            "in": "path",
            "description": "Unique identifier for a TrackingCategory",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          },
          {
            "name": "TrackingOptionID",
            "in": "path",
            "description": "Unique identifier for a Tracking Option",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type TrackingOptions array of remaining options for a specified category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingOptions"
                },
                "example": "{ \"Id\": \"d985866e-0831-418f-a07c-4d843ff66d25\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1555085857338)\\/\", \"Options\": [ { \"TrackingOptionID\": \"34669548-b989-487a-979f-0787d04568a2\", \"Name\": \"Bar40423\", \"Status\": \"DELETED\", \"HasValidationErrors\": false, \"IsDeleted\": true, \"IsArchived\": false, \"IsActive\": false } ] }"
              }
            }
          },
          "400": {
            "description": "A failed request due to validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings"
            ]
          }
        ]
      },
      "x-related-model": "TrackingCategory"
    },
    "/Users": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve users",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Only records created or modified since this timestamp will be returned",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-06T12:17:43.202-08:00"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Filter by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "IsSubscriber==true"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order by an any element",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "LastName ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Users array of all User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                },
                "example": "{ \"Id\": \"17932a4e-4948-4d50-8672-4ef0e1dd90c5\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553880796393)\\/\", \"Users\": [ { \"UserID\": \"3c37ef1d-cd49-4589-9787-3c418ed8b6ac\", \"EmailAddress\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"LastName\": \"Maestre\", \"UpdatedDateUTC\": \"\\/Date(1508523261613+0000)\\/\", \"IsSubscriber\": false, \"OrganisationRole\": \"FINANCIALADVISER\" }, { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\", \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "User"
    },
    "/Users/{UserID}": {
      "get": {
        "tags": [
          "Accounting"
        ],
        "summary": "Allows you to retrieve a specified user",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "xero-tenant-id",
            "in": "header",
            "description": "Xero identifier for Tenant",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "YOUR_XERO_TENANT_ID"
          },
          {
            "name": "UserID",
            "in": "path",
            "description": "Unique identifier for a User",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "00000000-0000-0000-000-000000000000"
          }
        ],
        "responses": {
          "200": {
            "description": "Success - return response of type Users array of specified User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                },
                "example": "{ \"Id\": \"51250ce8-1b35-4ba4-b404-dc94ff75bd87\", \"Status\": \"OK\", \"ProviderName\": \"Java Partner Example\", \"DateTimeUTC\": \"\\/Date(1553880796732)\\/\", \"Users\": [ { \"UserID\": \"3c37ef1d-cd49-4589-9787-3c418ed8b6ac\", \"EmailAddress\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"LastName\": \"Maestre\", \"UpdatedDateUTC\": \"\\/Date(1508523261613+0000)\\/\", \"IsSubscriber\": false, \"OrganisationRole\": \"FINANCIALADVISER\" } ] }"
              }
            }
          }
        },
        "security": [
          {
            "OAuth2": [
              "accounting.settings.read"
            ]
          }
        ]
      },
      "x-related-model": "User"
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "AddressType": {
            "type": "string",
            "description": "define the type of address",
            "enum": [
              "POBOX",
              "STREET",
              "DELIVERY"
            ]
          },
          "AddressLine1": {
            "maxLength": 500,
            "type": "string",
            "description": "max length = 500"
          },
          "AddressLine2": {
            "maxLength": 500,
            "type": "string",
            "description": "max length = 500"
          },
          "AddressLine3": {
            "maxLength": 500,
            "type": "string",
            "description": "max length = 500"
          },
          "AddressLine4": {
            "maxLength": 500,
            "type": "string",
            "description": "max length = 500"
          },
          "City": {
            "maxLength": 255,
            "type": "string",
            "description": "max length = 255"
          },
          "Region": {
            "maxLength": 255,
            "type": "string",
            "description": "max length = 255"
          },
          "PostalCode": {
            "maxLength": 50,
            "type": "string",
            "description": "max length = 50"
          },
          "Country": {
            "maxLength": 50,
            "type": "string",
            "description": "max length = 50, [A-Z], [a-z] only"
          },
          "AttentionTo": {
            "maxLength": 255,
            "type": "string",
            "description": "max length = 255"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/types"
        }
      },
      "Phone": {
        "type": "object",
        "properties": {
          "PhoneType": {
            "type": "string",
            "enum": [
              "DEFAULT",
              "DDI",
              "MOBILE",
              "FAX",
              "OFFICE"
            ]
          },
          "PhoneNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "max length = 50"
          },
          "PhoneAreaCode": {
            "maxLength": 10,
            "type": "string",
            "description": "max length = 10"
          },
          "PhoneCountryCode": {
            "maxLength": 20,
            "type": "string",
            "description": "max length = 20"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/types"
        }
      },
      "Accounts": {
        "type": "object",
        "properties": {
          "Accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Account": {
        "type": "object",
        "properties": {
          "Code": {
            "type": "string",
            "description": "Customer defined alpha numeric account code e.g 200 or SALES (max length = 10)",
            "example": "4400"
          },
          "Name": {
            "maxLength": 150,
            "type": "string",
            "description": "Name of account (max length = 150)",
            "example": "Food Sales"
          },
          "AccountID": {
            "type": "string",
            "description": "The Xero identifier for an account – specified as a string following  the endpoint name   e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "Type": {
            "$ref": "#/components/schemas/AccountType"
          },
          "BankAccountNumber": {
            "type": "string",
            "description": "For bank accounts only (Account Type BANK)"
          },
          "Status": {
            "type": "string",
            "description": "Accounts with a status of ACTIVE can be updated to ARCHIVED. See Account Status Codes",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DELETED"
            ]
          },
          "Description": {
            "type": "string",
            "description": "Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000)"
          },
          "BankAccountType": {
            "type": "string",
            "description": "For bank accounts only. See Bank Account types",
            "enum": [
              "BANK",
              "CREDITCARD",
              "PAYPAL",
              "NONE",
              ""
            ]
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "TaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          },
          "EnablePaymentsToAccount": {
            "type": "boolean",
            "description": "Boolean – describes whether account can have payments applied to it"
          },
          "ShowInExpenseClaims": {
            "type": "boolean",
            "description": "Boolean – describes whether account code is available for use with expense claims"
          },
          "Class": {
            "type": "string",
            "description": "See Account Class Types",
            "readOnly": true,
            "enum": [
              "ASSET",
              "EQUITY",
              "EXPENSE",
              "LIABILITY",
              "REVENUE"
            ]
          },
          "SystemAccount": {
            "type": "string",
            "description": "If this is a system account then this element is returned. See System Account types. Note that non-system accounts may have this element set as either “” or null.",
            "readOnly": true,
            "enum": [
              "DEBTORS",
              "CREDITORS",
              "BANKCURRENCYGAIN",
              "GST",
              "GSTONIMPORTS",
              "HISTORICAL",
              "REALISEDCURRENCYGAIN",
              "RETAINEDEARNINGS",
              "ROUNDING",
              "TRACKINGTRANSFERS",
              "UNPAIDEXPCLM",
              "UNREALISEDCURRENCYGAIN",
              "WAGEPAYABLES",
              "CISASSETS",
              "CISASSET",
              "CISLABOUR",
              "CISLABOUREXPENSE",
              "CISLABOURINCOME",
              "CISLIABILITY",
              "CISMATERIALS",
              ""
            ]
          },
          "ReportingCode": {
            "type": "string",
            "description": "Shown if set",
            "readOnly": true
          },
          "ReportingCodeName": {
            "type": "string",
            "description": "Shown if set",
            "readOnly": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if an account has an attachment (read only)",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "AddToWatchlist": {
            "type": "boolean",
            "description": "Boolean – describes whether the account is shown in the watchlist widget on the dashboard"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/accounts/"
        }
      },
      "AccountType": {
        "type": "string",
        "description": "See Account Types",
        "enum": [
          "BANK",
          "CURRENT",
          "CURRLIAB",
          "DEPRECIATN",
          "DIRECTCOSTS",
          "EQUITY",
          "EXPENSE",
          "FIXED",
          "INVENTORY",
          "LIABILITY",
          "NONCURRENT",
          "OTHERINCOME",
          "OVERHEADS",
          "PREPAYMENT",
          "REVENUE",
          "SALES",
          "TERMLIAB",
          "PAYGLIABILITY",
          "PAYG",
          "SUPERANNUATIONEXPENSE",
          "SUPERANNUATIONLIABILITY",
          "WAGESEXPENSE"
        ]
      },
      "Attachments": {
        "type": "object",
        "properties": {
          "Attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "AttachmentID": {
            "type": "string",
            "description": "Unique ID for the file",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "FileName": {
            "type": "string",
            "description": "Name of the file",
            "example": "xero-dev.jpg"
          },
          "Url": {
            "type": "string",
            "description": "URL to the file on xero.com",
            "example": "https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg"
          },
          "MimeType": {
            "type": "string",
            "description": "Type of file",
            "example": "image/jpg"
          },
          "ContentLength": {
            "type": "integer",
            "description": "Length of the file content"
          },
          "IncludeOnline": {
            "type": "boolean",
            "description": "Include the file with the online invoice"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/attachments/"
        }
      },
      "BankTransactions": {
        "type": "object",
        "properties": {
          "BankTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankTransaction"
            }
          }
        },
        "x-isObjectArray": true
      },
      "BankTransaction": {
        "required": [
          "BankAccount",
          "LineItems",
          "Type"
        ],
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "See Bank Transaction Types",
            "enum": [
              "RECEIVE",
              "RECEIVE-OVERPAYMENT",
              "RECEIVE-PREPAYMENT",
              "SPEND",
              "SPEND-OVERPAYMENT",
              "SPEND-PREPAYMENT",
              "RECEIVE-TRANSFER",
              "SPEND-TRANSFER"
            ]
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "LineItems": {
            "type": "array",
            "description": "See LineItems",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "BankAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "IsReconciled": {
            "type": "boolean",
            "description": "Boolean to show if transaction is reconciled"
          },
          "Date": {
            "type": "string",
            "description": "Date of transaction – YYYY-MM-DD",
            "x-is-msdate": true
          },
          "Reference": {
            "type": "string",
            "description": "Reference for the transaction. Only supported for SPEND and RECEIVE transactions."
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "CurrencyRate": {
            "type": "number",
            "description": "Exchange rate to base currency when money is spent or received. e.g.0.7500 Only used for bank transactions in non base currency. If this isn’t specified for non base currency accounts then either the user-defined rate (preference) or the XE.com day rate will be used. Setting currency is only supported on overpayments.",
            "format": "double",
            "x-is-money": true
          },
          "Url": {
            "type": "string",
            "description": "URL link to a source document – shown as “Go to App Name”"
          },
          "Status": {
            "type": "string",
            "description": "See Bank Transaction Status Codes",
            "enum": [
              "AUTHORISED",
              "DELETED",
              "VOIDED"
            ]
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "SubTotal": {
            "type": "number",
            "description": "Total of bank transaction excluding taxes",
            "format": "double",
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "Total tax on bank transaction",
            "format": "double",
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "Total of bank transaction tax inclusive",
            "format": "double",
            "x-is-money": true
          },
          "BankTransactionID": {
            "type": "string",
            "description": "Xero generated unique identifier for bank transaction",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "PrepaymentID": {
            "type": "string",
            "description": "Xero generated unique identifier for a Prepayment. This will be returned on BankTransactions with a Type of SPEND-PREPAYMENT or RECEIVE-PREPAYMENT",
            "format": "uuid",
            "readOnly": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "OverpaymentID": {
            "type": "string",
            "description": "Xero generated unique identifier for an Overpayment. This will be returned on BankTransactions with a Type of SPEND-OVERPAYMENT or RECEIVE-OVERPAYMENT",
            "format": "uuid",
            "readOnly": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "Boolean to indicate if a bank transaction has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/banktransactions/"
        }
      },
      "LineAmountTypes": {
        "type": "string",
        "description": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
        "enum": [
          "Exclusive",
          "Inclusive",
          "NoTax"
        ]
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "LineItemID": {
            "type": "string",
            "description": "LineItem unique ID",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "Description": {
            "type": "string",
            "description": "Description needs to be at least 1 char long. A line item with just a description (i.e no unit amount or quantity) can be created by specifying just a <Description> element that contains at least 1 character"
          },
          "Quantity": {
            "type": "number",
            "description": "LineItem Quantity",
            "format": "double",
            "x-is-money": true
          },
          "UnitAmount": {
            "type": "number",
            "description": "LineItem Unit Amount",
            "format": "double",
            "x-is-money": true
          },
          "ItemCode": {
            "type": "string",
            "description": "See Items"
          },
          "AccountCode": {
            "type": "string",
            "description": "See Accounts"
          },
          "TaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          },
          "TaxAmount": {
            "type": "number",
            "description": "The tax amount is auto calculated as a percentage of the line amount (see below) based on the tax rate. This value can be overriden if the calculated <TaxAmount> is not correct.",
            "format": "double",
            "x-is-money": true
          },
          "LineAmount": {
            "type": "number",
            "description": "If you wish to omit either of the <Quantity> or <UnitAmount> you can provide a LineAmount and Xero will calculate the missing amount for you. The line amount reflects the discounted price if a DiscountRate has been used . i.e LineAmount = Quantity * Unit Amount * ((100 – DiscountRate)/100)",
            "format": "double",
            "x-is-money": true
          },
          "Tracking": {
            "type": "array",
            "description": "Optional Tracking Category – see Tracking.  Any LineItem can have a  maximum of 2 <TrackingCategory> elements.",
            "items": {
              "$ref": "#/components/schemas/LineItemTracking"
            }
          },
          "DiscountRate": {
            "type": "number",
            "description": "Percentage discount being applied to a line item (only supported on  ACCREC invoices – ACC PAY invoices and credit notes in Xero do not support discounts",
            "format": "double",
            "x-is-money": true
          },
          "DiscountAmount": {
            "type": "number",
            "description": "Discount amount being applied to a line item. Only supported on ACCREC invoices - ACCPAY invoices and credit notes in Xero do not support discounts.",
            "format": "double",
            "x-is-money": true
          },
          "RepeatingInvoiceID": {
            "type": "string",
            "description": "The Xero identifier for a Repeating Invoice",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/invoices#post"
        }
      },
      "LineItemTracking": {
        "type": "object",
        "properties": {
          "TrackingCategoryID": {
            "type": "string",
            "description": "The Xero identifier for a tracking category",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "TrackingOptionID": {
            "type": "string",
            "description": "The Xero identifier for a tracking category option",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "Name": {
            "maxLength": 100,
            "type": "string",
            "description": "The name of the tracking category",
            "example": "Region"
          },
          "Option": {
            "type": "string",
            "description": "See Tracking Options",
            "example": "North"
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/invoices#post"
        }
      },
      "BankTransfers": {
        "type": "object",
        "properties": {
          "BankTransfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankTransfer"
            }
          }
        },
        "x-isObjectArray": true
      },
      "BankTransfer": {
        "required": [
          "Amount",
          "FromBankAccount",
          "ToBankAccount"
        ],
        "type": "object",
        "properties": {
          "FromBankAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "ToBankAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "Amount": {
            "type": "number",
            "description": "amount of the transaction",
            "format": "double",
            "x-is-money": true
          },
          "Date": {
            "type": "string",
            "description": "The date of the Transfer YYYY-MM-DD",
            "x-is-msdate": true
          },
          "BankTransferID": {
            "type": "string",
            "description": "The identifier of the Bank Transfer",
            "format": "uuid",
            "readOnly": true
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "FromBankTransactionID": {
            "type": "string",
            "description": "The Bank Transaction ID for the source account",
            "format": "uuid",
            "readOnly": true
          },
          "ToBankTransactionID": {
            "type": "string",
            "description": "The Bank Transaction ID for the destination account",
            "format": "uuid",
            "readOnly": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "Boolean to indicate if a Bank Transfer has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "CreatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of creation date of bank transfer",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/bank-transfers/"
        }
      },
      "BatchPayments": {
        "type": "object",
        "properties": {
          "BatchPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchPayment"
            }
          }
        },
        "x-isObjectArray": true
      },
      "BatchPayment": {
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/Account"
          },
          "Reference": {
            "maxLength": 12,
            "type": "string",
            "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero."
          },
          "Particulars": {
            "maxLength": 12,
            "type": "string",
            "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero."
          },
          "Code": {
            "maxLength": 12,
            "type": "string",
            "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero."
          },
          "Details": {
            "type": "string",
            "description": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18"
          },
          "Narrative": {
            "maxLength": 18,
            "type": "string",
            "description": "(UK Only) Only shows on the statement line in Xero. Max length =18"
          },
          "BatchPaymentID": {
            "type": "string",
            "description": "The Xero generated unique identifier for the bank transaction (read-only)",
            "format": "uuid",
            "readOnly": true
          },
          "DateString": {
            "type": "string",
            "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06"
          },
          "Date": {
            "type": "string",
            "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
            "x-is-msdate": true
          },
          "Amount": {
            "type": "number",
            "description": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00",
            "format": "double",
            "x-is-money": true
          },
          "Payments": {
            "type": "array",
            "description": "An array of payments",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "Type": {
            "type": "string",
            "description": "PAYBATCH for bill payments or RECBATCH for sales invoice payments (read-only)",
            "readOnly": true,
            "enum": [
              "PAYBATCH",
              "RECBATCH"
            ]
          },
          "Status": {
            "type": "string",
            "description": "AUTHORISED or DELETED (read-only). New batch payments will have a status of AUTHORISED. It is not possible to delete batch payments via the API.",
            "readOnly": true,
            "enum": [
              "AUTHORISED",
              "DELETED"
            ]
          },
          "TotalAmount": {
            "type": "string",
            "description": "The total of the payments that make up the batch (read-only)",
            "readOnly": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of last update to the payment",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "IsReconciled": {
            "type": "string",
            "description": "Booelan that tells you if the batch payment has been reconciled (read-only)",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/BatchPayments/"
        }
      },
      "BatchPaymentDetails": {
        "properties": {
          "BankAccountNumber": {
            "type": "string",
            "description": "Bank account number for use with Batch Payments",
            "example": "123-456-1111111"
          },
          "BankAccountName": {
            "type": "string",
            "description": "Name of bank for use with Batch Payments",
            "example": "ACME Bank"
          },
          "Details": {
            "maxLength": 18,
            "type": "string",
            "description": "(Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction. They will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement imported into Xero. Maximum field length = 18",
            "example": "Hello World"
          },
          "Code": {
            "maxLength": 12,
            "type": "string",
            "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
            "example": "ABC"
          },
          "Reference": {
            "maxLength": 12,
            "type": "string",
            "description": "(NZ Only) Optional references for the batch payment transaction. It will also show with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the detail may also show on the bank statement you import into Xero.",
            "example": "Foobar"
          }
        },
        "description": "Bank details for use on a batch payment stored with each contact",
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/Contact/"
        }
      },
      "BrandingThemes": {
        "type": "object",
        "properties": {
          "BrandingThemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandingTheme"
            }
          }
        },
        "x-isObjectArray": true
      },
      "BrandingTheme": {
        "type": "object",
        "properties": {
          "BrandingThemeID": {
            "type": "string",
            "description": "Xero identifier",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "description": "Name of branding theme"
          },
          "LogoUrl": {
            "type": "string",
            "description": "The location of the image file used as the logo on this branding theme"
          },
          "Type": {
            "type": "string",
            "description": "Always INVOICE",
            "enum": [
              "INVOICE"
            ]
          },
          "SortOrder": {
            "type": "integer",
            "description": "Integer – ranked order of branding theme. The default branding theme has a value of 0"
          },
          "CreatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of creation date of branding theme",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/branding-themes/"
        }
      },
      "PaymentServices": {
        "type": "object",
        "properties": {
          "PaymentServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentService"
            }
          }
        },
        "x-isObjectArray": true
      },
      "PaymentService": {
        "properties": {
          "PaymentServiceID": {
            "type": "string",
            "description": "Xero identifier",
            "format": "uuid"
          },
          "PaymentServiceName": {
            "type": "string",
            "description": "Name of payment service"
          },
          "PaymentServiceUrl": {
            "type": "string",
            "description": "The custom payment URL"
          },
          "PayNowText": {
            "type": "string",
            "description": "The text displayed on the Pay Now button in Xero Online Invoicing. If this is not set it will default to Pay by credit card"
          },
          "PaymentServiceType": {
            "type": "string",
            "description": "This will always be CUSTOM for payment services created via the API."
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/branding-themes/"
        }
      },
      "Contacts": {
        "type": "object",
        "properties": {
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Contact": {
        "type": "object",
        "properties": {
          "ContactID": {
            "type": "string",
            "description": "Xero identifier",
            "format": "uuid"
          },
          "ContactNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "This can be updated via the API only i.e. This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50). If the Contact Number is used, this is displayed as Contact Code in the Contacts UI in Xero."
          },
          "AccountNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "A user defined account number. This can be updated via the API and the Xero UI (max length = 50)"
          },
          "ContactStatus": {
            "type": "string",
            "description": "Current status of a contact – see contact status types",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "GDPRREQUEST"
            ]
          },
          "Name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full name of contact/organisation (max length = 255)"
          },
          "FirstName": {
            "maxLength": 255,
            "type": "string",
            "description": "First name of contact person (max length = 255)"
          },
          "LastName": {
            "maxLength": 255,
            "type": "string",
            "description": "Last name of contact person (max length = 255)"
          },
          "EmailAddress": {
            "maxLength": 255,
            "type": "string",
            "description": "Email address of contact person (umlauts not supported) (max length  = 255)"
          },
          "SkypeUserName": {
            "type": "string",
            "description": "Skype user name of contact"
          },
          "ContactPersons": {
            "type": "array",
            "description": "See contact persons",
            "items": {
              "$ref": "#/components/schemas/ContactPerson"
            }
          },
          "BankAccountDetails": {
            "type": "string",
            "description": "Bank account number of contact"
          },
          "TaxNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Tax number of contact – this is also known as the ABN (Australia), GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and global) in the Xero UI depending on which regionalized version of Xero you are using (max length = 50)"
          },
          "AccountsReceivableTaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          },
          "AccountsPayableTaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          },
          "Addresses": {
            "type": "array",
            "description": "Store certain address types for a contact – see address types",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "Phones": {
            "type": "array",
            "description": "Store certain phone types for a contact – see phone types",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "IsSupplier": {
            "type": "boolean",
            "description": "true or false – Boolean that describes if a contact that has any AP  invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts payable invoice is generated against this contact."
          },
          "IsCustomer": {
            "type": "boolean",
            "description": "true or false – Boolean that describes if a contact has any AR invoices entered against them. Cannot be set via PUT or POST – it is automatically set when an accounts receivable invoice is generated against this contact."
          },
          "DefaultCurrency": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "XeroNetworkKey": {
            "type": "string",
            "description": "Store XeroNetworkKey for contacts."
          },
          "SalesDefaultAccountCode": {
            "type": "string",
            "description": "The default sales account code for contacts"
          },
          "PurchasesDefaultAccountCode": {
            "type": "string",
            "description": "The default purchases account code for contacts"
          },
          "SalesTrackingCategories": {
            "type": "array",
            "description": "The default sales tracking categories for contacts",
            "items": {
              "$ref": "#/components/schemas/SalesTrackingCategory"
            }
          },
          "PurchasesTrackingCategories": {
            "type": "array",
            "description": "The default purchases tracking categories for contacts",
            "items": {
              "$ref": "#/components/schemas/SalesTrackingCategory"
            }
          },
          "TrackingCategoryName": {
            "type": "string",
            "description": "The name of the Tracking Category assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
          },
          "TrackingCategoryOption": {
            "type": "string",
            "description": "The name of the Tracking Option assigned to the contact under SalesTrackingCategories and PurchasesTrackingCategories"
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/PaymentTerm"
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of last update to contact",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "ContactGroups": {
            "type": "array",
            "description": "Displays which contact groups a contact is included in",
            "items": {
              "$ref": "#/components/schemas/ContactGroup"
            }
          },
          "Website": {
            "type": "string",
            "description": "Website address for contact (read only)",
            "readOnly": true
          },
          "BrandingTheme": {
            "$ref": "#/components/schemas/BrandingTheme"
          },
          "BatchPayments": {
            "$ref": "#/components/schemas/BatchPaymentDetails"
          },
          "Discount": {
            "type": "number",
            "description": "The default discount rate for the contact (read only)",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "Balances": {
            "$ref": "#/components/schemas/Balances"
          },
          "Attachments": {
            "type": "array",
            "description": "Displays array of attachments from the API",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "A boolean to indicate if a contact has an attachment",
            "example": false,
            "default": false
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays validation errors returned from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "HasValidationErrors": {
            "type": "boolean",
            "description": "A boolean to indicate if a contact has an validation errors",
            "example": false,
            "default": false
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "Status of object"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/contacts/"
        }
      },
      "Balances": {
        "type": "object",
        "properties": {
          "AccountsReceivable": {
            "$ref": "#/components/schemas/AccountsReceivable"
          },
          "AccountsPayable": {
            "$ref": "#/components/schemas/AccountsPayable"
          }
        },
        "description": "The raw AccountsReceivable(sales invoices) and AccountsPayable(bills) outstanding and overdue amounts, not converted to base currency (read only)"
      },
      "AccountsReceivable": {
        "type": "object",
        "properties": {
          "Outstanding": {
            "type": "number",
            "format": "double",
            "x-is-money": true
          },
          "Overdue": {
            "type": "number",
            "format": "double",
            "x-is-money": true
          }
        }
      },
      "AccountsPayable": {
        "type": "object",
        "properties": {
          "Outstanding": {
            "type": "number",
            "format": "double",
            "x-is-money": true
          },
          "Overdue": {
            "type": "number",
            "format": "double",
            "x-is-money": true
          }
        }
      },
      "CISSettings": {
        "type": "object",
        "properties": {
          "CISSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CISSetting"
            }
          }
        },
        "x-isObjectArray": true
      },
      "CISSetting": {
        "properties": {
          "CISEnabled": {
            "type": "boolean",
            "description": "Boolean that describes if the contact is a CIS Subcontractor"
          },
          "Rate": {
            "type": "integer",
            "description": "CIS Deduction rate for the contact if he is a subcontractor. If the contact is not CISEnabled, then the rate is not returned"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/contacts/"
        }
      },
      "CISOrgSetting": {
        "properties": {
          "CISContractorEnabled": {
            "type": "boolean",
            "description": "true or false - Boolean that describes if the organisation is a CIS Contractor"
          },
          "CISSubContractorEnabled": {
            "type": "boolean",
            "description": "true or false - Boolean that describes if the organisation is a CIS SubContractor"
          },
          "Rate": {
            "type": "integer",
            "description": "CIS Deduction rate for the organisation"
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/organisation"
        }
      },
      "ContactPerson": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "description": "First name of person"
          },
          "LastName": {
            "type": "string",
            "description": "Last name of person"
          },
          "EmailAddress": {
            "type": "string",
            "description": "Email address of person"
          },
          "IncludeInEmails": {
            "type": "boolean",
            "description": "boolean to indicate whether contact should be included on emails with invoices etc."
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/contacts/"
        }
      },
      "ContactGroups": {
        "type": "object",
        "properties": {
          "ContactGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactGroup"
            }
          }
        },
        "x-isObjectArray": true
      },
      "ContactGroup": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "The Name of the contact group. Required when creating a new contact  group"
          },
          "Status": {
            "type": "string",
            "description": "The Status of a contact group. To delete a contact group update the status to DELETED. Only contact groups with a status of ACTIVE are returned on GETs.",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "ContactGroupID": {
            "type": "string",
            "description": "The Xero identifier for an contact group – specified as a string following the endpoint name. e.g. /297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid"
          },
          "Contacts": {
            "type": "array",
            "description": "The ContactID and Name of Contacts in a contact group. Returned on GETs when the ContactGroupID is supplied in the URL.",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/contactgroups/"
        }
      },
      "RequestEmpty": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "description": "Need at least one field to create an empty JSON payload"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/invoice/"
        }
      },
      "CreditNotes": {
        "type": "object",
        "properties": {
          "CreditNotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditNote"
            }
          }
        },
        "x-isObjectArray": true
      },
      "CreditNote": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "See Credit Note Types",
            "enum": [
              "ACCPAYCREDIT",
              "ACCRECCREDIT"
            ]
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "Date": {
            "type": "string",
            "description": "The date the credit note is issued YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation",
            "x-is-msdate": true
          },
          "Status": {
            "type": "string",
            "description": "See Credit Note Status Codes",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "DELETED",
              "AUTHORISED",
              "PAID",
              "VOIDED"
            ]
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "LineItems": {
            "type": "array",
            "description": "See Invoice Line Items",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "SubTotal": {
            "type": "number",
            "description": "The subtotal of the credit note excluding taxes",
            "format": "double",
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "The total tax on the credit note",
            "format": "double",
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "The total of the Credit Note(subtotal + total tax)",
            "format": "double",
            "x-is-money": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of last update to the credit note",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "FullyPaidOnDate": {
            "type": "string",
            "description": "Date when credit note was fully paid(UTC format)",
            "x-is-msdate": true
          },
          "CreditNoteID": {
            "type": "string",
            "description": "Xero generated unique identifier",
            "format": "uuid"
          },
          "CreditNoteNumber": {
            "type": "string",
            "description": "ACCRECCREDIT – Unique alpha numeric code identifying credit note (when missing will auto-generate from your Organisation Invoice Settings)"
          },
          "Reference": {
            "type": "string",
            "description": "ACCRECCREDIT only – additional reference number"
          },
          "SentToContact": {
            "type": "boolean",
            "description": "boolean to indicate if a credit note has been sent to a contact via  the Xero app (currently read only)",
            "readOnly": true
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used",
            "format": "double",
            "x-is-money": true
          },
          "RemainingCredit": {
            "type": "number",
            "description": "The remaining credit balance on the Credit Note",
            "format": "double",
            "x-is-money": true
          },
          "Allocations": {
            "type": "array",
            "description": "See Allocations",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          },
          "AppliedAmount": {
            "type": "number",
            "description": "The amount of applied to an invoice",
            "format": "double",
            "example": 2
          },
          "Payments": {
            "type": "array",
            "description": "See Payments",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "BrandingThemeID": {
            "type": "string",
            "description": "See BrandingThemes",
            "format": "uuid"
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if a credit note has an attachment",
            "example": false,
            "default": false
          },
          "HasErrors": {
            "type": "boolean",
            "description": "A boolean to indicate if a credit note has an validation errors",
            "example": false,
            "default": false
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/credit-notes/"
        }
      },
      "Allocations": {
        "type": "object",
        "properties": {
          "Allocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Allocation": {
        "required": [
          "Amount",
          "Date",
          "Invoice"
        ],
        "type": "object",
        "properties": {
          "Invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "Overpayment": {
            "$ref": "#/components/schemas/Overpayment"
          },
          "Prepayment": {
            "$ref": "#/components/schemas/Prepayment"
          },
          "CreditNote": {
            "$ref": "#/components/schemas/CreditNote"
          },
          "Amount": {
            "type": "number",
            "description": "the amount being applied to the invoice",
            "format": "double",
            "x-is-money": true
          },
          "Date": {
            "type": "string",
            "description": "the date the allocation is applied YYYY-MM-DD.",
            "x-is-msdate": true
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/prepayments/"
        }
      },
      "Currencies": {
        "type": "object",
        "properties": {
          "Currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Currency": {
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "Description": {
            "type": "string",
            "description": "Name of Currency"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/currencies/"
        }
      },
      "CurrencyCode": {
        "type": "string",
        "description": "3 letter alpha code for the currency – see list of currency codes",
        "enum": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "YER",
          "ZAR",
          "ZMW",
          "ZMK",
          "ZWD",
          ""
        ],
        "x-enum-varnames": [
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTN",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ERN",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SLL",
          "SOS",
          "SPL",
          "SRD",
          "STN",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMT",
          "TND",
          "TOP",
          "_TRY",
          "TTD",
          "TVD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XDR",
          "XOF",
          "XPF",
          "YER",
          "ZAR",
          "ZMW",
          "ZMK",
          "ZWD",
          "_EMPTY"
        ]
      },
      "Employees": {
        "type": "object",
        "properties": {
          "Employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employee"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Employee": {
        "type": "object",
        "properties": {
          "EmployeeID": {
            "type": "string",
            "description": "The Xero identifier for an employee e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid"
          },
          "Status": {
            "type": "string",
            "description": "Current status of an employee – see contact status types",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "GDPRREQUEST",
              "DELETED"
            ]
          },
          "FirstName": {
            "maxLength": 255,
            "type": "string",
            "description": "First name of an employee (max length = 255)"
          },
          "LastName": {
            "maxLength": 255,
            "type": "string",
            "description": "Last name of an employee (max length = 255)"
          },
          "ExternalLink": {
            "$ref": "#/components/schemas/ExternalLink"
          },
          "UpdatedDateUTC": {
            "type": "string",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status",
            "example": "ERROR"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/employees/"
        }
      },
      "ExpenseClaims": {
        "type": "object",
        "properties": {
          "ExpenseClaims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseClaim"
            }
          }
        },
        "x-isObjectArray": true
      },
      "ExpenseClaim": {
        "type": "object",
        "properties": {
          "ExpenseClaimID": {
            "type": "string",
            "description": "Xero generated unique identifier for an expense claim",
            "format": "uuid"
          },
          "Status": {
            "type": "string",
            "description": "Current status of an expense claim – see status types",
            "enum": [
              "SUBMITTED",
              "AUTHORISED",
              "PAID",
              "VOIDED",
              "DELETED"
            ]
          },
          "Payments": {
            "type": "array",
            "description": "See Payments",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "Receipts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Receipt"
            }
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "Total": {
            "type": "number",
            "description": "The total of an expense claim being paid",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "AmountDue": {
            "type": "number",
            "description": "The amount due to be paid for an expense claim",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "AmountPaid": {
            "type": "number",
            "description": "The amount still to pay for an expense claim",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "PaymentDueDate": {
            "type": "string",
            "description": "The date when the expense claim is due to be paid YYYY-MM-DD",
            "readOnly": true,
            "x-is-msdate": true
          },
          "ReportingDate": {
            "type": "string",
            "description": "The date the expense claim will be reported in Xero YYYY-MM-DD",
            "readOnly": true,
            "x-is-msdate": true
          },
          "ReceiptID": {
            "type": "string",
            "description": "The Xero identifier for the Receipt e.g.  e59a2c7f-1306-4078-a0f3-73537afcbba9",
            "format": "uuid"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/expense-claims/"
        }
      },
      "HistoryRecords": {
        "type": "object",
        "properties": {
          "HistoryRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoryRecord"
            }
          }
        },
        "x-isObjectArray": true
      },
      "HistoryRecord": {
        "type": "object",
        "properties": {
          "Details": {
            "type": "string",
            "description": "details"
          },
          "Changes": {
            "type": "string",
            "description": "Name of branding theme"
          },
          "User": {
            "type": "string",
            "description": "has a value of 0"
          },
          "DateUTC": {
            "type": "string",
            "description": "UTC timestamp of creation date of branding theme",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/history-and-notes"
        }
      },
      "Invoices": {
        "type": "object",
        "properties": {
          "Invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "See Invoice Types",
            "enum": [
              "ACCPAY",
              "ACCPAYCREDIT",
              "APOVERPAYMENT",
              "APPREPAYMENT",
              "ACCREC",
              "ACCRECCREDIT",
              "AROVERPAYMENT",
              "ARPREPAYMENT"
            ]
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "LineItems": {
            "type": "array",
            "description": "See LineItems",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "Date": {
            "type": "string",
            "description": "Date invoice was issued – YYYY-MM-DD. If the Date element is not specified it will default to the current date based on the timezone setting of the organisation",
            "x-is-msdate": true
          },
          "DueDate": {
            "type": "string",
            "description": "Date invoice is due – YYYY-MM-DD",
            "x-is-msdate": true
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "InvoiceNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "ACCREC – Unique alpha numeric code identifying invoice (when missing will auto-generate from your Organisation Invoice Settings) (max length = 255)"
          },
          "Reference": {
            "maxLength": 255,
            "type": "string",
            "description": "ACCREC only – additional reference number (max length = 255)"
          },
          "BrandingThemeID": {
            "type": "string",
            "description": "See BrandingThemes",
            "format": "uuid"
          },
          "Url": {
            "type": "string",
            "description": "URL link to a source document – shown as “Go to [appName]” in the Xero app"
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate for a multicurrency invoice. If no rate is specified, the XE.com day rate is used. (max length = [18].[6])",
            "format": "double",
            "x-is-money": true
          },
          "Status": {
            "type": "string",
            "description": "See Invoice Status Codes",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "DELETED",
              "AUTHORISED",
              "PAID",
              "VOIDED"
            ]
          },
          "SentToContact": {
            "type": "boolean",
            "description": "Boolean to set whether the invoice in the Xero app should be marked as “sent”. This can be set only on invoices that have been approved"
          },
          "ExpectedPaymentDate": {
            "type": "string",
            "description": "Shown on sales invoices (Accounts Receivable) when this has been set",
            "x-is-msdate": true
          },
          "PlannedPaymentDate": {
            "type": "string",
            "description": "Shown on bills (Accounts Payable) when this has been set",
            "x-is-msdate": true
          },
          "CISDeduction": {
            "type": "number",
            "description": "CIS deduction for UK contractors",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "SubTotal": {
            "type": "number",
            "description": "Total of invoice excluding taxes",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "Total tax on invoice",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Total of discounts applied on the invoice line items",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "InvoiceID": {
            "type": "string",
            "description": "Xero generated unique identifier for invoice",
            "format": "uuid"
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if an invoice has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "IsDiscounted": {
            "type": "boolean",
            "description": "boolean to indicate if an invoice has a discount",
            "readOnly": true
          },
          "Payments": {
            "type": "array",
            "description": "See Payments",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "Prepayments": {
            "type": "array",
            "description": "See Prepayments",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Prepayment"
            }
          },
          "Overpayments": {
            "type": "array",
            "description": "See Overpayments",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Overpayment"
            }
          },
          "AmountDue": {
            "type": "number",
            "description": "Amount remaining to be paid on invoice",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "AmountPaid": {
            "type": "number",
            "description": "Sum of payments received for invoice",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "FullyPaidOnDate": {
            "type": "string",
            "description": "The date the invoice was fully paid. Only returned on fully paid invoices",
            "readOnly": true,
            "x-is-msdate": true
          },
          "AmountCredited": {
            "type": "number",
            "description": "Sum of all credit notes, over-payments and pre-payments applied to invoice",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "CreditNotes": {
            "type": "array",
            "description": "Details of credit notes that have been applied to an invoice",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/CreditNote"
            }
          },
          "Attachments": {
            "type": "array",
            "description": "Displays array of attachments from the API",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "HasErrors": {
            "type": "boolean",
            "description": "A boolean to indicate if a invoice has an validation errors",
            "example": false,
            "default": false
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "Warnings": {
            "type": "array",
            "description": "Displays array of warning messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/invoices/"
        }
      },
      "OnlineInvoices": {
        "type": "object",
        "properties": {
          "OnlineInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnlineInvoice"
            }
          }
        },
        "x-isObjectArray": true
      },
      "OnlineInvoice": {
        "type": "object",
        "properties": {
          "OnlineInvoiceUrl": {
            "type": "string",
            "description": "the URL to an online invoice"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/invoices/"
        }
      },
      "InvoiceReminders": {
        "type": "object",
        "properties": {
          "InvoiceReminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceReminder"
            }
          }
        },
        "x-isObjectArray": true
      },
      "InvoiceReminder": {
        "type": "object",
        "properties": {
          "Enabled": {
            "type": "boolean",
            "description": "setting for on or off"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/invoice-reminders/"
        }
      },
      "Items": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Item": {
        "required": [
          "Code"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 30,
            "type": "string",
            "description": "User defined item code (max length = 30)"
          },
          "InventoryAssetAccountCode": {
            "type": "string",
            "description": "The inventory asset account for the item. The account must be of type INVENTORY. The  COGSAccountCode in PurchaseDetails is also required to create a tracked item"
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "The name of the item (max length = 50)"
          },
          "IsSold": {
            "type": "boolean",
            "description": "Boolean value, defaults to true. When IsSold is true the item will be available on sales transactions in the Xero UI. If IsSold is updated to false then Description and SalesDetails values will be nulled."
          },
          "IsPurchased": {
            "type": "boolean",
            "description": "Boolean value, defaults to true. When IsPurchased is true the item is available for purchase transactions in the Xero UI. If IsPurchased is updated to false then PurchaseDescription and PurchaseDetails values will be nulled."
          },
          "Description": {
            "maxLength": 4000,
            "type": "string",
            "description": "The sales description of the item (max length = 4000)"
          },
          "PurchaseDescription": {
            "maxLength": 4000,
            "type": "string",
            "description": "The purchase description of the item (max length = 4000)"
          },
          "PurchaseDetails": {
            "$ref": "#/components/schemas/Purchase"
          },
          "SalesDetails": {
            "$ref": "#/components/schemas/Purchase"
          },
          "IsTrackedAsInventory": {
            "type": "boolean",
            "description": "True for items that are tracked as inventory. An item will be tracked as inventory if the InventoryAssetAccountCode and COGSAccountCode are set."
          },
          "TotalCostPool": {
            "type": "number",
            "description": "The value of the item on hand. Calculated using average cost accounting.",
            "format": "double",
            "x-is-money": true
          },
          "QuantityOnHand": {
            "type": "number",
            "description": "The quantity of the item on hand",
            "format": "double",
            "x-is-money": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date in UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "ItemID": {
            "type": "string",
            "description": "The Xero identifier for an Item",
            "format": "uuid"
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "Status of object"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/items/"
        }
      },
      "Purchase": {
        "type": "object",
        "properties": {
          "UnitPrice": {
            "type": "number",
            "description": "Unit Price of the item. By default UnitPrice is rounded to two decimal places. You can use 4 decimal places by adding the unitdp=4 querystring parameter to your request.",
            "format": "double",
            "x-is-money": true
          },
          "AccountCode": {
            "type": "string",
            "description": "Default account code to be used for purchased/sale. Not applicable to the purchase details of tracked items"
          },
          "COGSAccountCode": {
            "type": "string",
            "description": "Cost of goods sold account. Only applicable to the purchase details of tracked items."
          },
          "TaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/items/"
        }
      },
      "Journals": {
        "type": "object",
        "properties": {
          "Journals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Journal"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Journal": {
        "type": "object",
        "properties": {
          "JournalID": {
            "type": "string",
            "description": "Xero identifier",
            "format": "uuid"
          },
          "JournalDate": {
            "type": "string",
            "description": "Date the journal was posted",
            "x-is-msdate": true
          },
          "JournalNumber": {
            "type": "integer",
            "description": "Xero generated journal number"
          },
          "CreatedDateUTC": {
            "type": "string",
            "description": "Created date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "Reference": {
            "type": "string",
            "description": "reference field for additional indetifying information"
          },
          "SourceID": {
            "type": "string",
            "description": "The identifier for the source transaction (e.g. InvoiceID)",
            "format": "uuid"
          },
          "SourceType": {
            "type": "string",
            "description": "The journal source type. The type of transaction that created the journal",
            "enum": [
              "ACCREC",
              "ACCPAY",
              "ACCRECCREDIT",
              "ACCPAYCREDIT",
              "ACCRECPAYMENT",
              "ACCPAYPAYMENT",
              "ARCREDITPAYMENT",
              "APCREDITPAYMENT",
              "CASHREC",
              "CASHPAID",
              "TRANSFER",
              "ARPREPAYMENT",
              "APPREPAYMENT",
              "AROVERPAYMENT",
              "APOVERPAYMENT",
              "EXPCLAIM",
              "EXPPAYMENT",
              "MANJOURNAL",
              "PAYSLIP",
              "WAGEPAYABLE",
              "INTEGRATEDPAYROLLPE",
              "INTEGRATEDPAYROLLPT",
              "EXTERNALSPENDMONEY",
              "INTEGRATEDPAYROLLPTPAYMENT",
              "INTEGRATEDPAYROLLCN"
            ]
          },
          "JournalLines": {
            "type": "array",
            "description": "See JournalLines",
            "items": {
              "$ref": "#/components/schemas/JournalLine"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/journals/"
        }
      },
      "JournalLine": {
        "type": "object",
        "properties": {
          "JournalLineID": {
            "type": "string",
            "description": "Xero identifier for Journal",
            "format": "uuid",
            "example": "7be9db36-3598-4755-ba5c-c2dbc8c4a7a2"
          },
          "AccountID": {
            "type": "string",
            "description": "See Accounts",
            "format": "uuid",
            "example": "ceef66a5-a545-413b-9312-78a53caadbc4"
          },
          "AccountCode": {
            "type": "string",
            "description": "See Accounts",
            "example": "90.0"
          },
          "AccountType": {
            "$ref": "#/components/schemas/AccountType"
          },
          "AccountName": {
            "type": "string",
            "description": "See AccountCodes",
            "example": "Checking Account"
          },
          "Description": {
            "type": "string",
            "description": "The description from the source transaction line item. Only returned if populated.",
            "example": "My business checking account"
          },
          "NetAmount": {
            "type": "number",
            "description": "Net amount of journal line. This will be a positive value for a debit and negative for a credit",
            "format": "double",
            "example": 4130.98,
            "x-is-money": true
          },
          "GrossAmount": {
            "type": "number",
            "description": "Gross amount of journal line (NetAmount + TaxAmount).",
            "format": "double",
            "example": 4130.98,
            "x-is-money": true
          },
          "TaxAmount": {
            "type": "number",
            "description": "Total tax on a journal line",
            "format": "double",
            "readOnly": true,
            "example": 0,
            "x-is-money": true
          },
          "TaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          },
          "TaxName": {
            "type": "string",
            "description": "see TaxRates",
            "example": "Tax Exempt"
          },
          "TrackingCategories": {
            "type": "array",
            "description": "Optional Tracking Category – see Tracking. Any JournalLine can have a maximum of 2 <TrackingCategory> elements.",
            "items": {
              "$ref": "#/components/schemas/TrackingCategory"
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/journals#JournalLines"
        }
      },
      "LinkedTransactions": {
        "type": "object",
        "properties": {
          "LinkedTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedTransaction"
            }
          }
        },
        "x-isObjectArray": true
      },
      "LinkedTransaction": {
        "type": "object",
        "properties": {
          "SourceTransactionID": {
            "type": "string",
            "description": "Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice",
            "format": "uuid"
          },
          "SourceLineItemID": {
            "type": "string",
            "description": "The line item identifier from the source transaction.",
            "format": "uuid"
          },
          "ContactID": {
            "type": "string",
            "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
            "format": "uuid"
          },
          "TargetTransactionID": {
            "type": "string",
            "description": "Filter by the TargetTransactionID. Get all the linked transactions  allocated to a particular ACCREC invoice",
            "format": "uuid"
          },
          "TargetLineItemID": {
            "type": "string",
            "description": "The line item identifier from the target transaction. It is possible  to link multiple billable expenses to the same TargetLineItemID.",
            "format": "uuid"
          },
          "LinkedTransactionID": {
            "type": "string",
            "description": "The Xero identifier for an Linked Transaction e.g./LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid"
          },
          "Status": {
            "type": "string",
            "description": "Filter by the combination of ContactID and Status. Get all the linked transactions that have been assigned to a particular customer and have a particular status e.g. GET /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.",
            "enum": [
              "APPROVED",
              "DRAFT",
              "ONDRAFT",
              "BILLED",
              "VOIDED"
            ]
          },
          "Type": {
            "type": "string",
            "description": "This will always be BILLABLEEXPENSE. More types may be added in future.",
            "enum": [
              "BILLABLEEXPENSE"
            ]
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "The last modified date in UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "SourceTransactionTypeCode": {
            "type": "string",
            "description": "The Type of the source tranasction. This will be ACCPAY if the linked transaction was created from an invoice and SPEND if it was created from a bank transaction.",
            "enum": [
              "ACCPAY",
              "SPEND"
            ]
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/linked-transactions/"
        }
      },
      "ManualJournals": {
        "type": "object",
        "properties": {
          "ManualJournals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManualJournal"
            }
          }
        },
        "x-isObjectArray": true
      },
      "ManualJournal": {
        "required": [
          "Narration"
        ],
        "type": "object",
        "properties": {
          "Narration": {
            "type": "string",
            "description": "Description of journal being posted"
          },
          "JournalLines": {
            "type": "array",
            "description": "See JournalLines",
            "items": {
              "$ref": "#/components/schemas/ManualJournalLine"
            }
          },
          "Date": {
            "type": "string",
            "description": "Date journal was posted – YYYY-MM-DD",
            "x-is-msdate": true
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "Status": {
            "type": "string",
            "description": "See Manual Journal Status Codes",
            "enum": [
              "DRAFT",
              "POSTED",
              "DELETED",
              "VOIDED",
              "ARCHIVED"
            ]
          },
          "Url": {
            "type": "string",
            "description": "Url link to a source document – shown as “Go to [appName]” in the Xero app"
          },
          "ShowOnCashBasisReports": {
            "type": "boolean",
            "description": "Boolean – default is true if not specified"
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "Boolean to indicate if a manual journal has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "ManualJournalID": {
            "type": "string",
            "description": "The Xero identifier for a Manual Journal",
            "format": "uuid"
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status",
            "example": "ERROR"
          },
          "Warnings": {
            "type": "array",
            "description": "Displays array of warning messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "Attachments": {
            "type": "array",
            "description": "Displays array of attachments from the API",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/manual-journals/"
        }
      },
      "ManualJournalLine": {
        "type": "object",
        "properties": {
          "LineAmount": {
            "type": "number",
            "description": "total for line. Debits are positive, credits are negative value",
            "format": "double",
            "example": -2569,
            "x-is-money": true
          },
          "AccountCode": {
            "type": "string",
            "description": "See Accounts",
            "example": "720"
          },
          "AccountID": {
            "type": "string",
            "description": "See Accounts",
            "format": "uuid"
          },
          "Description": {
            "type": "string",
            "description": "Description for journal line",
            "example": "Coded incorrectly Office Equipment should be Computer Equipment"
          },
          "TaxType": {
            "type": "string",
            "description": "The tax type from TaxRates"
          },
          "Tracking": {
            "type": "array",
            "description": "Optional Tracking Category – see Tracking. Any JournalLine can have a maximum of 2 <TrackingCategory> elements.",
            "items": {
              "$ref": "#/components/schemas/TrackingCategory"
            }
          },
          "TaxAmount": {
            "type": "number",
            "description": "The calculated tax amount based on the TaxType and LineAmount",
            "format": "double",
            "readOnly": true,
            "example": 0,
            "x-is-money": true
          },
          "IsBlank": {
            "type": "boolean",
            "description": "is the line blank",
            "example": false
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/manual-journals/"
        }
      },
      "Organisations": {
        "type": "object",
        "properties": {
          "Organisations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "OrganisationID": {
            "type": "string",
            "description": "Unique Xero identifier",
            "format": "uuid",
            "example": "8be9db36-3598-4755-ba5c-c2dbc8c4a7a2"
          },
          "APIKey": {
            "type": "string",
            "description": "Display a unique key used for Xero-to-Xero transactions"
          },
          "Name": {
            "type": "string",
            "description": "Display name of organisation shown in Xero"
          },
          "LegalName": {
            "type": "string",
            "description": "Organisation name shown on Reports"
          },
          "PaysTax": {
            "type": "boolean",
            "description": "Boolean to describe if organisation is registered with a local tax authority i.e. true, false"
          },
          "Version": {
            "type": "string",
            "description": "See Version Types",
            "enum": [
              "AU",
              "NZ",
              "GLOBAL",
              "UK",
              "US",
              "AUONRAMP",
              "NZONRAMP",
              "GLOBALONRAMP",
              "UKONRAMP",
              "USONRAMP"
            ]
          },
          "OrganisationType": {
            "type": "string",
            "description": "Organisation Type",
            "enum": [
              "ACCOUNTING_PRACTICE",
              "COMPANY",
              "CHARITY",
              "CLUB_OR_SOCIETY",
              "LOOK_THROUGH_COMPANY",
              "NOT_FOR_PROFIT",
              "PARTNERSHIP",
              "S_CORPORATION",
              "SELF_MANAGED_SUPERANNUATION_FUND",
              "SOLE_TRADER",
              "SUPERANNUATION_FUND",
              "TRUST"
            ]
          },
          "BaseCurrency": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "CountryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "IsDemoCompany": {
            "type": "boolean",
            "description": "Boolean to describe if organisation is a demo company."
          },
          "OrganisationStatus": {
            "type": "string",
            "description": "Will be set to ACTIVE if you can connect to organisation via the Xero API"
          },
          "RegistrationNumber": {
            "type": "string",
            "description": "Shows for New Zealand, Australian and UK organisations"
          },
          "EmployerIdentificationNumber": {
            "type": "string",
            "description": "Shown if set. US Only."
          },
          "TaxNumber": {
            "type": "string",
            "description": "Shown if set. Displays in the Xero UI as Tax File Number (AU), GST Number (NZ), VAT Number (UK) and Tax ID Number (US & Global)."
          },
          "FinancialYearEndDay": {
            "type": "integer",
            "description": "Calendar day e.g. 0-31"
          },
          "FinancialYearEndMonth": {
            "type": "integer",
            "description": "Calendar Month e.g. 1-12"
          },
          "SalesTaxBasis": {
            "type": "string",
            "description": "The accounting basis used for tax returns. See Sales Tax Basis",
            "enum": [
              "PAYMENTS",
              "INVOICE",
              "NONE",
              "CASH",
              "ACCRUAL",
              "FLATRATECASH",
              "FLATRATEACCRUAL",
              "ACCRUALS"
            ]
          },
          "SalesTaxPeriod": {
            "type": "string",
            "description": "The frequency with which tax returns are processed. See Sales Tax Period",
            "enum": [
              "MONTHLY",
              "QUARTERLY1",
              "QUARTERLY2",
              "QUARTERLY3",
              "ANNUALLY",
              "ONEMONTHS",
              "TWOMONTHS",
              "SIXMONTHS",
              "1MONTHLY",
              "2MONTHLY",
              "3MONTHLY",
              "6MONTHLY",
              "QUARTERLY",
              "YEARLY",
              "NONE"
            ]
          },
          "DefaultSalesTax": {
            "type": "string",
            "description": "The default for LineAmountTypes on sales transactions"
          },
          "DefaultPurchasesTax": {
            "type": "string",
            "description": "The default for LineAmountTypes on purchase transactions"
          },
          "PeriodLockDate": {
            "type": "string",
            "description": "Shown if set. See lock dates",
            "x-is-msdate": true
          },
          "EndOfYearLockDate": {
            "type": "string",
            "description": "Shown if set. See lock dates",
            "x-is-msdate": true
          },
          "CreatedDateUTC": {
            "type": "string",
            "description": "Timestamp when the organisation was created in Xero",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "Timezone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "OrganisationEntityType": {
            "type": "string",
            "description": "Organisation Entity Type",
            "enum": [
              "ACCOUNTING_PRACTICE",
              "COMPANY",
              "CHARITY",
              "CLUB_OR_SOCIETY",
              "LOOK_THROUGH_COMPANY",
              "NOT_FOR_PROFIT",
              "PARTNERSHIP",
              "S_CORPORATION",
              "SELF_MANAGED_SUPERANNUATION_FUND",
              "SOLE_TRADER",
              "SUPERANNUATION_FUND",
              "TRUST"
            ]
          },
          "ShortCode": {
            "type": "string",
            "description": "A unique identifier for the organisation. Potential uses."
          },
          "Class": {
            "type": "string",
            "description": "Organisation Classes describe which plan the Xero organisation is on (e.g. DEMO, TRIAL, PREMIUM)",
            "enum": [
              "DEMO",
              "TRIAL",
              "STARTER",
              "STANDARD",
              "PREMIUM",
              "PREMIUM_20",
              "PREMIUM_50",
              "PREMIUM_100",
              "LEDGER",
              "GST_CASHBOOK",
              "NON_GST_CASHBOOK"
            ]
          },
          "Edition": {
            "type": "string",
            "description": "BUSINESS or PARTNER. Partner edition organisations are sold exclusively through accounting partners and have restricted functionality (e.g. no access to invoicing)",
            "enum": [
              "BUSINESS",
              "PARTNER"
            ]
          },
          "LineOfBusiness": {
            "type": "string",
            "description": "Description of business type as defined in Organisation settings"
          },
          "Addresses": {
            "type": "array",
            "description": "Address details for organisation – see Addresses",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "Phones": {
            "type": "array",
            "description": "Phones details for organisation – see Phones",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "ExternalLinks": {
            "type": "array",
            "description": "Organisation profile links for popular services such as Facebook,Twitter, GooglePlus and LinkedIn. You can also add link to your website here. Shown if Organisation settings  is updated in Xero. See ExternalLinks below",
            "items": {
              "$ref": "#/components/schemas/ExternalLink"
            }
          },
          "PaymentTerms": {
            "$ref": "#/components/schemas/PaymentTerm"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/organisation/"
        }
      },
      "CountryCode": {
        "type": "string",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BR",
          "BS",
          "BT",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GQ",
          "GR",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "XK",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "TimeZone": {
        "type": "string",
        "description": "Timezone specifications",
        "enum": [
          "MOROCCOSTANDARDTIME",
          "UTC",
          "GMTSTANDARDTIME",
          "GREENWICHSTANDARDTIME",
          "WEUROPESTANDARDTIME",
          "CENTRALEUROPESTANDARDTIME",
          "ROMANCESTANDARDTIME",
          "CENTRALEUROPEANSTANDARDTIME",
          "WCENTRALAFRICASTANDARDTIME",
          "NAMIBIASTANDARDTIME",
          "JORDANSTANDARDTIME",
          "GTBSTANDARDTIME",
          "MIDDLEEASTSTANDARDTIME",
          "EGYPTSTANDARDTIME",
          "SYRIASTANDARDTIME",
          "EEUROPESTANDARDTIME",
          "SOUTHAFRICASTANDARDTIME",
          "FLESTANDARDTIME",
          "TURKEYSTANDARDTIME",
          "ISRAELSTANDARDTIME",
          "KALININGRADSTANDARDTIME",
          "LIBYASTANDARDTIME",
          "ARABICSTANDARDTIME",
          "ARABSTANDARDTIME",
          "BELARUSSTANDARDTIME",
          "RUSSIANSTANDARDTIME",
          "EAFRICASTANDARDTIME",
          "IRANSTANDARDTIME",
          "ARABIANSTANDARDTIME",
          "AZERBAIJANSTANDARDTIME",
          "RUSSIATIMEZONE3",
          "MAURITIUSSTANDARDTIME",
          "GEORGIANSTANDARDTIME",
          "CAUCASUSSTANDARDTIME",
          "AFGHANISTANSTANDARDTIME",
          "WESTASIASTANDARDTIME",
          "EKATERINBURGSTANDARDTIME",
          "PAKISTANSTANDARDTIME",
          "INDIASTANDARDTIME",
          "SRILANKASTANDARDTIME",
          "NEPALSTANDARDTIME",
          "CENTRALASIASTANDARDTIME",
          "BANGLADESHSTANDARDTIME",
          "NCENTRALASIASTANDARDTIME",
          "MYANMARSTANDARDTIME",
          "SEASIASTANDARDTIME",
          "NORTHASIASTANDARDTIME",
          "CHINASTANDARDTIME",
          "NORTHASIAEASTSTANDARDTIME",
          "SINGAPORESTANDARDTIME",
          "WAUSTRALIASTANDARDTIME",
          "TAIPEISTANDARDTIME",
          "ULAANBAATARSTANDARDTIME",
          "TOKYOSTANDARDTIME",
          "KOREASTANDARDTIME",
          "YAKUTSKSTANDARDTIME",
          "CENAUSTRALIASTANDARDTIME",
          "AUSCENTRALSTANDARDTIME",
          "EAUSTRALIASTANDARDTIME",
          "AUSEASTERNSTANDARDTIME",
          "WESTPACIFICSTANDARDTIME",
          "TASMANIASTANDARDTIME",
          "MAGADANSTANDARDTIME",
          "VLADIVOSTOKSTANDARDTIME",
          "RUSSIATIMEZONE10",
          "CENTRALPACIFICSTANDARDTIME",
          "RUSSIATIMEZONE11",
          "NEWZEALANDSTANDARDTIME",
          "UTC+12",
          "FIJISTANDARDTIME",
          "KAMCHATKASTANDARDTIME",
          "TONGASTANDARDTIME",
          "SAMOASTANDARDTIME",
          "LINEISLANDSSTANDARDTIME",
          "AZORESSTANDARDTIME",
          "CAPEVERDESTANDARDTIME",
          "UTC02",
          "MIDATLANTICSTANDARDTIME",
          "ESOUTHAMERICASTANDARDTIME",
          "ARGENTINASTANDARDTIME",
          "SAEASTERNSTANDARDTIME",
          "GREENLANDSTANDARDTIME",
          "MONTEVIDEOSTANDARDTIME",
          "BAHIASTANDARDTIME",
          "NEWFOUNDLANDSTANDARDTIME",
          "PARAGUAYSTANDARDTIME",
          "ATLANTICSTANDARDTIME",
          "CENTRALBRAZILIANSTANDARDTIME",
          "SAWESTERNSTANDARDTIME",
          "PACIFICSASTANDARDTIME",
          "VENEZUELASTANDARDTIME",
          "SAPACIFICSTANDARDTIME",
          "EASTERNSTANDARDTIME",
          "USEASTERNSTANDARDTIME",
          "CENTRALAMERICASTANDARDTIME",
          "CENTRALSTANDARDTIME",
          "CENTRALSTANDARDTIME(MEXICO)",
          "CANADACENTRALSTANDARDTIME",
          "USMOUNTAINSTANDARDTIME",
          "MOUNTAINSTANDARDTIME(MEXICO)",
          "MOUNTAINSTANDARDTIME",
          "PACIFICSTANDARDTIME(MEXICO)",
          "PACIFICSTANDARDTIME",
          "ALASKANSTANDARDTIME",
          "HAWAIIANSTANDARDTIME",
          "UTC11",
          "DATELINESTANDARDTIME"
        ]
      },
      "PaymentTerm": {
        "type": "object",
        "properties": {
          "Bills": {
            "$ref": "#/components/schemas/Bill"
          },
          "Sales": {
            "$ref": "#/components/schemas/Bill"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/organisation/"
        }
      },
      "PaymentTermType": {
        "type": "string",
        "enum": [
          "DAYSAFTERBILLDATE",
          "DAYSAFTERBILLMONTH",
          "OFCURRENTMONTH",
          "OFFOLLOWINGMONTH"
        ]
      },
      "ExternalLink": {
        "type": "object",
        "properties": {
          "LinkType": {
            "type": "string",
            "description": "See External link types",
            "enum": [
              "Facebook",
              "GooglePlus",
              "LinkedIn",
              "Twitter",
              "Website"
            ]
          },
          "Url": {
            "type": "string",
            "description": "URL for service e.g. http://twitter.com/xeroapi"
          },
          "Description": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/organisation/"
        }
      },
      "Bill": {
        "type": "object",
        "properties": {
          "Day": {
            "type": "integer",
            "description": "Day of Month (0-31)"
          },
          "Type": {
            "$ref": "#/components/schemas/PaymentTermType"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/organisation/"
        }
      },
      "Overpayments": {
        "type": "object",
        "properties": {
          "Overpayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Overpayment"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Overpayment": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "See Overpayment Types",
            "enum": [
              "RECEIVE-OVERPAYMENT",
              "SPEND-OVERPAYMENT",
              "AROVERPAYMENT"
            ]
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "Date": {
            "type": "string",
            "description": "The date the overpayment is created YYYY-MM-DD",
            "x-is-msdate": true
          },
          "Status": {
            "type": "string",
            "description": "See Overpayment Status Codes",
            "enum": [
              "AUTHORISED",
              "PAID",
              "VOIDED"
            ]
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "LineItems": {
            "type": "array",
            "description": "See Overpayment Line Items",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "SubTotal": {
            "type": "number",
            "description": "The subtotal of the overpayment excluding taxes",
            "format": "double",
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "The total tax on the overpayment",
            "format": "double",
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "The total of the overpayment (subtotal + total tax)",
            "format": "double",
            "x-is-money": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of last update to the overpayment",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "OverpaymentID": {
            "type": "string",
            "description": "Xero generated unique identifier",
            "format": "uuid"
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate for a multicurrency overpayment. If no rate is specified, the XE.com day rate is used",
            "format": "double",
            "x-is-money": true
          },
          "RemainingCredit": {
            "type": "number",
            "description": "The remaining credit balance on the overpayment",
            "format": "double",
            "x-is-money": true
          },
          "Allocations": {
            "type": "array",
            "description": "See Allocations",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          },
          "AppliedAmount": {
            "type": "number",
            "description": "The amount of applied to an invoice",
            "format": "double",
            "example": 2
          },
          "Payments": {
            "type": "array",
            "description": "See Payments",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if a overpayment has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "Attachments": {
            "type": "array",
            "description": "See Attachments",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/overpayments/"
        }
      },
      "Payments": {
        "type": "object",
        "properties": {
          "Payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        },
        "x-isObjectArray": true
      },
      "PaymentDelete": {
        "required": [
          "Status"
        ],
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "description": "The status of the payment.",
            "default": "DELETED"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/payments/"
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "Invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "CreditNote": {
            "$ref": "#/components/schemas/CreditNote"
          },
          "Prepayment": {
            "$ref": "#/components/schemas/Prepayment"
          },
          "Overpayment": {
            "$ref": "#/components/schemas/Overpayment"
          },
          "InvoiceNumber": {
            "type": "string",
            "description": "Number of invoice or credit note you are applying payment to e.g.INV-4003"
          },
          "CreditNoteNumber": {
            "type": "string",
            "description": "Number of invoice or credit note you are applying payment to e.g. INV-4003"
          },
          "Account": {
            "$ref": "#/components/schemas/Account"
          },
          "Code": {
            "type": "string",
            "description": "Code of account you are using to make the payment e.g. 001 (note- not all accounts have a code value)"
          },
          "Date": {
            "type": "string",
            "description": "Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06",
            "x-is-msdate": true
          },
          "CurrencyRate": {
            "type": "number",
            "description": "Exchange rate when payment is received. Only used for non base currency invoices and credit notes e.g. 0.7500",
            "format": "double",
            "x-is-money": true
          },
          "Amount": {
            "type": "number",
            "description": "The amount of the payment. Must be less than or equal to the outstanding amount owing on the invoice e.g. 200.00",
            "format": "double",
            "x-is-money": true
          },
          "Reference": {
            "type": "string",
            "description": "An optional description for the payment e.g. Direct Debit"
          },
          "IsReconciled": {
            "type": "boolean",
            "description": "An optional parameter for the payment. A boolean indicating whether you would like the payment to be created as reconciled when using PUT, or whether a payment has been reconciled when using GET"
          },
          "Status": {
            "type": "string",
            "description": "The status of the payment.",
            "enum": [
              "AUTHORISED",
              "DELETED"
            ]
          },
          "PaymentType": {
            "type": "string",
            "description": "See Payment Types.",
            "readOnly": true,
            "enum": [
              "ACCRECPAYMENT",
              "ACCPAYPAYMENT",
              "ARCREDITPAYMENT",
              "APCREDITPAYMENT",
              "AROVERPAYMENTPAYMENT",
              "ARPREPAYMENTPAYMENT",
              "APPREPAYMENTPAYMENT",
              "APOVERPAYMENTPAYMENT"
            ]
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of last update to the payment",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "PaymentID": {
            "type": "string",
            "description": "The Xero identifier for an Payment e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid"
          },
          "BankAccountNumber": {
            "type": "string",
            "description": "The suppliers bank account number the payment is being made to"
          },
          "Particulars": {
            "type": "string",
            "description": "The suppliers bank account number the payment is being made to"
          },
          "Details": {
            "type": "string",
            "description": "The information to appear on the supplier's bank account"
          },
          "HasAccount": {
            "type": "boolean",
            "description": "A boolean to indicate if a contact has an validation errors",
            "example": false,
            "default": false
          },
          "HasValidationErrors": {
            "type": "boolean",
            "description": "A boolean to indicate if a contact has an validation errors",
            "example": false,
            "default": false
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/payments/"
        }
      },
      "Prepayments": {
        "type": "object",
        "properties": {
          "Prepayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prepayment"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Prepayment": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "See Prepayment Types",
            "enum": [
              "RECEIVE-PREPAYMENT",
              "SPEND-PREPAYMENT",
              "ARPREPAYMENT",
              "APPREPAYMENT"
            ]
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "Date": {
            "type": "string",
            "description": "The date the prepayment is created YYYY-MM-DD",
            "x-is-msdate": true
          },
          "Status": {
            "type": "string",
            "description": "See Prepayment Status Codes",
            "enum": [
              "AUTHORISED",
              "PAID",
              "VOIDED"
            ]
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "LineItems": {
            "type": "array",
            "description": "See Prepayment Line Items",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "SubTotal": {
            "type": "number",
            "description": "The subtotal of the prepayment excluding taxes",
            "format": "double",
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "The total tax on the prepayment",
            "format": "double",
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "The total of the prepayment(subtotal + total tax)",
            "format": "double",
            "x-is-money": true
          },
          "Reference": {
            "type": "string",
            "description": "Returns Invoice number field. Reference field isn't available.",
            "readOnly": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "UTC timestamp of last update to the prepayment",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "PrepaymentID": {
            "type": "string",
            "description": "Xero generated unique identifier",
            "format": "uuid"
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate for a multicurrency prepayment. If no rate is specified, the XE.com day rate is used",
            "format": "double",
            "x-is-money": true
          },
          "RemainingCredit": {
            "type": "number",
            "description": "The remaining credit balance on the prepayment",
            "format": "double",
            "x-is-money": true
          },
          "Allocations": {
            "type": "array",
            "description": "See Allocations",
            "items": {
              "$ref": "#/components/schemas/Allocation"
            }
          },
          "AppliedAmount": {
            "type": "number",
            "description": "The amount of applied to an invoice",
            "format": "double",
            "example": 2
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if a prepayment has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "Attachments": {
            "type": "array",
            "description": "See Attachments",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/prepayments/"
        }
      },
      "PurchaseOrders": {
        "type": "object",
        "properties": {
          "PurchaseOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrder"
            }
          }
        },
        "x-isObjectArray": true
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "LineItems": {
            "type": "array",
            "description": "See LineItems",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "Date": {
            "type": "string",
            "description": "Date purchase order was issued – YYYY-MM-DD. If the Date element is not specified then it will default to the current date based on the timezone setting of the organisation",
            "x-is-msdate": true
          },
          "DeliveryDate": {
            "type": "string",
            "description": "Date the goods are to be delivered – YYYY-MM-DD",
            "x-is-msdate": true
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "PurchaseOrderNumber": {
            "type": "string",
            "description": "Unique alpha numeric code identifying purchase order (when missing will auto-generate from your Organisation Invoice Settings)"
          },
          "Reference": {
            "type": "string",
            "description": "Additional reference number"
          },
          "BrandingThemeID": {
            "type": "string",
            "description": "See BrandingThemes",
            "format": "uuid"
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "Status": {
            "type": "string",
            "description": "See Purchase Order Status Codes",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "AUTHORISED",
              "BILLED",
              "DELETED"
            ]
          },
          "SentToContact": {
            "type": "boolean",
            "description": "Boolean to set whether the purchase order should be marked as “sent”. This can be set only on purchase orders that have been approved or billed"
          },
          "DeliveryAddress": {
            "type": "string",
            "description": "The address the goods are to be delivered to"
          },
          "AttentionTo": {
            "type": "string",
            "description": "The person that the delivery is going to"
          },
          "Telephone": {
            "type": "string",
            "description": "The phone number for the person accepting the delivery"
          },
          "DeliveryInstructions": {
            "type": "string",
            "description": "A free text feild for instructions (500 characters max)"
          },
          "ExpectedArrivalDate": {
            "type": "string",
            "description": "The date the goods are expected to arrive.",
            "x-is-msdate": true
          },
          "PurchaseOrderID": {
            "type": "string",
            "description": "Xero generated unique identifier for purchase order",
            "format": "uuid"
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate for a multicurrency purchase order. If no rate is specified, the XE.com day rate is used.",
            "format": "double",
            "x-is-money": true
          },
          "SubTotal": {
            "type": "number",
            "description": "Total of purchase order excluding taxes",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "Total tax on purchase order",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Total of discounts applied on the purchase order line items",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if a purchase order has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "Warnings": {
            "type": "array",
            "description": "Displays array of warning messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "Attachments": {
            "type": "array",
            "description": "Displays array of attachments from the API",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/purchase-orders/"
        }
      },
      "Quotes": {
        "type": "object",
        "properties": {
          "Quotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Quote"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Quote": {
        "type": "object",
        "properties": {
          "QuoteID": {
            "type": "string",
            "description": "QuoteID GUID is automatically generated and is returned after create or GET.",
            "format": "uuid"
          },
          "QuoteNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Unique alpha numeric code identifying a quote (Max Length = 255)"
          },
          "Reference": {
            "maxLength": 4000,
            "type": "string",
            "description": "Additional reference number"
          },
          "Terms": {
            "maxLength": 4000,
            "type": "string",
            "description": "Terms of the quote"
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "LineItems": {
            "type": "array",
            "description": "See LineItems",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "Date": {
            "type": "string",
            "description": "Date quote was issued – YYYY-MM-DD. If the Date element is not specified it will default to the current date based on the timezone setting of the organisation",
            "x-is-msdate": true
          },
          "DateString": {
            "type": "string",
            "description": "Date the quote was issued (YYYY-MM-DD)"
          },
          "ExpiryDate": {
            "type": "string",
            "description": "Date the quote expires – YYYY-MM-DD.",
            "x-is-msdate": true
          },
          "ExpiryDateString": {
            "type": "string",
            "description": "Date the quote expires – YYYY-MM-DD."
          },
          "Status": {
            "$ref": "#/components/schemas/QuoteStatusCodes"
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "CurrencyRate": {
            "type": "number",
            "description": "The currency rate for a multicurrency quote",
            "format": "double"
          },
          "SubTotal": {
            "type": "number",
            "description": "Total of quote excluding taxes.",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "Total tax on quote",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "Total of Quote tax inclusive (i.e. SubTotal + TotalTax). This will be ignored if it doesn’t equal the sum of the LineAmounts",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "TotalDiscount": {
            "type": "number",
            "description": "Total of discounts applied on the quote line items",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "Title": {
            "maxLength": 100,
            "type": "string",
            "description": "Title text for the quote"
          },
          "Summary": {
            "maxLength": 3000,
            "type": "string",
            "description": "Summary text for the quote"
          },
          "BrandingThemeID": {
            "type": "string",
            "description": "See BrandingThemes",
            "format": "uuid"
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/QuoteLineAmountTypes"
          },
          "StatusAttributeString": {
            "type": "string",
            "description": "A string to indicate if a invoice status"
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/Quotes/"
        }
      },
      "QuoteLineAmountTypes": {
        "type": "string",
        "description": "Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types",
        "enum": [
          "EXCLUSIVE",
          "INCLUSIVE",
          "NOTAX"
        ]
      },
      "QuoteStatusCodes": {
        "type": "string",
        "description": "The status of the quote.",
        "enum": [
          "DRAFT",
          "SENT",
          "DECLINED",
          "ACCEPTED",
          "INVOICED",
          "DELETED"
        ]
      },
      "Receipts": {
        "type": "object",
        "properties": {
          "Receipts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Receipt"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Receipt": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "description": "Date of receipt – YYYY-MM-DD",
            "x-is-msdate": true
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "LineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "Reference": {
            "type": "string",
            "description": "Additional reference number"
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "SubTotal": {
            "type": "number",
            "description": "Total of receipt excluding taxes",
            "format": "double",
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "Total tax on receipt",
            "format": "double",
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "Total of receipt tax inclusive (i.e. SubTotal + TotalTax)",
            "format": "double",
            "x-is-money": true
          },
          "ReceiptID": {
            "type": "string",
            "description": "Xero generated unique identifier for receipt",
            "format": "uuid"
          },
          "Status": {
            "type": "string",
            "description": "Current status of receipt – see status types",
            "enum": [
              "DRAFT",
              "SUBMITTED",
              "AUTHORISED",
              "DECLINED",
              "VOIDED"
            ]
          },
          "ReceiptNumber": {
            "type": "string",
            "description": "Xero generated sequence number for receipt in current claim for a given user",
            "readOnly": true
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Last modified date UTC format",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if a receipt has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "Url": {
            "type": "string",
            "description": "URL link to a source document – shown as “Go to [appName]” in the Xero app",
            "readOnly": true
          },
          "ValidationErrors": {
            "type": "array",
            "description": "Displays array of validation error messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "Warnings": {
            "type": "array",
            "description": "Displays array of warning messages from the API",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "Attachments": {
            "type": "array",
            "description": "Displays array of attachments from the API",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/receipts/"
        }
      },
      "RepeatingInvoices": {
        "type": "object",
        "properties": {
          "RepeatingInvoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepeatingInvoice"
            }
          }
        },
        "x-isObjectArray": true
      },
      "RepeatingInvoice": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "See Invoice Types",
            "enum": [
              "ACCPAY",
              "ACCREC"
            ]
          },
          "Contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "Schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "LineItems": {
            "type": "array",
            "description": "See LineItems",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          },
          "LineAmountTypes": {
            "$ref": "#/components/schemas/LineAmountTypes"
          },
          "Reference": {
            "type": "string",
            "description": "ACCREC only – additional reference number"
          },
          "BrandingThemeID": {
            "type": "string",
            "description": "See BrandingThemes",
            "format": "uuid"
          },
          "CurrencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "Status": {
            "type": "string",
            "description": "One of the following - DRAFT or AUTHORISED – See Invoice Status Codes",
            "enum": [
              "DRAFT",
              "AUTHORISED",
              "DELETED"
            ]
          },
          "SubTotal": {
            "type": "number",
            "description": "Total of invoice excluding taxes",
            "format": "double",
            "x-is-money": true
          },
          "TotalTax": {
            "type": "number",
            "description": "Total tax on invoice",
            "format": "double",
            "x-is-money": true
          },
          "Total": {
            "type": "number",
            "description": "Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)",
            "format": "double",
            "x-is-money": true
          },
          "RepeatingInvoiceID": {
            "type": "string",
            "description": "Xero generated unique identifier for repeating invoice template",
            "format": "uuid"
          },
          "ID": {
            "type": "string",
            "description": "Xero generated unique identifier for repeating invoice template",
            "format": "uuid"
          },
          "HasAttachments": {
            "type": "boolean",
            "description": "boolean to indicate if an invoice has an attachment",
            "readOnly": true,
            "example": false,
            "default": false
          },
          "Attachments": {
            "type": "array",
            "description": "Displays array of attachments from the API",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/repeating-invoices/"
        }
      },
      "ReportWithRows": {
        "type": "object",
        "properties": {
          "Reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportWithRow"
            }
          }
        }
      },
      "ReportWithRow": {
        "properties": {
          "ReportID": {
            "type": "string",
            "description": "Report id"
          },
          "ReportName": {
            "type": "string",
            "description": "Name of the report"
          },
          "ReportTitle": {
            "type": "string",
            "description": "Title of the report"
          },
          "ReportType": {
            "type": "string",
            "description": "The type of report (BalanceSheet,ProfitLoss, etc)"
          },
          "ReportTitles": {
            "type": "array",
            "description": "Report titles array (3 to 4 strings with the report name, orgnisation name and time frame of report)",
            "items": {
              "type": "string"
            }
          },
          "ReportDate": {
            "type": "string",
            "description": "Date of report"
          },
          "Rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportRows"
            }
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Updated Date",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportFields"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/reports/"
        }
      },
      "ReportRows": {
        "type": "object",
        "properties": {
          "RowType": {
            "$ref": "#/components/schemas/RowType"
          },
          "Title": {
            "type": "string"
          },
          "Cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportCell"
            }
          },
          "Rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportRow"
            }
          }
        }
      },
      "RowType": {
        "type": "string",
        "enum": [
          "Header",
          "Section",
          "Row",
          "SummaryRow"
        ]
      },
      "ReportRow": {
        "type": "object",
        "properties": {
          "RowType": {
            "$ref": "#/components/schemas/RowType"
          },
          "Title": {
            "type": "string"
          },
          "Cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportCell"
            }
          }
        }
      },
      "ReportCell": {
        "type": "object",
        "properties": {
          "Value": {
            "type": "string"
          },
          "Attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportAttribute"
            }
          }
        }
      },
      "ReportAttribute": {
        "properties": {
          "Id": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/reports/"
        }
      },
      "ReportFields": {
        "type": "object",
        "properties": {
          "FieldID": {
            "type": "string",
            "format": "uuid"
          },
          "Description": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        }
      },
      "Reports": {
        "type": "object",
        "properties": {
          "Reports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Report"
            }
          }
        },
        "x-isObjectArray": true
      },
      "Report": {
        "properties": {
          "ReportID": {
            "type": "string",
            "description": "See Prepayment Types"
          },
          "ReportName": {
            "type": "string",
            "description": "See Prepayment Types"
          },
          "ReportType": {
            "type": "string",
            "description": "See Prepayment Types",
            "enum": [
              "AgedPayablesByContact"
            ]
          },
          "ReportTitle": {
            "type": "string",
            "description": "See Prepayment Types"
          },
          "ReportDate": {
            "type": "string",
            "description": "Date of report"
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Updated Date",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "Contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenNinetyNineContact"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/reports/"
        }
      },
      "TenNinetyNineContact": {
        "properties": {
          "Box1": {
            "type": "number",
            "description": "Box 1 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box2": {
            "type": "number",
            "description": "Box 2 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box3": {
            "type": "number",
            "description": "Box 3 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box4": {
            "type": "number",
            "description": "Box 4 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box5": {
            "type": "number",
            "description": "Box 5 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box6": {
            "type": "number",
            "description": "Box 6 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box7": {
            "type": "number",
            "description": "Box 7 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box8": {
            "type": "number",
            "description": "Box 8 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box9": {
            "type": "number",
            "description": "Box 9 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box10": {
            "type": "number",
            "description": "Box 10 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box11": {
            "type": "number",
            "description": "Box 11 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box13": {
            "type": "number",
            "description": "Box 13 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Box14": {
            "type": "number",
            "description": "Box 14 on 1099 Form",
            "format": "double",
            "x-is-money": true
          },
          "Name": {
            "type": "string",
            "description": "Contact name on 1099 Form"
          },
          "FederalTaxIDType": {
            "type": "string",
            "description": "Contact Fed Tax ID type"
          },
          "City": {
            "type": "string",
            "description": "Contact city on 1099 Form"
          },
          "Zip": {
            "type": "string",
            "description": "Contact zip on 1099 Form"
          },
          "State": {
            "type": "string",
            "description": "Contact State on 1099 Form"
          },
          "Email": {
            "type": "string",
            "description": "Contact email on 1099 Form"
          },
          "StreetAddress": {
            "type": "string",
            "description": "Contact address on 1099 Form"
          },
          "TaxID": {
            "type": "string",
            "description": "Contact tax id on 1099 Form"
          },
          "ContactId": {
            "type": "string",
            "description": "Contact contact id",
            "format": "uuid"
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "Period": {
            "type": "integer",
            "description": "Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)"
          },
          "Unit": {
            "type": "string",
            "description": "One of the following - WEEKLY or MONTHLY",
            "enum": [
              "WEEKLY",
              "MONTHLY"
            ]
          },
          "DueDate": {
            "type": "integer",
            "description": "Integer used with due date type e.g 20 (of following month), 31 (of current month)"
          },
          "DueDateType": {
            "type": "string",
            "description": "the payment terms",
            "enum": [
              "DAYSAFTERBILLDATE",
              "DAYSAFTERBILLMONTH",
              "DAYSAFTERINVOICEDATE",
              "DAYSAFTERINVOICEMONTH",
              "OFCURRENTMONTH",
              "OFFOLLOWINGMONTH"
            ]
          },
          "StartDate": {
            "type": "string",
            "description": "Date the first invoice of the current version of the repeating schedule was generated (changes when repeating invoice is edited)",
            "x-is-msdate": true
          },
          "NextScheduledDate": {
            "type": "string",
            "description": "The calendar date of the next invoice in the schedule to be generated",
            "x-is-msdate": true
          },
          "EndDate": {
            "type": "string",
            "description": "Invoice end date – only returned if the template has an end date set",
            "x-is-msdate": true
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/repeating-invoices/"
        }
      },
      "TaxRates": {
        "type": "object",
        "properties": {
          "TaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxRate"
            }
          }
        },
        "x-isObjectArray": true
      },
      "TaxType": {
        "type": "string",
        "description": "See Tax Types – can only be used on update calls",
        "enum": [
          "OUTPUT",
          "INPUT",
          "CAPEXINPUT",
          "EXEMPTEXPORT",
          "EXEMPTEXPENSES",
          "EXEMPTCAPITAL",
          "EXEMPTOUTPUT",
          "INPUTTAXED",
          "BASEXCLUDED",
          "GSTONCAPIMPORTS",
          "GSTONIMPORTS",
          "NONE",
          "INPUT2",
          "ZERORATED",
          "OUTPUT2",
          "CAPEXINPUT2",
          "CAPEXOUTPUT",
          "CAPEXOUTPUT2",
          "CAPEXSRINPUT",
          "CAPEXSROUTPUT",
          "ECACQUISITIONS",
          "ECZRINPUT",
          "ECZROUTPUT",
          "ECZROUTPUTSERVICES",
          "EXEMPTINPUT",
          "REVERSECHARGES",
          "RRINPUT",
          "RROUTPUT",
          "SRINPUT",
          "SROUTPUT",
          "ZERORATEDINPUT",
          "ZERORATEDOUTPUT",
          "BLINPUT",
          "DSOUTPUT",
          "EPINPUT",
          "ES33OUTPUT",
          "ESN33OUTPUT",
          "IGDSINPUT2",
          "IMINPUT2",
          "MEINPUT",
          "NRINPUT",
          "OPINPUT",
          "OSOUTPUT",
          "TXESSINPUT",
          "TXN33INPUT",
          "TXPETINPUT",
          "TXREINPUT",
          "INPUT3",
          "INPUT4",
          "OUTPUT3",
          "OUTPUT4",
          "SROUTPUT2",
          "TXCA",
          "SRCAS",
          "BLINPUT2",
          "DRCHARGESUPPLY20",
          "DRCHARGE20",
          "DRCHARGESUPPLY5",
          "DRCHARGE5"
        ]
      },
      "TaxRate": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of tax rate"
          },
          "TaxType": {
            "type": "string",
            "description": "The tax type"
          },
          "TaxComponents": {
            "type": "array",
            "description": "See TaxComponents",
            "items": {
              "$ref": "#/components/schemas/TaxComponent"
            }
          },
          "Status": {
            "type": "string",
            "description": "See Status Codes",
            "enum": [
              "ACTIVE",
              "DELETED",
              "ARCHIVED",
              "PENDING"
            ]
          },
          "ReportTaxType": {
            "type": "string",
            "description": "See ReportTaxTypes",
            "enum": [
              "AVALARA",
              "BASEXCLUDED",
              "CAPITALSALESOUTPUT",
              "CAPITALEXPENSESINPUT",
              "ECOUTPUT",
              "ECOUTPUTSERVICES",
              "ECINPUT",
              "ECACQUISITIONS",
              "EXEMPTEXPENSES",
              "EXEMPTINPUT",
              "EXEMPTOUTPUT",
              "GSTONIMPORTS",
              "INPUT",
              "INPUTTAXED",
              "MOSSSALES",
              "NONE",
              "NONEOUTPUT",
              "OUTPUT",
              "PURCHASESINPUT",
              "SALESOUTPUT",
              "EXEMPTCAPITAL",
              "EXEMPTEXPORT",
              "CAPITALEXINPUT",
              "GSTONCAPIMPORTS",
              "GSTONCAPITALIMPORTS",
              "REVERSECHARGES",
              "PAYMENTS",
              "INVOICE",
              "CASH",
              "ACCRUAL",
              "FLATRATECASH",
              "FLATRATEACCRUAL",
              "ACCRUALS",
              "TXCA",
              "SRCAS",
              "DSOUTPUT",
              "BLINPUT2",
              "EPINPUT",
              "IMINPUT2",
              "MEINPUT",
              "IGDSINPUT2",
              "ESN33OUTPUT",
              "OPINPUT",
              "OSOUTPUT",
              "TXN33INPUT",
              "TXESSINPUT",
              "TXREINPUT",
              "TXPETINPUT",
              "NRINPUT",
              "ES33OUTPUT",
              "ZERORATEDINPUT",
              "ZERORATEDOUTPUT",
              "DRCHARGESUPPLY",
              "DRCHARGE",
              "CAPINPUT",
              "CAPIMPORTS",
              "IMINPUT",
              "INPUT2",
              "CIUINPUT",
              "SRINPUT",
              "OUTPUT2",
              "SROUTPUT",
              "CAPOUTPUT",
              "SROUTPUT2",
              "CIUOUTPUT",
              "ZROUTPUT",
              "ZREXPORT",
              "ACC28PLUS",
              "ACCUPTO28",
              "OTHEROUTPUT",
              "SHOUTPUT",
              "ZRINPUT",
              "BADDEBT",
              "OTHERINPUT"
            ]
          },
          "CanApplyToAssets": {
            "type": "boolean",
            "description": "Boolean to describe if tax rate can be used for asset accounts i.e.  true,false",
            "readOnly": true
          },
          "CanApplyToEquity": {
            "type": "boolean",
            "description": "Boolean to describe if tax rate can be used for equity accounts i.e true,false",
            "readOnly": true
          },
          "CanApplyToExpenses": {
            "type": "boolean",
            "description": "Boolean to describe if tax rate can be used for expense accounts  i.e. true,false",
            "readOnly": true
          },
          "CanApplyToLiabilities": {
            "type": "boolean",
            "description": "Boolean to describe if tax rate can be used for liability accounts  i.e. true,false",
            "readOnly": true
          },
          "CanApplyToRevenue": {
            "type": "boolean",
            "description": "Boolean to describe if tax rate can be used for revenue accounts i.e. true,false",
            "readOnly": true
          },
          "DisplayTaxRate": {
            "type": "number",
            "description": "Tax Rate (decimal to 4dp) e.g 12.5000",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          },
          "EffectiveRate": {
            "type": "number",
            "description": "Effective Tax Rate (decimal to 4dp) e.g 12.5000",
            "format": "double",
            "readOnly": true,
            "x-is-money": true
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/tax-rates/"
        }
      },
      "TaxComponent": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of Tax Component"
          },
          "Rate": {
            "type": "number",
            "description": "Tax Rate (up to 4dp)",
            "format": "double",
            "x-is-money": true
          },
          "IsCompound": {
            "type": "boolean",
            "description": "Boolean to describe if Tax rate is compounded."
          },
          "IsNonRecoverable": {
            "type": "boolean",
            "description": "Boolean to describe if tax rate is non-recoverable. Non-recoverable rates are only applicable to Canadian organisations"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/tax-rates/"
        }
      },
      "TrackingCategories": {
        "type": "object",
        "properties": {
          "TrackingCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingCategory"
            }
          }
        },
        "x-isObjectArray": true
      },
      "TrackingCategory": {
        "type": "object",
        "properties": {
          "TrackingCategoryID": {
            "type": "string",
            "description": "The Xero identifier for a tracking category e.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid"
          },
          "TrackingOptionID": {
            "type": "string",
            "description": "The Xero identifier for a tracking option e.g. dc54c220-0140-495a-b925-3246adc0075f",
            "format": "uuid"
          },
          "Name": {
            "maxLength": 100,
            "type": "string",
            "description": "The name of the tracking category e.g. Department, Region (max length = 100)"
          },
          "Option": {
            "maxLength": 100,
            "type": "string",
            "description": "The option name of the tracking option e.g. East, West (max length = 100)"
          },
          "Status": {
            "type": "string",
            "description": "The status of a tracking category",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DELETED"
            ]
          },
          "Options": {
            "type": "array",
            "description": "See Tracking Options",
            "items": {
              "$ref": "#/components/schemas/TrackingOption"
            }
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/tracking-categories/"
        }
      },
      "TrackingOptions": {
        "type": "object",
        "properties": {
          "Options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingOption"
            }
          }
        },
        "x-isObjectArray": true
      },
      "TrackingOption": {
        "type": "object",
        "properties": {
          "TrackingOptionID": {
            "type": "string",
            "description": "The Xero identifier for a tracking optione.g. ae777a87-5ef3-4fa0-a4f0-d10e1f13073a",
            "format": "uuid"
          },
          "Name": {
            "maxLength": 50,
            "type": "string",
            "description": "The name of the tracking option e.g. Marketing, East (max length = 50)"
          },
          "Status": {
            "type": "string",
            "description": "The status of a tracking option",
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DELETED"
            ]
          },
          "TrackingCategoryID": {
            "type": "string",
            "description": "Filter by a tracking categorye.g. 297c2dc5-cc47-4afd-8ec8-74990b8761e9",
            "format": "uuid"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/tracking-categories/"
        }
      },
      "SalesTrackingCategory": {
        "type": "object",
        "properties": {
          "TrackingCategoryName": {
            "type": "string",
            "description": "The default sales tracking category name for contacts"
          },
          "TrackingOptionName": {
            "type": "string",
            "description": "The default purchase tracking category name for contacts"
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/tracking-categories/"
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "x-isObjectArray": true
      },
      "User": {
        "type": "object",
        "properties": {
          "UserID": {
            "type": "string",
            "description": "Xero identifier",
            "format": "uuid"
          },
          "EmailAddress": {
            "type": "string",
            "description": "Email address of user"
          },
          "FirstName": {
            "type": "string",
            "description": "First name of user"
          },
          "LastName": {
            "type": "string",
            "description": "Last name of user"
          },
          "UpdatedDateUTC": {
            "type": "string",
            "description": "Timestamp of last change to user",
            "readOnly": true,
            "example": "/Date(1573755038314)/",
            "x-is-msdate-time": true
          },
          "IsSubscriber": {
            "type": "boolean",
            "description": "Boolean to indicate if user is the subscriber"
          },
          "OrganisationRole": {
            "type": "string",
            "description": "User role that defines permissions in Xero and via API (READONLY, INVOICEONLY, STANDARD, FINANCIALADVISER, etc)",
            "enum": [
              "READONLY",
              "INVOICEONLY",
              "STANDARD",
              "FINANCIALADVISER",
              "MANAGEDCLIENT",
              "CASHBOOKCLIENT",
              "UNKNOWN"
            ]
          }
        },
        "externalDocs": {
          "url": "http://developer.xero.com/documentation/api/users/"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "ErrorNumber": {
            "type": "integer",
            "description": "Exception number"
          },
          "Type": {
            "type": "string",
            "description": "Exception type"
          },
          "Message": {
            "type": "string",
            "description": "Exception message"
          },
          "Elements": {
            "type": "array",
            "description": "Array of Elements of validation Errors",
            "items": {
              "$ref": "#/components/schemas/Element"
            }
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/http-response-codes"
        }
      },
      "Element": {
        "type": "object",
        "properties": {
          "ValidationErrors": {
            "type": "array",
            "description": "Array of Validation Error message",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "BatchPaymentID": {
            "type": "string",
            "description": "Unique ID for batch payment object with validation error",
            "format": "uuid"
          },
          "BankTransactionID": {
            "type": "string",
            "format": "uuid"
          },
          "CreditNoteID": {
            "type": "string",
            "format": "uuid"
          },
          "ContactID": {
            "type": "string",
            "format": "uuid"
          },
          "InvoiceID": {
            "type": "string",
            "format": "uuid"
          },
          "ItemID": {
            "type": "string",
            "format": "uuid"
          },
          "PurchaseOrderID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/http-response-codes"
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "description": "Validation error message"
          }
        },
        "externalDocs": {
          "url": "https://developer.xero.com/documentation/api/http-response-codes"
        }
      }
    },
    "responses": {
      "400Error": {
        "description": "A failed request due to validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "HistoryRecordCreated": {
        "description": "Success - return response of type HistoryRecords array of HistoryRecord objects",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HistoryRecords"
            },
            "example": "{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }"
          }
        }
      },
      "HistoryRetrieved": {
        "description": "Success - return response of HistoryRecords array of 0 to N HistoryRecord",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HistoryRecords"
            },
            "example": "{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\", \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\": \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\": \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\", \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Attached the file sample2.jpg through the Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\", \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\": \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\", \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00.\" } ] }"
          }
        }
      }
    },
    "parameters": {
      "requiredHeader": {
        "name": "xero-tenant-id",
        "in": "header",
        "description": "Xero identifier for Tenant",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "YOUR_XERO_TENANT_ID"
      },
      "summarizeErrors": {
        "name": "summarizeErrors",
        "in": "query",
        "description": "If false return 200 OK and mix of successfully created obejcts and any with validation errors",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "example": true
      },
      "unitdp": {
        "name": "unitdp",
        "in": "query",
        "description": "e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four decimal places for unit amounts",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer"
        },
        "example": 4
      },
      "ifModifiedSince": {
        "name": "If-Modified-Since",
        "in": "header",
        "description": "Only records created or modified since this timestamp will be returned",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "example": "2020-02-06T12:17:43.202-08:00"
      },
      "includeOnline": {
        "name": "IncludeOnline",
        "in": "query",
        "description": "Allows an attachment to be seen by the end customer within their online invoice",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "example": true
      }
    },
    "requestBodies": {
      "historyRecords": {
        "description": "HistoryRecords containing an array of HistoryRecord objects in body of request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HistoryRecords"
            },
            "example": "{ historyRecords:[ { details :\"Hello World\" } ] }"
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "For more information",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.xero.com/identity/connect/authorize",
            "tokenUrl": "https://identity.xero.com/connect/token",
            "scopes": {
              "email": "Grant read-only access to your email",
              "openid": "Grant read-only access to your open id",
              "profile": "your profile information",
              "accounting.transactions": "Grant read-write access to bank transactions, credit notes, invoices, repeating invoices",
              "accounting.transactions.read": "Grant read-only access to invoices",
              "accounting.reports.read": "Grant read-only access to accounting reports",
              "accounting.reports.tenninetynine.read": "Grant read-only access to 1099 reports",
              "accounting.journals.read": "Grant read-only access to journals",
              "accounting.settings": "Grant read-write access to organisation and account settings",
              "accounting.settings.read": "Grant read-only access to organisation and account settings",
              "accounting.contacts": "Grant read-write access to contacts and contact groups",
              "accounting.contacts.read": "Grant read-only access to contacts and contact groups",
              "accounting.attachments": "Grant read-write access to attachments",
              "accounting.attachments.read": "Grant read-only access to attachments",
              "assets": "Grant read-write access to assets",
              "assets.read": "Grant read-only access to fixed assets",
              "bankfeeds": "Grant read-write access to bankfeeds",
              "files": "Grant read-write access to files and folders",
              "files.read": "Grant read-only access to files and folders",
              "payroll": "Grant read-write access to payroll",
              "payroll.read": "Grant read-only access to payroll",
              "payroll.employees": "Grant read-write access to payroll employees",
              "payroll.employees.read": "Grant read-only access to payroll employees",
              "payroll.leaveapplications": "Grant read-write access to payroll leaveapplications",
              "payroll.leaveapplications.read": "Grant read-only access to payroll leaveapplications",
              "payroll.payitems": "Grant read-write access to payroll payitems",
              "payroll.payitems.read": "Grant read-only access to payroll payitems",
              "payroll.payrollcalendars": "Grant read-write access to payroll calendars",
              "payroll.payrollcalendars.read": "Grant read-only access to payroll calendars",
              "payroll.payruns": "Grant read-write access to payroll payruns",
              "payroll.payruns.read": "Grant read-only access to payroll payruns",
              "payroll.payslip": "Grant read-write access to payroll payslips",
              "payroll.payslip.read": "Grant read-only access to payroll payslips",
              "payroll.settings.read": "Grant read-only access to payroll settings",
              "payroll.superfunds": "Grant read-write access to payroll superfunds",
              "payroll.superfunds.read": "Grant read-only access to payroll superfunds",
              "payroll.superfundproducts.read": "Grant read-only access to payroll superfundproducts",
              "payroll.timesheets": "Grant read-write access to payroll timesheets",
              "payroll.timesheets.read": "Grant read-only access to payroll timesheets",
              "paymentservices": "Grant read-write access to payment services",
              "projects": "Grant read-write access to projects",
              "projects.read": "Grant read-only access to projects"
            }
          }
        }
      }
    }
  }
}